{
  "_args": [
    [
      {
        "raw": "postcss-preset-env@^3.2.2",
        "scope": null,
        "escapedName": "postcss-preset-env",
        "name": "postcss-preset-env",
        "rawSpec": "^3.2.2",
        "spec": ">=3.2.2 <4.0.0",
        "type": "range"
      },
      "C:\\Users\\Alexandre\\VoiceWatcher\\node_modules\\precss"
    ]
  ],
  "_from": "postcss-preset-env@^3.2.2",
  "_hasShrinkwrap": false,
  "_id": "postcss-preset-env@3.5.0",
  "_location": "/postcss-preset-env",
  "_nodeVersion": "9.8.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/postcss-preset-env_3.5.0_1522957277785_0.5885794076048176"
  },
  "_npmUser": {
    "name": "jonathantneal",
    "email": "jonathantneal@hotmail.com"
  },
  "_npmVersion": "5.7.1",
  "_phantomChildren": {
    "babel-runtime": "6.26.0",
    "chalk": "2.4.2",
    "supports-color": "5.5.0"
  },
  "_requested": {
    "raw": "postcss-preset-env@^3.2.2",
    "scope": null,
    "escapedName": "postcss-preset-env",
    "name": "postcss-preset-env",
    "rawSpec": "^3.2.2",
    "spec": ">=3.2.2 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/precss"
  ],
  "_resolved": "https://registry.npmjs.org/postcss-preset-env/-/postcss-preset-env-3.5.0.tgz",
  "_shasum": "b3aae2c65e5b3fa61d735b70392fa758a665b785",
  "_shrinkwrap": null,
  "_spec": "postcss-preset-env@^3.2.2",
  "_where": "C:\\Users\\Alexandre\\VoiceWatcher\\node_modules\\precss",
  "author": {
    "name": "Jonathan Neal",
    "email": "jonathantneal@hotmail.com"
  },
  "bugs": {
    "url": "https://github.com/jonathantneal/postcss-preset-env/issues"
  },
  "dependencies": {
    "@csstools/postcss-image-set-function": "^1.0.0",
    "browserslist": "^3.2.4",
    "caniuse-lite": "^1.0.30000823",
    "cssdb": "^1.6.0",
    "postcss": "^6.0.21",
    "postcss-apply": "^0.9.0",
    "postcss-attribute-case-insensitive": "^2.0.0",
    "postcss-color-hex-alpha": "^3.0.0",
    "postcss-color-mod-function": "^2.4.2",
    "postcss-color-rebeccapurple": "^3.0.0",
    "postcss-color-rgb": "^2.0.0",
    "postcss-custom-media": "^6.0.0",
    "postcss-custom-properties": "^7.0.0",
    "postcss-custom-selectors": "^4.0.1",
    "postcss-dir-pseudo-class": "^3.0.0",
    "postcss-focus-visible": "^2.0.0",
    "postcss-font-family-system-ui": "^3.0.0",
    "postcss-font-variant": "^3.0.0",
    "postcss-initial": "^2.0.0",
    "postcss-logical": "^1.1.1",
    "postcss-media-minmax": "^3.0.0",
    "postcss-nesting": "^4.2.1",
    "postcss-page-break": "^1.0.0",
    "postcss-pseudo-class-any-link": "^4.0.0",
    "postcss-replace-overflow-wrap": "^2.0.0",
    "postcss-selector-matches": "^3.0.1",
    "postcss-selector-not": "^3.0.1"
  },
  "description": "Convert modern CSS into something browsers understand",
  "devDependencies": {
    "babel-core": "^6.26.0",
    "babel-eslint": "^8.2.2",
    "babel-preset-env": "^1.6.1",
    "echint": "^4.0.1",
    "eslint": "^4.19.1",
    "eslint-config-dev": "^2.0.0",
    "postcss-simple-vars": "^4.1.0",
    "postcss-tape": "^2.2.0",
    "pre-commit": "^1.2.2",
    "rollup": "^0.57.1",
    "rollup-plugin-babel": "^3.0.3"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-1I7ve+XzmNLJMZDORLOjSpY28t2H1qADEUcp2tQzuLBxAsbWMBUTDpSPsCKBduoqd4zWuH4bI/04W4T4hveHQw==",
    "shasum": "b3aae2c65e5b3fa61d735b70392fa758a665b785",
    "tarball": "https://registry.npmjs.org/postcss-preset-env/-/postcss-preset-env-3.5.0.tgz",
    "fileCount": 10,
    "unpackedSize": 37642
  },
  "engines": {
    "node": ">=4.0.0"
  },
  "eslintConfig": {
    "extends": "dev",
    "parser": "babel-eslint"
  },
  "files": [
    "index.cjs.js",
    "index.es.js",
    "lib"
  ],
  "gitHead": "6c148c92bbf0c0646579fbe1217d5379f27ab7a0",
  "homepage": "https://github.com/jonathantneal/postcss-preset-env#readme",
  "keywords": [
    "postcss",
    "css",
    "postcss-plugin",
    "specifications",
    "specs",
    "features",
    "lists",
    "stages",
    "w3c",
    "csswg",
    "future",
    "next"
  ],
  "license": "CC0-1.0",
  "main": "index.cjs.js",
  "maintainers": [
    {
      "name": "jonathantneal",
      "email": "jonathantneal@hotmail.com"
    }
  ],
  "module": "index.es.js",
  "name": "postcss-preset-env",
  "optionalDependencies": {},
  "readme": "# PostCSS Preset Env [<img src=\"https://postcss.github.io/postcss/logo.svg\" alt=\"PostCSS Logo\" width=\"90\" height=\"90\" align=\"right\">][postcss]\n\n[![NPM Version][npm-img]][npm-url]\n[![Linux Build Status][cli-img]][cli-url]\n[![Windows Build Status][win-img]][win-url]\n[![Gitter Chat][git-img]][git-url]\n\n[PostCSS Preset Env] lets you convert modern CSS into something most browsers\ncan understand, determining the polyfills you need based on your targeted\nbrowsers or runtime environments.\n\n```sh\nnpm install postcss-preset-env\n```\n\n```css\n@custom-media --viewport-medium (width <= 50rem);\n@custom-selector :--heading h1, h2, h3, h4, h5, h6;\n\n:root {\n  --mainColor: #12345678;\n}\n\nbody {\n  color: var(--mainColor);\n  font-family: system-ui;\n  overflow-wrap: break-word;\n}\n\n:--heading {\n  background-image: image-set(url(img/heading.png) 1x, url(img/heading@2x.png) 2x);\n\n  @media (--viewport-medium) {\n    margin-block: 0;\n  }\n}\n\na {\n  color: rebeccapurple;\n\n  &:hover {\n    color: color-mod(var(--mainColor) alpha(80%));\n  }\n}\n\n/* becomes */\n\n:root {\n  --mainColor: rgba(18, 52, 86, 0.47059);\n}\n\nbody {\n  color: rgba(18, 52, 86, 0.47059);\n  color: var(--mainColor);\n  font-family: system-ui, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Droid Sans, Helvetica Neue;\n  word-wrap: break-word;\n}\n\nh1, h2, h3, h4, h5, h6 {\n  background-image: url(img/heading.png);\n}\n\n@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {\n  h1, h2, h3, h4, h5, h6 {\n    background-image: url(img/heading@2x.png)\n  }\n}\n\n@media (max-width: 50rem) {\n  h1, h2, h3, h4, h5, h6 {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n}\n\na {\n  color: #639\n}\n\na:hover {\n  color: rgba(18, 52, 86, 0.8);\n}\n```\n\nWithout any configuration options, [postcss-preset-env] enables **stage 3**\nfeatures and supports all browsers.\n\n## Usage\n\nAdd [PostCSS Preset Env] to your build tool:\n\n```sh\nnpm install postcss-preset-env --save-dev\n```\n\n#### Node\n\nUse [PostCSS Preset Env] to process your CSS:\n\n```js\nrequire('postcss-preset-env').process(YOUR_CSS);\n```\n\n#### PostCSS\n\nAdd [PostCSS] to your build tool:\n\n```sh\nnpm install postcss --save-dev\n```\n\nUse [PostCSS Preset Env] as a plugin:\n\n```js\npostcss([\n  require('postcss-preset-env')()\n]).process(YOUR_CSS);\n```\n\n#### Gulp\n\nAdd [Gulp PostCSS] to your build tool:\n\n```sh\nnpm install gulp-postcss --save-dev\n```\n\nUse [PostCSS Preset Env] in your Gulpfile:\n\n```js\nvar postcss = require('gulp-postcss');\n\ngulp.task('css', function () {\n  return gulp.src('./src/*.css').pipe(\n    postcss([\n      require('postcss-preset-env')()\n    ])\n  ).pipe(\n    gulp.dest('.')\n  );\n});\n```\n\n#### Grunt\n\nAdd [Grunt PostCSS] to your build tool:\n\n```sh\nnpm install grunt-postcss --save-dev\n```\n\nUse [PostCSS Preset Env] in your Gruntfile:\n\n```js\ngrunt.loadNpmTasks('grunt-postcss');\n\ngrunt.initConfig({\n  postcss: {\n    options: {\n      use: [\n        require('postcss-preset-env')()\n      ]\n    },\n    dist: {\n      src: '*.css'\n    }\n  }\n});\n```\n\n## Options\n\n### stage\n\nThe `stage` key determines which CSS features to polyfill, based upon their\nposition in the process of becoming implemented web standards found at [cssdb].\nThe stages are 0 through 5. You can specify `false` to ignore all stages and\nrely on [features](#features) exclusively.\n\n```js\nrequire('postcss-preset-env')({\n  stage: 0\n})\n```\n\n### features\n\nThe `features` key determines which CSS features to polyfill based upon their\nunique specification id found at [cssdb]. Pass `true` to enable a feature, and\npass `false` to disable a feature. Pass an object `{}` to configure options of\nan individual polyfill. Any features not explicitly toggled here will be\ndetermined by [stage](#stage).\n\n```js\nrequire('postcss-preset-env')({\n  stage: false,\n  features: [ 'css-nesting' ]\n})\n```\n\n### browsers\n\nThe `browsers` key determines the browsers to support, which will enable or\ndisable polyfills based upon their support matrix found at [caniuse].\nBy default, [postcss-preset-env] will inherit any existing browserslist config,\n.browserslistrc config, browserslist section in package.json, or browserslist\nenvironment variables.\n\n```js\nrequire('postcss-preset-env')({\n  browsers: 'last 2 versions'\n})\n```\n\n### insertBefore / insertAfter\n\nThe `insertBefore` and `insertAfter` keys allow you to insert other PostCSS\nplugins along the chain. This is highly valuable if you are also using sugary\nPostCSS plugins that must execute between plugins within postcss-preset-env.\nBoth `insertBefore` and `insertAfter` support chaining one or multiple plugins.\n\n```js\nrequire('postcss-preset-env')({\n  insertBefore: {\n    'css-color-modifying-colors': require('postcss-simple-vars')\n  }\n})\n```\n\n[npm-url]: https://www.npmjs.com/package/postcss-preset-env\n[npm-img]: https://img.shields.io/npm/v/postcss-preset-env.svg\n[cli-url]: https://travis-ci.org/jonathantneal/postcss-preset-env\n[cli-img]: https://img.shields.io/travis/jonathantneal/postcss-preset-env.svg\n[win-url]: https://ci.appveyor.com/project/jonathantneal/postcss-preset-env\n[win-img]: https://img.shields.io/appveyor/ci/jonathantneal/postcss-preset-env.svg\n[git-url]: https://gitter.im/postcss/postcss\n[git-img]: https://img.shields.io/badge/chat-gitter-blue.svg\n\n[PostCSS Preset Env]: https://github.com/jonathantneal/postcss-preset-env\n[PostCSS]: https://github.com/postcss/postcss\n[Gulp PostCSS]: https://github.com/postcss/gulp-postcss\n[Grunt PostCSS]: https://github.com/nDmitry/grunt-postcss\n[cssdb]: https://jonathantneal.github.io/css-db/\n[caniuse]: https://caniuse.com/\n[postcss-preset-env]: https://github.com/jonathantneal/postcss-preset-env/\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jonathantneal/postcss-preset-env.git"
  },
  "scripts": {
    "prepublishOnly": "npm test",
    "pretest": "rollup -c .rollup.js --silent",
    "test": "echo 'Running tests...'; npm run test:ec && npm run test:js && npm run test:tape",
    "test:ec": "echint --ignore index.*.js test",
    "test:js": "eslint *.js lib/*.js --cache --ignore-path .gitignore --quiet",
    "test:tape": "postcss-tape"
  },
  "version": "3.5.0"
}
