{
  "_args": [
    [
      {
        "raw": "postcss-dir-pseudo-class@^3.0.0",
        "scope": null,
        "escapedName": "postcss-dir-pseudo-class",
        "name": "postcss-dir-pseudo-class",
        "rawSpec": "^3.0.0",
        "spec": ">=3.0.0 <4.0.0",
        "type": "range"
      },
      "C:\\Users\\Alexandre\\VoiceWatcher\\node_modules\\postcss-preset-env"
    ]
  ],
  "_from": "postcss-dir-pseudo-class@^3.0.0",
  "_hasShrinkwrap": false,
  "_id": "postcss-dir-pseudo-class@3.0.0",
  "_location": "/postcss-dir-pseudo-class",
  "_nodeVersion": "9.8.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/postcss-dir-pseudo-class_3.0.0_1521613891232_0.2213661172718846"
  },
  "_npmUser": {
    "name": "jonathantneal",
    "email": "jonathantneal@hotmail.com"
  },
  "_npmVersion": "5.7.1",
  "_phantomChildren": {
    "chalk": "2.4.2",
    "dot-prop": "4.2.0",
    "indexes-of": "1.0.1",
    "supports-color": "5.5.0",
    "uniq": "1.0.1"
  },
  "_requested": {
    "raw": "postcss-dir-pseudo-class@^3.0.0",
    "scope": null,
    "escapedName": "postcss-dir-pseudo-class",
    "name": "postcss-dir-pseudo-class",
    "rawSpec": "^3.0.0",
    "spec": ">=3.0.0 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/postcss-preset-env"
  ],
  "_resolved": "https://registry.npmjs.org/postcss-dir-pseudo-class/-/postcss-dir-pseudo-class-3.0.0.tgz",
  "_shasum": "31a18af3b9b1b33be635599b998a9829896c3fed",
  "_shrinkwrap": null,
  "_spec": "postcss-dir-pseudo-class@^3.0.0",
  "_where": "C:\\Users\\Alexandre\\VoiceWatcher\\node_modules\\postcss-preset-env",
  "author": {
    "name": "Jonathan Neal",
    "email": "jonathantneal@hotmail.com"
  },
  "bugs": {
    "url": "https://github.com/jonathantneal/postcss-dir-pseudo-class/issues"
  },
  "dependencies": {
    "postcss": "^6.0.20",
    "postcss-selector-parser": "^3.1.1"
  },
  "description": "Use the :dir pseudo-class in CSS",
  "devDependencies": {
    "babel-core": "^6.26.0",
    "babel-eslint": "^8.2.2",
    "babel-preset-env": "^1.6.1",
    "echint": "^4.0.1",
    "eslint": "^4.19.0",
    "eslint-config-dev": "^2.0.0",
    "postcss-tape": "^2.2.0",
    "pre-commit": "^1.2.2",
    "rollup": "^0.57.1",
    "rollup-plugin-babel": "^3.0.3"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-iEVgue59Xs6vz9CQZtlyonW/BmVfpqWglcUyIP2rQaBpH1a2T8Iax61eXY2NjTAq5r3Xjxwk4lrA84acoAiWHw==",
    "shasum": "31a18af3b9b1b33be635599b998a9829896c3fed",
    "tarball": "https://registry.npmjs.org/postcss-dir-pseudo-class/-/postcss-dir-pseudo-class-3.0.0.tgz",
    "fileCount": 6,
    "unpackedSize": 21314
  },
  "engines": {
    "node": ">=4.0.0"
  },
  "eslintConfig": {
    "extends": "dev",
    "parser": "babel-eslint",
    "rules": {
      "complexity": [
        "error",
        {
          "max": 30
        }
      ]
    }
  },
  "files": [
    "index.cjs.js",
    "index.es.js"
  ],
  "gitHead": "ba81d33008f6601bf199d682754080efcbf9fb39",
  "homepage": "https://github.com/jonathantneal/postcss-dir-pseudo-class#readme",
  "keywords": [
    "postcss",
    "css",
    "postcss-plugin",
    "directionality",
    "directions",
    "selector",
    "attribute",
    "polyfill",
    "left",
    "left-to-right",
    "ltr",
    "right",
    "right-to-left",
    "rtl"
  ],
  "license": "CC0-1.0",
  "main": "index.cjs.js",
  "maintainers": [
    {
      "name": "jonathantneal",
      "email": "jonathantneal@hotmail.com"
    }
  ],
  "module": "index.es.js",
  "name": "postcss-dir-pseudo-class",
  "optionalDependencies": {},
  "readme": "# PostCSS Dir Pseudo Class [<img src=\"https://postcss.github.io/postcss/logo.svg\" alt=\"PostCSS Logo\" width=\"90\" height=\"90\" align=\"right\">][postcss]\n\n[![CSS Standard Status][css-img]][css-url]\n[![NPM Version][npm-img]][npm-url]\n[![Build Status][cli-img]][cli-url]\n[![Windows Build Status][win-img]][win-url]\n[![Gitter Chat][git-img]][git-url]\n\n[PostCSS Dir Pseudo Class] lets you use the `:dir()` pseudo-class to style by\ndirectionality in CSS, following the [Selectors Level 4] specification.\n\n```css\narticle h3:dir(rtl) {\n  margin-right: 10px;\n}\n\narticle h3:dir(ltr) {\n  margin-left: 10px;\n}\n\n/* becomes */\n\n[dir=\"rtl\"] article h3 {\n  margin-right: 10px;\n}\n\n[dir=\"ltr\"] article h3 {\n  margin-left: 10px;\n}\n```\n\n### Maintain Specificity\n\nUsing [PostCSS Dir Pseudo Class] will not impact selector weight, but it will\nrequire having at least one `[dir]` attribute in your HTML. If you don’t have\n_any_ `[dir]` attributes, consider using the following JavaScript:\n\n```js\n// force at least one dir attribute (this can run at any time)\ndocument.documentElement.dir=document.documentElement.dir||'ltr';\n```\n\nIf you absolutely cannot add a `[dir]` attribute in your HTML or even force one\nvia JavaScript, you can still work around this by presuming a direction in your\nCSS using the [`dir` option](#dir-option), but understand that this will\nsometimes increase selector weight by one element (`html`).\n\n## Usage\n\nAdd [PostCSS Dir Pseudo Class] to your build tool:\n\n```bash\nnpm install postcss-dir-pseudo-class --save-dev\n```\n\n#### Node\n\nUse [PostCSS Dir Pseudo Class] to process your CSS:\n\n```js\nimport postcssDirPseudoClass from 'postcss-dir-pseudo-class';\n\npostcssDirPseudoClass.process(YOUR_CSS);\n```\n\n#### PostCSS\n\nAdd [PostCSS] to your build tool:\n\n```bash\nnpm install postcss --save-dev\n```\n\nUse [PostCSS Dir Pseudo Class] as a plugin:\n\n```js\nimport postcss from 'gulp-postcss';\nimport postcssDirPseudoClass from 'postcss-dir-pseudo-class';\n\npostcss([\n  postcssDirPseudoClass()\n]).process(YOUR_CSS);\n```\n\n#### Webpack\n\nAdd [PostCSS Loader] to your build tool:\n\n```bash\nnpm install postcss-loader --save-dev\n```\n\nUse [PostCSS Dir Pseudo Class] in your Webpack configuration:\n\n```js\nimport postcssDirPseudoClass from 'postcss-dir-pseudo-class';\n\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        use: [\n          'style-loader',\n          { loader: 'css-loader', options: { importLoaders: 1 } },\n          { loader: 'postcss-loader', options: {\n            ident: 'postcss',\n            plugins: () => [\n              postcssDirPseudoClass(/* options */)\n            ]\n          } }\n        ]\n      }\n    ]\n  }\n}\n```\n\n#### Gulp\n\nAdd [Gulp PostCSS] to your build tool:\n\n```bash\nnpm install gulp-postcss --save-dev\n```\n\nUse [PostCSS Dir Pseudo Class] in your Gulpfile:\n\n```js\nimport postcss from 'gulp-postcss';\nimport postcssDirPseudoClass from 'postcss-dir-pseudo-class';\n\ngulp.task('css', () => gulp.src('./src/*.css').pipe(\n  postcss([\n    postcssDirPseudoClass(/* options */)\n  ])\n).pipe(\n  gulp.dest('.')\n));\n```\n\n#### Grunt\n\nAdd [Grunt PostCSS] to your build tool:\n\n```bash\nnpm install grunt-postcss --save-dev\n```\n\nUse [PostCSS Dir Pseudo Class] in your Gruntfile:\n\n```js\nimport postcssDirPseudoClass from 'postcss-dir-pseudo-class';\n\ngrunt.loadNpmTasks('grunt-postcss');\n\ngrunt.initConfig({\n  postcss: {\n    options: {\n      use: [\n       postcssDirPseudoClass(/* options */)\n      ]\n    },\n    dist: {\n      src: '*.css'\n    }\n  }\n});\n```\n\n## Options\n\n### dir\n\nThe `dir` option allows you presume a direction in your CSS. By default, this\nis not specified and you are required to include a direction `[dir]` attribute\nsomewhere in your HTML, preferably on the `html` element.\n\nHere’s an example of using the `dir` option to presume a left-to-right\ndirection:\n\n```js\nrequire('postcss-dir-pseudo-class')({\n  dir: 'ltr'\n});\n```\n\n```css\n.example:dir(ltr) {\n  margin-left: 10px;\n}\n\n.example:dir(rtl) {\n  margin-right: 10px;\n}\n\n/* becomes */\n\nhtml:not([dir=\"rtl\"]) .example {\n  margin-left: 10px;\n}\n\n[dir=\"rtl\"] .example {\n  margin-right: 10px;\n}\n```\n\n### preserve\n\nThe `preserve` option determines whether the original `:dir()` rule should\nremain in the CSS. By default, the rule is replaced by the fallback.\n\n[css-img]: https://jonathantneal.github.io/css-db/badge/selectors-dir-pseudo.svg\n[css-url]: https://jonathantneal.github.io/css-db/#selectors-dir-pseudo\n[npm-url]: https://www.npmjs.com/package/postcss-dir-pseudo-class\n[npm-img]: https://img.shields.io/npm/v/postcss-dir-pseudo-class.svg\n[cli-url]: https://travis-ci.org/jonathantneal/postcss-dir-pseudo-class\n[cli-img]: https://img.shields.io/travis/jonathantneal/postcss-dir-pseudo-class.svg\n[win-url]: https://ci.appveyor.com/project/jonathantneal/postcss-dir-pseudo-class\n[win-img]: https://img.shields.io/appveyor/ci/jonathantneal/postcss-dir-pseudo-class.svg\n[git-url]: https://gitter.im/postcss/postcss\n[git-img]: https://img.shields.io/badge/chat-gitter-blue.svg\n\n[Gulp PostCSS]: https://github.com/postcss/gulp-postcss\n[Grunt PostCSS]: https://github.com/nDmitry/grunt-postcss\n[PostCSS]: https://github.com/postcss/postcss\n[PostCSS Dir Pseudo Class]: https://github.com/jonathantneal/postcss-dir-pseudo-class\n[PostCSS Loader]: https://github.com/postcss/postcss-loader\n[Selectors Level 4]: https://www.w3.org/TR/selectors-4/\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jonathantneal/postcss-dir-pseudo-class.git"
  },
  "scripts": {
    "prepublishOnly": "npm test",
    "pretest": "rollup -c .rollup.js --silent",
    "test": "echo 'Running tests...'; npm run test:ec && npm run test:js && npm run test:tape",
    "test:ec": "echint --ignore index.*.js test",
    "test:js": "eslint *.js --cache --ignore-path .gitignore --quiet",
    "test:tape": "postcss-tape"
  },
  "version": "3.0.0"
}
