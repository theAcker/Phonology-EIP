{
  "_args": [
    [
      {
        "raw": "hast-util-raw@^4.0.0",
        "scope": null,
        "escapedName": "hast-util-raw",
        "name": "hast-util-raw",
        "rawSpec": "^4.0.0",
        "spec": ">=4.0.0 <5.0.0",
        "type": "range"
      },
      "C:\\Users\\Alexandre\\VoiceWatcher\\node_modules\\gatsby-transformer-remark"
    ]
  ],
  "_from": "hast-util-raw@^4.0.0",
  "_hasShrinkwrap": false,
  "_id": "hast-util-raw@4.0.0",
  "_location": "/hast-util-raw",
  "_nodeVersion": "10.0.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/hast-util-raw_4.0.0_1531940604660_0.19260455135851595"
  },
  "_npmUser": {
    "name": "wooorm",
    "email": "tituswormer@gmail.com"
  },
  "_npmVersion": "6.2.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "hast-util-raw@^4.0.0",
    "scope": null,
    "escapedName": "hast-util-raw",
    "name": "hast-util-raw",
    "rawSpec": "^4.0.0",
    "spec": ">=4.0.0 <5.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/gatsby-transformer-remark"
  ],
  "_resolved": "https://registry.npmjs.org/hast-util-raw/-/hast-util-raw-4.0.0.tgz",
  "_shasum": "2dc10c9facd9b810ea6ac51df251e6f87c2ed5b5",
  "_shrinkwrap": null,
  "_spec": "hast-util-raw@^4.0.0",
  "_where": "C:\\Users\\Alexandre\\VoiceWatcher\\node_modules\\gatsby-transformer-remark",
  "author": {
    "name": "Titus Wormer",
    "email": "tituswormer@gmail.com",
    "url": "http://wooorm.com"
  },
  "bugs": {
    "url": "https://github.com/syntax-tree/hast-util-raw/issues"
  },
  "contributors": [
    {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "http://wooorm.com"
    }
  ],
  "dependencies": {
    "hast-util-from-parse5": "^4.0.2",
    "hast-util-to-parse5": "^4.0.1",
    "html-void-elements": "^1.0.1",
    "parse5": "^5.0.0",
    "unist-util-position": "^3.0.0",
    "web-namespaces": "^1.0.0",
    "xtend": "^4.0.1",
    "zwitch": "^1.0.0"
  },
  "description": "Reparse a HAST tree",
  "devDependencies": {
    "browserify": "^16.0.0",
    "esmangle": "^1.0.0",
    "hastscript": "^4.0.0",
    "nyc": "^12.0.0",
    "prettier": "^1.13.5",
    "rehype-stringify": "^4.0.0",
    "remark-cli": "^5.0.0",
    "remark-parse": "^5.0.0",
    "remark-preset-wooorm": "^4.0.0",
    "remark-rehype": "^3.0.0",
    "tape": "^4.0.0",
    "tinyify": "^2.4.3",
    "unified": "^7.0.0",
    "unist-builder": "^1.0.2",
    "xo": "^0.21.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-5xYHyEJMCf8lX/NT4iA5z6N43yoFsrJqXJ5GWwAbLn815URbIz+UNNFEgid33F9paZuDlqVKvB+K3Aqu5+DdSw==",
    "shasum": "2dc10c9facd9b810ea6ac51df251e6f87c2ed5b5",
    "tarball": "https://registry.npmjs.org/hast-util-raw/-/hast-util-raw-4.0.0.tgz",
    "fileCount": 4,
    "unpackedSize": 12630,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbT478CRA9TVsSAnZWagAAH8EP/RcRV7XiEL5QxAEL1FiL\nANjislybfj7UsavDme7USt9ynCdleXZ2HIyEHql+8wwYt+c/RBTHYDLgM65s\nOFsLRk0mxhH0bKBj6eNQEAKeGm99Z+lznry8OIORFAXo+5nsldacAazCeOUt\nUPnSMMjINe8VnZFL3j8viQqi0778wQ86WAFVmDoLLRaEYxoy18TW4ukJvwsB\nmCkORzfyLMIXjSZ8q8Y/Pk2fuk+hZLcBTbeVCtwdb9suq6V6jQMYvVgfGf2k\nRqZTiQbf9f0k+ubCrnwBjtdAI019ZGHlTZfD88OpLRMgCgJEs6/oa06DxFQP\nLt3wPniUtbsm8YVJSWjUHQX5jzM98AXdG7crTfiI0Z8gd0N8YqAN8ke4kfAW\ntKpxgTYXC7eO8NSz0EELAFsR8ETriEBie9U4KnhbI8ptcbP65hc3nW8J2/BR\nqDUfEMoNcT2SZxEzSNwXerH/cxlhtR9NvDvLxZCi6v3ZHm7foXV5ToOszL1m\nFMvoxdc+qpMf4Qm5pqwkwMVYxI1RTT5ihtrZVZCk4qx0Au+xlpSyKeFmUMad\nPvHUaVZtLwOIK4ND+j5dR1wxDdlng8jIR9CxyWkSsydswA3l57sExazWwieu\nHDIn+xrBBCcuEdPB0wS35NOvPbUcCYe98cZr1cGcqwwjkgebFRGjBHbXgHYW\npQUb\r\n=wbgT\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "d1418adf7247139ba4068e291ccf62ed7b075363",
  "homepage": "https://github.com/syntax-tree/hast-util-raw#readme",
  "keywords": [
    "hast",
    "util",
    "utility",
    "raw",
    "html"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "wooorm",
      "email": "tituswormer@gmail.com"
    }
  ],
  "name": "hast-util-raw",
  "nyc": {
    "check-coverage": true,
    "lines": 100,
    "functions": 100,
    "branches": 100
  },
  "optionalDependencies": {},
  "prettier": {
    "tabWidth": 2,
    "useTabs": false,
    "singleQuote": true,
    "bracketSpacing": false,
    "semi": false,
    "trailingComma": "none"
  },
  "readme": "# hast-util-raw [![Build Status][travis-badge]][travis] [![Coverage Status][codecov-badge]][codecov]\n\nParse a [HAST][] tree again, with support for embedded `raw` nodes.\n\nOne of the reasons to do this is for “malformed” syntax trees: for\nexample, say there’s an `h1` element in a `p` element, this utility\nwill make them siblings.\n\nAnother reason to do this is if raw HTML/XML is embedded in a syntax\ntree, such as markdown.  If you’re working with markdown, use\n[`remark-rehype`][remark-rehype] and [`rehype-raw`][rehype-raw].\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install hast-util-raw\n```\n\n## Usage\n\n```javascript\nvar h = require('hastscript')\nvar raw = require('hast-util-raw')\n\nvar tree = h('div', [h('h1', ['Foo ', h('h2', 'Bar'), ' Baz'])])\n\nvar clean = raw(tree)\n\nconsole.log(clean)\n```\n\nYields:\n\n```javascript\n{ type: 'element',\n  tagName: 'div',\n  properties: {},\n  children:\n   [ { type: 'element',\n       tagName: 'h1',\n       properties: {},\n       children: [Object] },\n     { type: 'element',\n       tagName: 'h2',\n       properties: {},\n       children: [Object] },\n     { type: 'text', value: ' Baz' } ] }\n```\n\n## API\n\n### `raw(tree[, file])`\n\nGiven a [HAST][] tree and an optional [vfile][] (for positional info),\nreturn a new parsed-again [HAST][] tree.\n\n## Contribute\n\nSee [`contributing.md` in `syntax-tree/hast`][contributing] for ways to get\nstarted.\n\nThis organisation has a [Code of Conduct][coc].  By interacting with this\nrepository, organisation, or community you agree to abide by its terms.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[travis-badge]: https://img.shields.io/travis/syntax-tree/hast-util-raw.svg\n\n[travis]: https://travis-ci.org/syntax-tree/hast-util-raw\n\n[codecov-badge]: https://img.shields.io/codecov/c/github/syntax-tree/hast-util-raw.svg\n\n[codecov]: https://codecov.io/github/syntax-tree/hast-util-raw\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n\n[hast]: https://github.com/syntax-tree/hast\n\n[remark-rehype]: https://github.com/wooorm/remark-rehype\n\n[rehype-raw]: https://github.com/wooorm/rehype-raw\n\n[vfile]: https://github.com/vfile/vfile\n\n[contributing]: https://github.com/syntax-tree/hast/blob/master/contributing.md\n\n[coc]: https://github.com/syntax-tree/hast/blob/master/code-of-conduct.md\n",
  "readmeFilename": "readme.md",
  "remarkConfig": {
    "plugins": [
      "preset-wooorm"
    ]
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/syntax-tree/hast-util-raw.git"
  },
  "scripts": {
    "build": "npm run build-bundle && npm run build-mangle",
    "build-bundle": "browserify index.js -s hastUtilRaw > hast-util-raw.js",
    "build-mangle": "browserify index.js -s hastUtilRaw -p tinyify > hast-util-raw.min.js",
    "format": "remark . -qfo && prettier --write '**/*.js' && xo --fix",
    "test": "npm run format && npm run build && npm run test-coverage",
    "test-api": "node test",
    "test-coverage": "nyc --reporter lcov tape test.js"
  },
  "version": "4.0.0",
  "xo": {
    "prettier": true,
    "esnext": false,
    "ignores": [
      "hast-util-raw.js"
    ]
  }
}
