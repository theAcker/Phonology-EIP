{
  "_args": [
    [
      {
        "raw": "postcss-extend-rule@^1.1.0",
        "scope": null,
        "escapedName": "postcss-extend-rule",
        "name": "postcss-extend-rule",
        "rawSpec": "^1.1.0",
        "spec": ">=1.1.0 <2.0.0",
        "type": "range"
      },
      "C:\\Users\\Alexandre\\VoiceWatcher\\node_modules\\precss"
    ]
  ],
  "_from": "postcss-extend-rule@>=1.1.0 <2.0.0",
  "_id": "postcss-extend-rule@1.1.0",
  "_inCache": true,
  "_location": "/postcss-extend-rule",
  "_nodeVersion": "8.5.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/postcss-extend-rule-1.1.0.tgz_1505834059010_0.7325346062425524"
  },
  "_npmUser": {
    "name": "jonathantneal",
    "email": "jonathantneal@hotmail.com"
  },
  "_npmVersion": "5.4.2",
  "_phantomChildren": {
    "chalk": "2.4.2",
    "supports-color": "5.5.0"
  },
  "_requested": {
    "raw": "postcss-extend-rule@^1.1.0",
    "scope": null,
    "escapedName": "postcss-extend-rule",
    "name": "postcss-extend-rule",
    "rawSpec": "^1.1.0",
    "spec": ">=1.1.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/precss"
  ],
  "_resolved": "https://registry.npmjs.org/postcss-extend-rule/-/postcss-extend-rule-1.1.0.tgz",
  "_shasum": "11e4d590ffe4253b853ef1fc03be7167da607d38",
  "_shrinkwrap": null,
  "_spec": "postcss-extend-rule@^1.1.0",
  "_where": "C:\\Users\\Alexandre\\VoiceWatcher\\node_modules\\precss",
  "author": {
    "name": "Jonathan Neal",
    "email": "jonathantneal@hotmail.com"
  },
  "bugs": {
    "url": "https://github.com/jonathantneal/postcss-extend-rule/issues"
  },
  "dependencies": {
    "postcss": "^6.0.11",
    "postcss-nesting": "^4.2.1"
  },
  "description": "Use the @extend at-rule and functional selectors in CSS",
  "devDependencies": {
    "eslint": "^4.7.1",
    "eslint-config-dev": "2.0.0",
    "postcss-tape": "2.1.0",
    "pre-commit": "^1.2.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-+NXtLOY49Xcx9173SJAYj41esTRTpihSLoKpj5yzoBki9PZK4HF37AH9AVyCeLFJL9fzhh0YFuk/3eyeZ9d/jw==",
    "shasum": "11e4d590ffe4253b853ef1fc03be7167da607d38",
    "tarball": "https://registry.npmjs.org/postcss-extend-rule/-/postcss-extend-rule-1.1.0.tgz"
  },
  "engines": {
    "node": ">=4.0.0"
  },
  "eslintConfig": {
    "extends": "dev"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "7c3f6b6d640bc4c1be4c17a9707828fbc7627d5f",
  "homepage": "https://github.com/jonathantneal/postcss-extend-rule#readme",
  "keywords": [
    "postcss",
    "css",
    "postcss-plugin",
    "extend",
    "matched",
    "matches",
    "match",
    "selectors",
    "subclassing",
    "subclasses",
    "subclass",
    "styling",
    "styles",
    "style",
    "placeholder",
    "placehold",
    "selectors",
    "selector",
    "chaining"
  ],
  "license": "CC0-1.0",
  "main": "index.js",
  "maintainers": [
    {
      "name": "jonathantneal",
      "email": "jonathantneal@hotmail.com"
    }
  ],
  "name": "postcss-extend-rule",
  "optionalDependencies": {},
  "readme": "# PostCSS Extend Rule [<img src=\"https://postcss.github.io/postcss/logo.svg\" alt=\"PostCSS Logo\" width=\"90\" height=\"90\" align=\"right\">][postcss]\n\n[![NPM Version][npm-img]][npm-url]\n[![Build Status][cli-img]][cli-url]\n[![Gitter Chat][git-img]][git-url]\n\n[PostCSS Extend Rule] lets you use the `@extend` at-rule and\n[Functional Selectors] in CSS, following the speculative\n[CSS Extend Rules Specification].\n\n```css\n%thick-border {\n  border: thick dotted red;\n}\n\n.serious-modal {\n  font-style: normal;\n  font-weight: bold;\n\n  @media (max-width: 240px) {\n    @extend .modal:hover;\n  }\n}\n\n.modal {\n  @extend %thick-border;\n\n  color: red;\n}\n\n.modal:hover:not(:focus) {\n  outline: none;\n}\n\n/* becomes */\n\n.serious-modal {\n  font-style: normal;\n  font-weight: bold;\n}\n\n@media (max-width: 240px) {\n  .serious-modal:not(:focus) {\n    outline: none;\n  }\n}\n\n.modal {\n  border: thick dotted red;\n  color: red;\n}\n\n.modal:hover:not(:focus) {\n  outline: none;\n}\n```\n\n## Usage\n\nAdd [PostCSS Extend Rule] to your build tool:\n\n```bash\nnpm install postcss-extend-rule --save-dev\n```\n\n#### Node\n\nUse [PostCSS Extend Rule] to process your CSS:\n\n```js\nrequire('postcss-extend-rule').process(YOUR_CSS /*, PostCSS Options, Options */);\n```\n\n#### PostCSS\n\nAdd [PostCSS] to your build tool:\n\n```bash\nnpm install postcss --save-dev\n```\n\nUse [PostCSS Extend Rule] as a plugin:\n\n```js\npostcss([\n  require('postcss-extend-rule')(/* Options */)\n]).process(YOUR_CSS);\n```\n\n#### Gulp\n\nAdd [Gulp PostCSS] to your build tool:\n\n```bash\nnpm install gulp-postcss --save-dev\n```\n\nUse [PostCSS Extend Rule] in your Gulpfile:\n\n```js\nvar postcss = require('gulp-postcss');\n\ngulp.task('css', function () {\n  return gulp.src('./src/*.css').pipe(\n    postcss([\n      require('postcss-extend-rule')(/* Options */)\n    ])\n  ).pipe(\n    gulp.dest('.')\n  );\n});\n```\n\n#### Grunt\n\nAdd [Grunt PostCSS] to your build tool:\n\n```bash\nnpm install grunt-postcss --save-dev\n```\n\nUse [PostCSS Extend Rule] in your Gruntfile:\n\n```js\ngrunt.loadNpmTasks('grunt-postcss');\n\ngrunt.initConfig({\n  postcss: {\n    options: {\n      use: [\n        require('postcss-extend-rule')(/* Options */)\n      ]\n    },\n    dist: {\n      src: '*.css'\n    }\n  }\n});\n```\n\n## Options\n\n### onFunctionalSelector\n\nThe `onFunctionalSelector` option determines how functional selectors should be\nhandled. Its options are:\n\n- `remove` (default) removes any functional selector\n- `ignore` ignores any functional selector and moves on\n- `warn` warns the user whenever it encounters a functional selector\n- `throw` throws an error if ever it encounters a functional selector\n\n### onRecursiveExtend\n\nThe `onRecursiveExtend` option determines how recursive extend at-rules should\nbe handled. Its options are:\n\n- `remove` (default) removes any recursive extend at-rules\n- `ignore` ignores any recursive extend at-rules and moves on\n- `warn` warns the user whenever it encounters a recursive extend at-rules\n- `throw` throws an error if ever it encounters a recursive extend at-rules\n\n### onUnusedExtend\n\nThe `onUnusedExtend` option determines how an unused extend at-rule should be\nhandled. Its options are:\n\n- `remove` (default) removes any unused extend at-rule\n- `ignore` ignores any unused extend at-rule and moves on\n- `warn` warns the user whenever it encounters an unused extend at-rule\n- `throw` throws an error if ever it encounters an unused extend at-rule\n\n[npm-url]: https://www.npmjs.com/package/postcss-extend-rule\n[npm-img]: https://img.shields.io/npm/v/postcss-extend-rule.svg\n[cli-url]: https://travis-ci.org/jonathantneal/postcss-extend-rule\n[cli-img]: https://img.shields.io/travis/jonathantneal/postcss-extend-rule.svg\n[git-url]: https://gitter.im/postcss/postcss\n[git-img]: https://img.shields.io/badge/chat-gitter-blue.svg\n\n[CSS Extend Rules Specification]: https://jonathantneal.github.io/specs/css-extend-rule/\n[Functional Selectors]: https://jonathantneal.github.io/specs/css-extend-rule/#functional-selector\n[Gulp PostCSS]: https://github.com/postcss/gulp-postcss\n[Grunt PostCSS]: https://github.com/nDmitry/grunt-postcss\n[PostCSS]: https://github.com/postcss/postcss\n[PostCSS Extend Rule]: https://github.com/jonathantneal/postcss-extend-rule\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jonathantneal/postcss-extend-rule.git"
  },
  "scripts": {
    "clean": "git clean -X -d -f",
    "prepublish": "npm test",
    "test": "echo 'Running tests...'; npm run test:js && npm run test:tape",
    "test:js": "eslint *.js --cache --ignore-pattern .gitignore",
    "test:tape": "postcss-tape"
  },
  "version": "1.1.0"
}
