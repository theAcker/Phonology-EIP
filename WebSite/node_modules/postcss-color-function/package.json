{
  "_args": [
    [
      {
        "raw": "postcss-color-function@^4.0.0",
        "scope": null,
        "escapedName": "postcss-color-function",
        "name": "postcss-color-function",
        "rawSpec": "^4.0.0",
        "spec": ">=4.0.0 <5.0.0",
        "type": "range"
      },
      "C:\\Users\\Alexandre\\VoiceWatcher\\node_modules\\postcss-cssnext"
    ]
  ],
  "_from": "postcss-color-function@^4.0.0",
  "_hasShrinkwrap": false,
  "_id": "postcss-color-function@4.1.0",
  "_location": "/postcss-color-function",
  "_nodeVersion": "11.11.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/postcss-color-function_4.1.0_1554143685652_0.4476677049632627"
  },
  "_npmUser": {
    "name": "jonathantneal",
    "email": "jonathantneal@hotmail.com"
  },
  "_npmVersion": "6.9.0",
  "_phantomChildren": {
    "chalk": "2.4.2",
    "supports-color": "5.5.0"
  },
  "_requested": {
    "raw": "postcss-color-function@^4.0.0",
    "scope": null,
    "escapedName": "postcss-color-function",
    "name": "postcss-color-function",
    "rawSpec": "^4.0.0",
    "spec": ">=4.0.0 <5.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/postcss-cssnext"
  ],
  "_resolved": "https://registry.npmjs.org/postcss-color-function/-/postcss-color-function-4.1.0.tgz",
  "_shasum": "b6f9355e07b12fcc5c34dab957834769b03d8f57",
  "_shrinkwrap": null,
  "_spec": "postcss-color-function@^4.0.0",
  "_where": "C:\\Users\\Alexandre\\VoiceWatcher\\node_modules\\postcss-cssnext",
  "author": {
    "name": "Maxime Thirouin"
  },
  "bugs": {
    "url": "https://github.com/postcss/postcss-color-function/issues"
  },
  "dependencies": {
    "css-color-function": "~1.3.3",
    "postcss": "^6.0.23",
    "postcss-message-helpers": "^2.0.0",
    "postcss-value-parser": "^3.3.1"
  },
  "description": "PostCSS plugin to transform W3C CSS color function to more compatible CSS.",
  "devDependencies": {
    "eslint": "^3.19.0",
    "faucet": "0.0.1",
    "npmpub": "^3.1.0",
    "tape": "^4.10.1"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-2/fuv6mP5Lt03XbRpVfMdGC8lRP1sykme+H1bR4ARyOmSMB8LPSjcL6EAI1iX6dqUF+jNEvKIVVXhan1w/oFDQ==",
    "shasum": "b6f9355e07b12fcc5c34dab957834769b03d8f57",
    "tarball": "https://registry.npmjs.org/postcss-color-function/-/postcss-color-function-4.1.0.tgz",
    "fileCount": 5,
    "unpackedSize": 9214,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcolnGCRA9TVsSAnZWagAAApEP/1wiMe55NLgf55flXyHu\nlPKOqr+43Ay03LWdhMyB6P6V1JJ1iEoJHVy2HlBrIgzWqvnZtmcNJ99mHhkV\nvSvzdMdkphf0Ilxw7IuaRq646ojpOea5WEep10JDx3V6jq9zG+2pGAKlgeZV\n9zlWsEXTx7PCLdPxsacoifBtobDlKzNsmBuNmFOCLi+ELxKK7dqyelAt8x3F\ng7j5E1DliCEGFRNVYFAuHTf6QVody8ejLxozLxg/fpjwLzzz8LDLbzvL7Cnt\nrq8rC5+DLcCQIx7a5ZpaTHg+yliXSps9MYQr0JEo6YM0iB4Dk5+7StpwCLE8\neul8MZeq0NW9TLJae2+bGMnaLz2AG4/gD3r9Iu33tx1ifjCbRhzRYKaU30Q8\nZiWzkZxtICm1vU9i0FUXnqGKsUuCCa9TcnzhUrCS/9xS3Es2gQhUV/sFTiDW\nRE8dE4MEvzbi3hqdaJ9yYfauaEPiG9spaWpWLXeAFrvSjUFwgS5d+S8XanWD\nqbSJURoAMQ1TfMtauQJmw+/KtaeCgeSZU5AanxiuO9LgkmuiDV3ZLzjtwxxv\ndEXOzE0rnnCj4WE9IYjFRZc8TThffIm4h7o9Y8GgKCz9mH9uY25uJ9e6dAcJ\nHfe7s84SjiXXhaVcOEle5AP+vewE1yVFfBFU26XhJj8eF7fbpF/RVlUgeTiN\niEfr\r\n=q6jJ\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "f81fb376514ed61b8307a49952e3df755a6a2d58",
  "homepage": "https://github.com/postcss/postcss-color-function#readme",
  "keywords": [
    "css",
    "postcss",
    "postcss-plugin",
    "color",
    "colour",
    "function"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "jonathantneal",
      "email": "jonathantneal@hotmail.com"
    },
    {
      "name": "moox",
      "email": "m@moox.io"
    },
    {
      "name": "semigradsky",
      "email": "semigradskyd@gmail.com"
    }
  ],
  "name": "postcss-color-function",
  "optionalDependencies": {},
  "readme": "# postcss-color-function [![Build Status](https://travis-ci.org/postcss/postcss-color-function.svg)](https://travis-ci.org/postcss/postcss-color-function)\n\n[PostCSS](https://github.com/postcss/postcss) plugin to transform CSS color function from editor draft of 'Color Module Level 4' specification to more compatible CSS.\n\n## Deprecated\n\n**⚠️ `color()` was changed to `color-mod()`. See [postcss-color-mod-function](https://github.com/jonathantneal/postcss-color-mod-function).**\n\n> There is a\n  [`color-mod`](https://github.com/jonathantneal/postcss-color-mod-function)\n  implementation.\n\n**⚠️ `color-mod()` has been removed from [Color Module Level 4 specification](https://www.w3.org/TR/css-color-4/#changes-from-20160705).**\n\n## Installation\n\n```console\nnpm install postcss-color-function\n```\n\n## Usage\n\n```js\n// dependencies\nvar fs = require(\"fs\")\nvar postcss = require(\"postcss\")\nvar colorFunction = require(\"postcss-color-function\")\n\n// css to be processed\nvar css = fs.readFileSync(\"input.css\", \"utf8\")\n\n// process css\n// set preserveCustomProps to `false` by default `true`\n//for delete declarations with custom properties\nvar output = postcss()\n  .use(colorFunction({preserveCustomProps: true}))\n  .process(css)\n  .css\n```\n\nUsing this `input.css`:\n\n```css\nbody {\n  background: color(red a(90%))\n}\n\n```\n\nyou will get:\n\n```css\nbody {\n  background: rgba(255, 0, 0, 0.9)\n}\n```\n\nCheckout [tests](test) for examples.\n\n## Interface (according to CSS specs)\n\n```\ncolor( [ <color> | <hue> ] <color-adjuster>* )\n```\n\n### List of `color-adjuster`\n\n- `[red( | green( | blue( | alpha( | a(] ['+' | '-']? [<number> | <percentage>] )`\n- `[red( | green( | blue( | alpha( | a(] '*' <percentage> )`\n- ~~`rgb( ['+' | '-'] [<number> | <percentage>]{3} )`~~ @todo\n- ~~`rgb( ['+' | '-'] <hash-token> )`~~ @todo\n- ~~`rgb( '*' <percentage> ) |`~~ @todo\n- `[hue( | h(] ['+' | '-' | '*']? <angle> )`\n- `[saturation( | s(] ['+' | '-' | '*']? <percentage> )`\n- `[lightness( | l(] ['+' | '-' | '*']? <percentage> )`\n- `[whiteness( | w(] ['+' | '-' | '*']? <percentage> )`\n- `[blackness( | b(] ['+' | '-' | '*']? <percentage> )`\n- `tint( <percentage> )`\n- `shade( <percentage> )`\n- `blend( <color> <percentage> [rgb | hsl | hwb]? )`\n- ~~`blenda( <color> <percentage> [rgb | hsl | hwb]? )`~~ @todo\n- `contrast( <percentage>? )`\n\nNotes:\n\n- some adjusts have shortcuts,\n- can be used on every value on any property,\n- some values can use add/subtract/scale modifiers or a direct value.\n\n### Examples\n\n```css\nwhatever {\n  color: color(red a(10%));\n\n  background-color: color(red lightness(50%)); /* == color(red l(50%)); */\n\n  border-color: color(hsla(125, 50%, 50%, .4) saturation(+ 10%) w(- 20%));\n}\n```\n\n## FAQ\n\n### Can you support `currentcolor` so we can do `color(currentcolor adjuster())`?\n\nNo we cannot do that. `currentcolor` depends on the cascade (so the DOM) and we can't handle that in a simple preprocessing step. You need to handle that with polyfills.\n\n### Can we use CSS custom properties so we can do `color(var(--mainColor) adjuster())`?\n\nBy using [postcss-custom-properties](https://github.com/postcss/postcss-custom-properties) before this plugin, you can do that (sort of).\nYou have some examples in [cssnext playground](http://cssnext.io/playground/).\n\n## Notes for former Sass users\n\n`lighten` and `darken` are Sass specific methods and not supported by native CSS specs. The same functionality can be achieved with the [tint and shade adjusters](https://drafts.csswg.org/css-color/#tint-shade-adjusters):\n\n```css\n$lighten(red, 20%)\n/*  is equivalent to */\ncolor(red tint(20%))\n\n$darken(red, 20%)\n/*  is equivalent to */\ncolor(red shade(20%))\n```\n\n---\n\n## [Changelog](CHANGELOG.md)\n\n## [License](LICENSE)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/postcss/postcss-color-function.git"
  },
  "scripts": {
    "lint": "eslint *.js index.js ./test/",
    "release": "npmpub",
    "test": "npm run lint && tape test | faucet"
  },
  "version": "4.1.0"
}
