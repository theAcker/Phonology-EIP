{
  "_args": [
    [
      {
        "raw": "postcss-custom-properties@^7.0.0",
        "scope": null,
        "escapedName": "postcss-custom-properties",
        "name": "postcss-custom-properties",
        "rawSpec": "^7.0.0",
        "spec": ">=7.0.0 <8.0.0",
        "type": "range"
      },
      "C:\\Users\\Alexandre\\VoiceWatcher"
    ]
  ],
  "_from": "postcss-custom-properties@^7.0.0",
  "_hasShrinkwrap": false,
  "_id": "postcss-custom-properties@7.0.0",
  "_location": "/postcss-custom-properties",
  "_nodeVersion": "9.5.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/postcss-custom-properties_7.0.0_1518792569667_0.20675944351368725"
  },
  "_npmUser": {
    "name": "jonathantneal",
    "email": "jonathantneal@hotmail.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {
    "chalk": "2.4.2",
    "supports-color": "5.5.0"
  },
  "_requested": {
    "raw": "postcss-custom-properties@^7.0.0",
    "scope": null,
    "escapedName": "postcss-custom-properties",
    "name": "postcss-custom-properties",
    "rawSpec": "^7.0.0",
    "spec": ">=7.0.0 <8.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/",
    "/postcss-preset-env"
  ],
  "_resolved": "https://registry.npmjs.org/postcss-custom-properties/-/postcss-custom-properties-7.0.0.tgz",
  "_shasum": "24dc4fbe6d6ed550ea4fd3b11204660e9ffa3b33",
  "_shrinkwrap": null,
  "_spec": "postcss-custom-properties@^7.0.0",
  "_where": "C:\\Users\\Alexandre\\VoiceWatcher",
  "author": {
    "name": "Maxime Thirouin"
  },
  "bugs": {
    "url": "https://github.com/postcss/postcss-custom-properties/issues"
  },
  "dependencies": {
    "balanced-match": "^1.0.0",
    "postcss": "^6.0.18"
  },
  "description": "PostCSS plugin to polyfill W3C CSS Custom Properties for cascading variables",
  "devDependencies": {
    "babel-cli": "^6.26.0",
    "babel-plugin-add-module-exports": "^0.2.1",
    "babel-preset-env": "^1.6.1",
    "babel-register": "^6.26.0",
    "eslint": "^4.17.0",
    "npmpub": "^3.1.0",
    "tape": "^4.8.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-dl/CNaM6z2RBa0vZZqsV6Hunj4HD6Spu7FcAkiVp5B2tgm6xReKKYzI7x7QNx3wTMBNj5v+ylfVcQGMW4xdkHw==",
    "shasum": "24dc4fbe6d6ed550ea4fd3b11204660e9ffa3b33",
    "tarball": "https://registry.npmjs.org/postcss-custom-properties/-/postcss-custom-properties-7.0.0.tgz",
    "fileCount": 5,
    "unpackedSize": 22609
  },
  "files": [
    "dist"
  ],
  "gitHead": "f17bf96e1836526bcd9fc83040c7768c2336e46e",
  "homepage": "https://github.com/postcss/postcss-custom-properties#readme",
  "keywords": [
    "css",
    "postcss",
    "postcss-plugin",
    "custom-properties",
    "variables",
    "vars"
  ],
  "license": "MIT",
  "main": "dist/index.js",
  "maintainers": [
    {
      "name": "jonathantneal",
      "email": "jonathantneal@hotmail.com"
    },
    {
      "name": "moox",
      "email": "m@moox.io"
    },
    {
      "name": "semigradsky",
      "email": "semigradskyd@gmail.com"
    }
  ],
  "name": "postcss-custom-properties",
  "optionalDependencies": {},
  "readme": "# PostCSS Custom Properties [<img src=\"https://postcss.github.io/postcss/logo.svg\" alt=\"PostCSS Logo\" width=\"90\" height=\"90\" align=\"right\">][postcss]\n\n[![NPM Version][npm-img]][npm-url]\n[![CSS Standard Status][css-img]][css-url]\n[![Build Status][cli-img]][cli-url]\n[![Gitter Chat][git-img]][git-url]\n\n[PostCSS Custom Properties] lets you use CSS Custom Properties in CSS, following\nthe [CSS Custom Properties for Cascading Variables] specification.\n\n```css\n:root {\n  --color: red;\n}\n\nh1 {\n  color: var(--color);\n}\n\n/* becomes */\n\n:root {\n  --color: red;\n}\n\ndiv {\n  color: red;\n  color: var(--color);\n}\n```\n\n## Usage\n\nAdd [PostCSS Custom Properties] to your build tool:\n\n```bash\nnpm install postcss-custom-properties --save-dev\n```\n\n#### Node\n\nUse [PostCSS Custom Properties] to process your CSS:\n\n```js\nimport postCSSCustomProperties from 'postcss-custom-properties';\n\npostCSSCustomProperties.process(YOUR_CSS);\n```\n\n#### PostCSS\n\nAdd [PostCSS] to your build tool:\n\n```bash\nnpm install postcss --save-dev\n```\n\nUse [PostCSS Custom Properties] as a plugin:\n\n```js\nimport postcss from 'gulp-postcss';\nimport postCSSCustomProperties from 'postcss-custom-properties';\n\npostcss([\n  postCSSCustomProperties()\n]).process(YOUR_CSS);\n```\n\n#### Gulp\n\nAdd [Gulp PostCSS] to your build tool:\n\n```bash\nnpm install gulp-postcss --save-dev\n```\n\nUse [PostCSS Custom Properties] in your Gulpfile:\n\n```js\nimport postcss from 'gulp-postcss';\nimport postCSSCustomProperties from 'postcss-custom-properties';\n\ngulp.task('css', () => gulp.src('./src/*.css').pipe(\n  postcss([\n    postCSSCustomProperties()\n  ])\n).pipe(\n  gulp.dest('.')\n));\n```\n\n#### Grunt\n\nAdd [Grunt PostCSS] to your build tool:\n\n```bash\nnpm install grunt-postcss --save-dev\n```\n\nUse [PostCSS Custom Properties] in your Gruntfile:\n\n```js\nimport postCSSCustomProperties from 'postcss-custom-properties';\n\ngrunt.loadNpmTasks('grunt-postcss');\n\ngrunt.initConfig({\n  postcss: {\n    options: {\n      use: [\n       postCSSCustomProperties()\n      ]\n    },\n    dist: {\n      src: '*.css'\n    }\n  }\n});\n```\n\n## Options\n\n### strict\n\nThe `strict` option determines whether a `var()` function should transform into\nits specified fallback value. By default, the option is `true` because this\nplugin can not verify if the computed `:root` value is valid or not.\n\n```css\n:root {\n  --color: red;\n}\n\ndiv {\n  color: var(--color, blue);\n}\n\n/* becomes */\n\n:root {\n  --color: red;\n}\n\ndiv {\n  color: blue;\n  color: var(--color, blue);\n}\n```\n\n### preserve\n\nThe `preserve` option determines how Custom Properties should be preserved. By\ndefault, this option is truthy and preserves declarations containing `var()`.\n\n```css\n:root {\n  --color: red;\n}\n\nh1 {\n  color: var(--color);\n}\n\n/* becomes */\n\n:root {\n  --color: red;\n}\n\nh1 {\n  color: red;\n  color: var(--color);\n}\n```\n\nThe option may also be set to `false`, where Custom Properties and declarations\ncontaining `var()` will be removed:\n\n```js\npostCSSCustomProperties({\n  variables: {\n    preserve: false\n  }\n})\n```\n\n```css\n:root {\n  --color: red;\n}\n\nh1 {\n  color: var(--color);\n}\n\n/* becomes */\n\nh1 {\n  color: red;\n}\n```\n\nThe option may also be set to `\"preserve-computed\"`, where Custom Properties\nwill remain, but declarations containing `var()` will be removed:\n\n```js\npostCSSCustomProperties({\n  variables: {\n    preserve: 'preserve-computed'\n  }\n})\n```\n\n```css\n:root {\n  --color: red;\n}\n\nh1 {\n  color: var(--color);\n}\n\n/* becomes */\n\n:root {\n  --color: red;\n}\n\nh1 {\n  color: red;\n}\n```\n\n### variables\n\nThe `variables` option allows you to pass an object of variables into CSS, as if\nthey had been specified on `:root`.\n\n```js\npostCSSCustomProperties({\n  variables: {\n    color: 'red'\n  }\n})\n```\n\n```css\nh1 {\n  color: var(--color);\n}\n\n/* becomes */\n\nh1 {\n  color: red;\n  color: var(--color);\n}\n```\n\nNote that these definitions will override any that exist in the CSS, and that\nthe keys will be automatically prefixed (`--`) to make it easier to share\nvariables in your codebase.\n\n### appendVariables\n\nThe `appendVariables` option determines whether Custom Properties will be\nappended to your CSS file. By default, this option is `false`.\n\nIf enabled when `preserve` is set to `true` or `\"computed\"`, this option allows\nyou to append your variables at the end of your CSS:\n\n```js\npostCSSCustomProperties({\n  appendVariables: true,\n  variables: {\n    color: 'red'\n  }\n})\n```\n\n```css\nh1 {\n  color: var(--color);\n}\n\n/* becomes */\n\nh1 {\n  color: red;\n  color: var(--color);\n}\n\n:root {\n  --color: red;\n}\n```\n\n### warnings\n\nThe `warnings` option determines whether Custom Property related warnings should\nbe logged by the plugin or not. By default, warnings are set to `false` and are\nnot logged.\n\nIf enabled, the plugin will enable all warnings:\n\n```js\npostCSSCustomProperties({\n  warnings: true\n})\n```\n\n```css\nh1 {\n  color: var(--color);\n}\n```\n\n```\nvariable '--color' is undefined and used without a fallback\n```\n\n### noValueNotifications\n\nWhen warnings are enabled, the `noValueNotifications` option determines whether\nundefined variables will throw a warning or an error. By default, it is set to\n`warning`.\n\n---\n\n## Notes\n\nAs written in the specification, usage of `var()` is limited to property values.\nDo not expect the plugin to transform `var()` in media queries or in selectors.\n\nThe transformation of Custom Properties done by this plugin _is not complete_\nand **cannot be** because dynamic *cascading* variables based on custom\nproperties relies on the DOM tree. Since we do not know the DOM in the context\nof this plugin, we cannot produce safe output. This plugin currently aims to\nprovide a future-proof way of using a **limited subset** of the features\nprovided by native CSS custom properties.\n\nThere is a separate plugin, [PostCSS CSS Variables], that attempts to guess the\ncontext of Custom Properties without access to the DOM tree. This does not\n[reflecting the specifications](https://github.com/MadLittleMods/postcss-css-variables/issues/4),\nso be sure you understand the risks before you decide to use it.\n\n## Contributing\n\nFork, work on a branch, install dependencies & run tests before submitting a PR.\n\n```bash\n$ git clone https://github.com/YOU/postcss-custom-properties.git\n$ git checkout -b patch-1\n$ npm install\n$ npm test\n```\n\n---\n\n## [Changelog](CHANGELOG.md)\n\n## [License](LICENSE)\n\n[npm-url]: https://www.npmjs.com/package/postcss-custom-properties\n[npm-img]: https://img.shields.io/npm/v/postcss-custom-properties.svg\n[css-url]: https://jonathantneal.github.io/css-db/#css-variables\n[css-img]: https://jonathantneal.github.io/css-db/badge/css-variables.svg\n[cli-url]: https://travis-ci.org/postcss/postcss-custom-properties\n[cli-img]: https://img.shields.io/travis/postcss/postcss-custom-properties.svg\n[git-url]: https://gitter.im/postcss/postcss\n[git-img]: https://img.shields.io/badge/chat-gitter-blue.svg\n\n[CSS Custom Properties for Cascading Variables]: https://www.w3.org/TR/css-variables-1/\n[PostCSS CSS Variables]: https://github.com/MadLittleMods/postcss-css-variables\n[PostCSS Custom Properties]: https://github.com/postcss/postcss-custom-properties\n[PostCSS]: https://github.com/postcss/postcss\n[Gulp PostCSS]: https://github.com/postcss/gulp-postcss\n[Grunt PostCSS]: https://github.com/nDmitry/grunt-postcss\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/postcss/postcss-custom-properties.git"
  },
  "scripts": {
    "babelify": "babel index.js --out-dir dist",
    "lint": "eslint *.js index.js ./test/",
    "prepublish": "npm run babelify",
    "release": "npmpub",
    "tape": "tape -r babel-register test/*.js",
    "test": "npm run lint && npm run babelify && npm run tape"
  },
  "version": "7.0.0"
}
