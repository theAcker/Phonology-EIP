{
  "_args": [
    [
      {
        "raw": "imagemin@^6.0.0",
        "scope": null,
        "escapedName": "imagemin",
        "name": "imagemin",
        "rawSpec": "^6.0.0",
        "spec": ">=6.0.0 <7.0.0",
        "type": "range"
      },
      "C:\\Users\\Alexandre\\VoiceWatcher\\node_modules\\gatsby-plugin-sharp"
    ]
  ],
  "_from": "imagemin@^6.0.0",
  "_hasShrinkwrap": false,
  "_id": "imagemin@6.1.0",
  "_location": "/imagemin",
  "_nodeVersion": "8.12.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/imagemin_6.1.0_1545764576165_0.030690000794135308"
  },
  "_npmUser": {
    "name": "sindresorhus",
    "email": "sindresorhus@gmail.com"
  },
  "_npmVersion": "6.5.0",
  "_phantomChildren": {
    "array-union": "1.0.2",
    "dir-glob": "2.0.0",
    "fast-glob": "2.2.6",
    "glob": "7.1.3",
    "slash": "1.0.0"
  },
  "_requested": {
    "raw": "imagemin@^6.0.0",
    "scope": null,
    "escapedName": "imagemin",
    "name": "imagemin",
    "rawSpec": "^6.0.0",
    "spec": ">=6.0.0 <7.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/gatsby-plugin-sharp"
  ],
  "_resolved": "https://registry.npmjs.org/imagemin/-/imagemin-6.1.0.tgz",
  "_shasum": "62508b465728fea36c03cdc07d915fe2d8cf9e13",
  "_shrinkwrap": null,
  "_spec": "imagemin@^6.0.0",
  "_where": "C:\\Users\\Alexandre\\VoiceWatcher\\node_modules\\gatsby-plugin-sharp",
  "bugs": {
    "url": "https://github.com/imagemin/imagemin/issues"
  },
  "dependencies": {
    "file-type": "^10.7.0",
    "globby": "^8.0.1",
    "make-dir": "^1.0.0",
    "p-pipe": "^1.1.0",
    "pify": "^4.0.1",
    "replace-ext": "^1.0.0"
  },
  "description": "Minify images",
  "devDependencies": {
    "ava": "^1.0.1",
    "del": "^3.0.0",
    "imagemin-jpegtran": "^6.0.0",
    "imagemin-svgo": "^7.0.0",
    "imagemin-webp": "^5.0.0",
    "is-jpg": "^2.0.0",
    "tempy": "^0.2.1",
    "xo": "^0.23.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-8ryJBL1CN5uSHpiBMX0rJw79C9F9aJqMnjGnrd/1CafegpNuA81RBAAru/jQQEOWlOJJlpRnlcVFF6wq+Ist0A==",
    "shasum": "62508b465728fea36c03cdc07d915fe2d8cf9e13",
    "tarball": "https://registry.npmjs.org/imagemin/-/imagemin-6.1.0.tgz",
    "fileCount": 4,
    "unpackedSize": 5811,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcIn7gCRA9TVsSAnZWagAA8EgP/0Hjb/QrfBUMKIJ7J16U\ndSjRevr+I1IhPm4NN0yqwB44nbB5B+WjyAQ2wXEClkBUGhGjHXyMt+Ukcubx\nzt11sAZLQH752tOvoYk4iSTA4Jb6QtrC5Lr6VhajUTPnSNL5dUs/sLFORxew\nOhcnU9cOTgrVPaC43bQjrU0+FkBB2Ho3fmwwtje7g7lSAblmBvReA22vlE8P\nE28wLV2abcYsGNTAoVP6qyLY7l1022+z9KEAmHOgcsfxwugcOERfXu/trUwD\nJpgmbl6DH6d1oQCW21iS83/67EwSXeF8kCczOi2EL1YgT9drm3vcDhMw6a/3\n6t7tdAB44eONxbT/i1klXgXYE6AZV9e66R/R7odp7/ovMkqjhgnwzDnXDxLQ\ndOQaZY0dKero/6rCC6IwlPaf6J/HdPaBrpVvweL9enF0T3AoSslJY55qStv5\nZpdzU/mj1MnLyPGKYv08xvJn0FH7khvVunVUPgd0mmnU9NeYF7GGDQ5KrL9F\nwpfi3x9Uks7DHhLupm5JtqkV5NyCt5lmJm+4x9pK3dInLf2gENDKUx0I20kz\nBJxbWHXGek/kDMHtMGE3P7Gcxq7wx0EYldq++8x1JLF7/c9kTddyqGzkeISw\nf7cWXefjbs9QFmhtAQGSS1j1hW/V+LRSxqCI3682ESJXfC8vefAfn1EMmlpU\nuPIB\r\n=eIZW\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=6"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "b3da5d3d3ff2504f80d2986c687a2feefb5ae147",
  "homepage": "https://github.com/imagemin/imagemin#readme",
  "keywords": [
    "minify",
    "compress",
    "image",
    "images",
    "jpeg",
    "jpg",
    "png",
    "gif",
    "svg"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "1000ch",
      "email": "shogosensui@gmail.com"
    },
    {
      "name": "bradbaris",
      "email": "bradbaris@gmail.com"
    },
    {
      "name": "kevva",
      "email": "kevinmartensson@gmail.com"
    },
    {
      "name": "nothingismagick",
      "email": "daniel@kinokabaret.com"
    },
    {
      "name": "shinnn",
      "email": "snnskwtnb@gmail.com"
    },
    {
      "name": "sindresorhus",
      "email": "sindresorhus@gmail.com"
    },
    {
      "name": "xhmikosr",
      "email": "xhmikosr@gmail.com"
    }
  ],
  "name": "imagemin",
  "optionalDependencies": {},
  "readme": "# imagemin [![Build Status](https://travis-ci.org/imagemin/imagemin.svg?branch=master)](https://travis-ci.org/imagemin/imagemin) [![Build status](https://ci.appveyor.com/api/projects/status/wlnem7wef63k4n1t?svg=true)](https://ci.appveyor.com/project/ShinnosukeWatanabe/imagemin)\n\n> Minify images seamlessly\n\n\n## Install\n\n```\n$ npm install imagemin\n```\n\n\n## Usage\n\n```js\nconst imagemin = require('imagemin');\nconst imageminJpegtran = require('imagemin-jpegtran');\nconst imageminPngquant = require('imagemin-pngquant');\n\n(async () => {\n\tconst files = await imagemin(['images/*.{jpg,png}'], 'build/images', {\n\t\tplugins: [\n\t\t\timageminJpegtran(),\n\t\t\timageminPngquant({quality: '65-80'})\n\t\t]\n\t});\n\n\tconsole.log(files);\n\t//=> [{data: <Buffer 89 50 4e …>, path: 'build/images/foo.jpg'}, …]\n})();\n```\n\n\n## API\n\n### imagemin(input, [output], [options])\n\nReturns `Promise<Object[]>` in the format `{data: Buffer, path: string}`.\n\n#### input\n\nType: `string[]`\n\nFiles to be optimized. See supported `minimatch` [patterns](https://github.com/isaacs/minimatch#usage).\n\n#### output\n\nType: `string`\n\nSet the destination folder to where your files will be written. If no destination is specified no files will be written.\n\n#### options\n\nType: `Object`\n\n##### plugins\n\nType: `Array`\n\n[Plugins](https://www.npmjs.com/browse/keyword/imageminplugin) to use.\n\n### imagemin.buffer(buffer, [options])\n\nReturns `Promise<Buffer>`.\n\n#### buffer\n\nType: `Buffer`\n\nBuffer to optimize.\n\n#### options\n\nType: `Object`\n\n##### plugins\n\nType: `Array`\n\n[Plugins](https://www.npmjs.com/browse/keyword/imageminplugin) to use.\n\n\n## Related\n\n- [imagemin-cli](https://github.com/imagemin/imagemin-cli) - CLI for this module\n- [imagemin-app](https://github.com/imagemin/imagemin-app) - GUI app for this module\n- [gulp-imagemin](https://github.com/sindresorhus/gulp-imagemin) - Gulp plugin\n- [grunt-contrib-imagemin](https://github.com/gruntjs/grunt-contrib-imagemin) - Grunt plugin\n\n\n## License\n\nMIT © [imagemin](https://github.com/imagemin)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/imagemin/imagemin.git"
  },
  "scripts": {
    "test": "xo && ava"
  },
  "version": "6.1.0"
}
