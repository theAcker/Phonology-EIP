{
  "_args": [
    [
      {
        "raw": "gatsby-plugin-netlify@^2.0.0",
        "scope": null,
        "escapedName": "gatsby-plugin-netlify",
        "name": "gatsby-plugin-netlify",
        "rawSpec": "^2.0.0",
        "spec": ">=2.0.0 <3.0.0",
        "type": "range"
      },
      "C:\\Users\\Alexandre\\VoiceWatcher"
    ]
  ],
  "_from": "gatsby-plugin-netlify@^2.0.0",
  "_hasShrinkwrap": false,
  "_id": "gatsby-plugin-netlify@2.0.16",
  "_location": "/gatsby-plugin-netlify",
  "_nodeVersion": "11.13.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/gatsby-plugin-netlify_2.0.16_1556738647784_0.11047566309874357"
  },
  "_npmUser": {
    "name": "dschau",
    "email": "dustinschau@gmail.com"
  },
  "_npmVersion": "lerna/3.10.7/node@v11.13.0+x64 (darwin)",
  "_phantomChildren": {
    "graceful-fs": "4.1.15",
    "jsonfile": "4.0.0",
    "universalify": "0.1.2"
  },
  "_requested": {
    "raw": "gatsby-plugin-netlify@^2.0.0",
    "scope": null,
    "escapedName": "gatsby-plugin-netlify",
    "name": "gatsby-plugin-netlify",
    "rawSpec": "^2.0.0",
    "spec": ">=2.0.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/gatsby-plugin-netlify/-/gatsby-plugin-netlify-2.0.16.tgz",
  "_shasum": "542849448c495c9feb68e5051de39dfb4b0d10b9",
  "_shrinkwrap": null,
  "_spec": "gatsby-plugin-netlify@^2.0.0",
  "_where": "C:\\Users\\Alexandre\\VoiceWatcher",
  "author": {
    "name": "Kyle Mathews",
    "email": "mathews.kyle@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/gatsbyjs/gatsby/issues"
  },
  "contributors": [
    {
      "name": "Nathanael Beisiegel",
      "email": "pknb.dev@gmail.com"
    }
  ],
  "dependencies": {
    "@babel/runtime": "^7.0.0",
    "fs-extra": "^4.0.2",
    "kebab-hash": "^0.1.2",
    "lodash": "^4.17.10",
    "webpack-assets-manifest": "^3.0.2"
  },
  "description": "A Gatsby plugin which generates a _headers file for netlify",
  "devDependencies": {
    "@babel/cli": "^7.0.0",
    "@babel/core": "^7.0.0",
    "babel-preset-gatsby-package": "^0.1.4",
    "cross-env": "^5.1.4"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-zvaE1GIz0gjHMwNIp9QAVob2UVQY6szXxkyxrHsoE8gR6Wumw4TV8oZwSDPZQI+GV22zMuCb7Ii3riKRstwIpg==",
    "shasum": "542849448c495c9feb68e5051de39dfb4b0d10b9",
    "tarball": "https://registry.npmjs.org/gatsby-plugin-netlify/-/gatsby-plugin-netlify-2.0.16.tgz",
    "fileCount": 11,
    "unpackedSize": 34419,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcyfJYCRA9TVsSAnZWagAAU9oP/2dmVzzOERtcGmnb7cuv\noU7RrFOLP5mcig4Ir0q5BsucVjPQEaP2nYkZsjNcAt3SDoOElW4SQAXBUIoK\nM3wHE8yFEO1OdrUA2LTXNGegs0UQk3QA6wHJ8CpvJD4B3zADGSggVUPiqA2r\nUJ8GhwXCzKp7XjQQ8h9cMa31T5BUovE3XLoRZNchtg+8b/WVdMNXJ5K1qksJ\ny5zLMGEMC1wZsCGXyPIaew7RzxLsFTmV0qbkp1grs1C4AkQrBKqXivqT2RB7\n6NI4ZAosppxupdzZonos+anCAyprjQvckKwVBdxog3Q/GZ+p7pTCQfOFpUtz\nlG/vaJRi4Ghtq5/3V3+nK0VH/rvVCov049KQqwv0szAXL6t15e5BfeTs7hFC\nv0Jg/Lis9OTBcTJx9hqkrD3LPVWzf54pne6vs1PSRkpByOk5R4ltmv9rsgcB\nd7I7RhUx5DzSe42S0kL7sfDgqpWJsK5pAlq++8qZYtcHr6/ba3SDu0sn2p8u\n/A9EGTQJxKZqleZHYZg9GS9BqYi83KC/hW89l3PDwrvX43keBSqQm15Iq+sQ\nigTm2Ic3LJOhjV4iidu7JE+on5lhXbj3H0quQ8wYB8IzfLFTAwJhQ6TFJvtM\nZUxNpiKFPxV6heTpu596LDGDo0m4NANWTMTjsbNhLl/pylb/XkzI9vX3s0UY\nFHqV\r\n=8fGR\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "7a94028da2553fc75c234f00e98903771ae68e6e",
  "homepage": "https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-netlify#readme",
  "keywords": [
    "gatsby",
    "gatsby-plugin",
    "http/2-server-push",
    "netlify"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "dschau",
      "email": "dustinschau@gmail.com"
    },
    {
      "name": "freiksenet",
      "email": "freiksenet@gmail.com"
    },
    {
      "name": "jamo",
      "email": "jamo@isotalo.fi"
    },
    {
      "name": "kylemathews",
      "email": "mathews.kyle@gmail.com"
    },
    {
      "name": "m-allanson",
      "email": "michael.allanson@gmail.com"
    },
    {
      "name": "monastic.panic",
      "email": "monastic.panic@gmail.com"
    },
    {
      "name": "moocar",
      "email": "anthony@moocar.me"
    },
    {
      "name": "pieh",
      "email": "misiek.piechowiak@gmail.com"
    },
    {
      "name": "sidharthachatterjee",
      "email": "me@sidharthachatterjee.com"
    },
    {
      "name": "wardpeet",
      "email": "ward@coding-tech.com"
    }
  ],
  "name": "gatsby-plugin-netlify",
  "optionalDependencies": {},
  "peerDependencies": {
    "gatsby": "^2.0.0"
  },
  "readme": "# gatsby-plugin-netlify\n\nAutomatically generates a `_headers` file and a `_redirects` file at the root of the public folder to configure\n[HTTP headers](https://www.netlify.com/docs/headers-and-basic-auth/) and [redirects](https://www.netlify.com/docs/redirects/) on Netlify.\n\nNotably, you can immediately enable HTTP/2 server push of critical Gatsby assets\nthrough the `Link` headers.\n\nBy default, the plugin will add HTTP/2 assets to server push the critical Gatsby\nscripts (ones that have the `preload` attribute already). It will also add some\nbasic security headers. You can easily add or replace headers through the plugin\nconfig.\n\n## Install\n\n`npm install --save gatsby-plugin-netlify`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-netlify`]\n```\n\n## Configuration\n\nIf you just need the critical assets, you don't need to add any additional\nconfig. However, if you want to add headers, remove default headers, or\ntransform the given headers, you can use the following configuration options.\n\n```javascript\nplugins: [\n  {\n    resolve: `gatsby-plugin-netlify`,\n    options: {\n      headers: {}, // option to add more headers. `Link` headers are transformed by the below criteria\n      allPageHeaders: [], // option to add headers for all pages. `Link` headers are transformed by the below criteria\n      mergeSecurityHeaders: true, // boolean to turn off the default security headers\n      mergeLinkHeaders: true, // boolean to turn off the default gatsby js headers\n      mergeCachingHeaders: true, // boolean to turn off the default caching headers\n      transformHeaders: (headers, path) => headers, // optional transform for manipulating headers under each path (e.g.sorting), etc.\n      generateMatchPathRewrites: true, // boolean to turn off automatic creation of redirect rules for client only paths\n    },\n  },\n]\n```\n\n### Headers\n\nThe headers object represents a JS version of the\n[Netlify `_headers` file format](https://www.netlify.com/docs/headers-and-basic-auth/).\nYou should pass in a object with string keys (representing the paths) and an\narray of strings for each header.\n\nAn example:\n\n```javascript\n{\n  options: {\n    headers: {\n      \"/*\": [\n        \"Basic-Auth: someuser:somepassword anotheruser:anotherpassword\",\n      ],\n      \"/my-page\": [\n        // matching headers (by type) are replaced by Netlify with more specific routes\n        \"Basic-Auth: differentuser:differentpassword\",\n      ],\n    },\n  }\n}\n```\n\nLink paths are specially handed by this plugin. Since most files are processed\nand cache-busted through Gatsby (with a file hash), the plugin will transform\nany base file names to the hashed variants. If the file is not hashed, it will\nensure the path is valid relative to the output `public` folder. You should be\nable to reference assets imported through javascript in the `static` folder.\n\nDo not specify the public path in the config, as the plugin will provide it for\nyou.\n\nThe Netlify `_headers` file does not inherit headers, and it will replace any\nmatching headers it finds in more specific routes. For example, if you add a\nlink to the root wildcard path (`/*`), it will be replaced by any more\nspecific path. If you want a resource to put linked across the site, you will\nhave to add to every path. To make this easier, the plugin provides the\n`allPageHeaders` option to inject the same headers on every path.\n\n```javascript\n{\n  options: {\n    allPageHeaders: [\n      \"Link: </static/my-logo.png>; rel=preload; as=image\",\n    ],\n    headers: {\n      \"/*\": [\n        \"Basic-Auth: someuser:somepassword anotheruser:anotherpassword\",\n      ],\n    },\n  }\n}\n```\n\nYou can validate the `_headers` config through the\n[Netlify playground app](https://play.netlify.com/headers).\n\n### Redirects\n\nYou can create redirects using the [`createRedirect`](https://www.gatsbyjs.org/docs/actions/#createRedirect) action.\n\nIn addition to the options provided by the Gatsby API, you can pass these options specific to this plugin:\n\n| Attribute    | Description                                                                                                                                                                                                                                                                                                                                                                                                      |\n| ------------ | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `force`      | Overrides existing content in the path. This is particularly useful for domain alias redirects. See [the Netlify documentation for this option](https://www.netlify.com/docs/redirects/#structured-configuration).                                                                                                                                                                                               |\n| `statusCode` | Overrides the HTTP status code which is set to `302` by default or `301` when [`isPermanent`](https://www.gatsbyjs.org/docs/actions/#createRedirect) is `true`. Since Netlify supports custom status codes, you can set one here. For example, `200` for rewrites, or `404` for a custom error page. See [the Netlify documentation for this option](https://www.netlify.com/docs/redirects/#http-status-codes). |\n\nAn example:\n\n```javascript\ncreateRedirect({ fromPath: \"/old-url\", toPath: \"/new-url\", isPermanent: true })\ncreateRedirect({ fromPath: \"/url\", toPath: \"/zn-CH/url\", Language: \"zn\" })\ncreateRedirect({\n  fromPath: \"/url_that_is/not_pretty\",\n  toPath: \"/pretty/url\",\n  statusCode: 200,\n})\n```\n\nYou can also create a `_redirects` file in the `static` folder for the same effect. Any programmatically created redirects will be appended to the file.\n\n```sh\n# my manually set redirects\n/home              /\n/blog/my-post.php  /blog/my-post\n```\n\nYou can validate the `_redirects` config through the\n[Netlify playground app](https://play.netlify.com/redirects).\n\nRedirect rules are automatically added for [client only paths](https://www.gatsbyjs.org/docs/building-apps-with-gatsby/#client-only-routes--user-authentication). If those rules are conflicting with custom rules or if you want to have more control over them you can disable them in [configuration](#configuration) by setting `generateMatchPathRewrites` to `false`.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-netlify"
  },
  "scripts": {
    "build": "babel src --out-dir . --ignore **/__tests__",
    "prepare": "cross-env NODE_ENV=production npm run build",
    "watch": "babel -w src --out-dir . --ignore **/__tests__"
  },
  "version": "2.0.16"
}
