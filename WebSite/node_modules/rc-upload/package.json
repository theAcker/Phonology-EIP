{
  "_args": [
    [
      {
        "raw": "rc-upload@~2.6.0",
        "scope": null,
        "escapedName": "rc-upload",
        "name": "rc-upload",
        "rawSpec": "~2.6.0",
        "spec": ">=2.6.0 <2.7.0",
        "type": "range"
      },
      "C:\\Users\\Alexandre\\VoiceWatcher\\node_modules\\antd"
    ]
  ],
  "_from": "rc-upload@~2.6.0",
  "_hasShrinkwrap": false,
  "_id": "rc-upload@2.6.4",
  "_location": "/rc-upload",
  "_nodeVersion": "10.12.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/rc-upload_2.6.4_1556526748265_0.9378069440208374"
  },
  "_npmUser": {
    "name": "afc163",
    "email": "afc163@gmail.com"
  },
  "_npmVersion": "6.7.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "rc-upload@~2.6.0",
    "scope": null,
    "escapedName": "rc-upload",
    "name": "rc-upload",
    "rawSpec": "~2.6.0",
    "spec": ">=2.6.0 <2.7.0",
    "type": "range"
  },
  "_requiredBy": [
    "/antd"
  ],
  "_resolved": "https://registry.npmjs.org/rc-upload/-/rc-upload-2.6.4.tgz",
  "_shasum": "4c2eb84b83003ca80028fb2411d420377e43846a",
  "_shrinkwrap": null,
  "_spec": "rc-upload@~2.6.0",
  "_where": "C:\\Users\\Alexandre\\VoiceWatcher\\node_modules\\antd",
  "bugs": {
    "url": "http://github.com/react-component/upload/issues"
  },
  "config": {
    "port": 8020
  },
  "dependencies": {
    "babel-runtime": "6.x",
    "classnames": "^2.2.5",
    "prop-types": "^15.5.7",
    "warning": "4.x"
  },
  "description": "upload ui component for react",
  "devDependencies": {
    "axios": "^0.18.0",
    "co-busboy": "^1.3.0",
    "coveralls": "^3.0.3",
    "expect.js": "0.3.x",
    "jest": "^20.0.1",
    "pre-commit": "1.x",
    "raf": "^3.4.0",
    "rc-tools": "6.x",
    "react": "^16.0.0",
    "react-dom": "^16.0.0",
    "sinon": "7.3.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-nkiqCITJqX/U/N9yhfkwhknPAfHoB3r8zoyToLjsRXsLQIG2tP02XDtgQb6VJXTb0mI5aJIdG7p/F9r0DWnf5Q==",
    "shasum": "4c2eb84b83003ca80028fb2411d420377e43846a",
    "tarball": "https://registry.npmjs.org/rc-upload/-/rc-upload-2.6.4.tgz",
    "fileCount": 19,
    "unpackedSize": 68009,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcxradCRA9TVsSAnZWagAAiiAQAIvj5dLLRrlbR91g6n2R\n3wb5II90kmgrbmUbCMeNdQtKBo8TMpk9q1HIxj3WyjxNqmr8hbivb/NVsJvo\nMB6STRz52DJDe+BSO9q4KdRANCmsJzXA3o29E1VnpflH1Qs7k+T8ClM+RUQw\nSWHfi9RTnOxX+QEKPzKsjHv+ZqVAtkzHcoukazztNK5dCE7S9o4sFzj8Uo3h\nTUPeXnmFrQmFEb0EyGNGmUYpR2MOZf/yyoPGjS0LVLmnKZaiDJduHt6QTJ6j\nKKdgpVShKhPpIYgjZplEOxCSmTFZGQZM7XTEla7fEKcm8TeAlKvSf8rK9W3o\ncozbOCKgotdOQbPkVJXoTDlE27dOweJYXoZLxlSUyPjoG1rNDKdbaXnO4wS0\nuC0nmdxMuN2OHIumGu7jqRNbSHkwSzqwEOrPF1ZP12IJ7GFvbYB7TqbSd6/R\nXfET3aiDZ6SI4EPlsvE4+dDSW42Vx4r8udsrR2NDJ0i5ELrAbhiOdXpbrPsk\nnRuWZlgUb8DNf+M2yz0bNYy/SfjWUktVtmiYHErAoSVLvG5t8GNcBboM+V9N\nPnkEJJ8pfDXCcza7ajYqGiwfQQyyNEey4T5NAbhLt+oWXy9NRrfiVnMdQEe9\nzQTVBTJDyfUoiLMagXTjF/KgplJHulzNaqV8IZCgW68TpvynSoJywlBkEgLx\nYLy8\r\n=B1LO\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [
    "lib",
    "es"
  ],
  "gitHead": "4997be2e719caf5f58e6a6cd35677457b66de07b",
  "homepage": "http://github.com/react-component/upload",
  "jest": {
    "collectCoverageFrom": [
      "src/*"
    ],
    "coveragePathIgnorePatterns": [
      "src/IframeUploader.jsx"
    ],
    "transform": {
      "\\.tsx?$": "./node_modules/rc-tools/scripts/jestPreprocessor.js",
      "\\.jsx?$": "./node_modules/rc-tools/scripts/jestPreprocessor.js"
    }
  },
  "keywords": [
    "react",
    "react-component",
    "react-upload",
    "upload"
  ],
  "license": "MIT",
  "main": "./lib/index",
  "maintainers": [
    {
      "name": "afc163",
      "email": "afc163@gmail.com"
    },
    {
      "name": "benjycui",
      "email": "benjytrys@gmail.com"
    },
    {
      "name": "shepherdwind",
      "email": "eward.song@gmail.com"
    },
    {
      "name": "yiminghe",
      "email": "yiminghe@gmail.com"
    },
    {
      "name": "zombiej",
      "email": "smith3816@gmail.com"
    }
  ],
  "module": "./es/index",
  "name": "rc-upload",
  "optionalDependencies": {},
  "pre-commit": [
    "lint"
  ],
  "readme": "# rc-upload\n---\n\nReact Upload\n\n[![NPM version][npm-image]][npm-url]\n[![build status][travis-image]][travis-url]\n[![Test coverage][coveralls-image]][coveralls-url]\n[![npm download][download-image]][download-url]\n\n[npm-image]: http://img.shields.io/npm/v/rc-upload.svg?style=flat-square\n[npm-url]: http://npmjs.org/package/rc-upload\n[download-image]: https://img.shields.io/npm/dm/rc-upload.svg?style=flat-square\n[download-url]: https://npmjs.org/package/rc-upload\n[travis-image]: https://img.shields.io/travis/react-component/upload.svg?style=flat-square\n[travis-url]: https://travis-ci.org/react-component/upload\n[coveralls-image]: https://img.shields.io/coveralls/react-component/upload.svg?style=flat-square\n[coveralls-url]: https://coveralls.io/r/react-component/upload?branch=master\n\n## Development\n\n```\nnpm install\nnpm start\n```\n\n## Example\n\nhttp://localhost:8020/examples/\n\nonline example: http://react-component.github.io/upload/examples/simple.html\n\n\n## Feature\n\n* support ie8,ie8+,chrome,firefox,safari\n\n## install\n\n[![rc-upload](https://nodei.co/npm/rc-upload.png)](https://npmjs.org/package/rc-upload)\n\n## Usage\n\n```js\nvar Upload = require('rc-upload');\nvar React = require('react');\nReact.render(<Upload />, container);\n```\n\n## API\n\n### props\n\n|name|type|default| description|\n|-----|---|--------|----|\n|name | string | file| file param post to server |\n|style | object | {}| root component inline style |\n|className | string | - | root component className |\n|disabled | boolean | false | whether disabled |\n|component | \"div\"|\"span\" | \"span\"| wrap component name |\n|supportServerRender | boolean | false| whether to support server render |\n|onReady | function | | only call when supportServerRender is true, upload is rendered completely |\n|action| string &#124; function(file): string &#124; Promise&lt;string&gt; | | form action url |\n|directory| boolean | false | support upload whole directory |\n|data| object/function(file) | | other data object to post or a function which returns a data object |\n|headers| object | {} | http headers to post, available in modern browsers |\n|accept | string | | input accept attribute |\n|multiple | boolean | false | only support ie10+|\n|onStart | function| | start upload file |\n|onError| function| | error callback |\n|onSuccess | function | | success callback |\n|onProgress | function || progress callback, only for modern browsers|\n|beforeUpload| function |null| before upload check, return false or a rejected Promise will stop upload, only for modern browsers|\n|customRequest | function | null | provide an override for the default xhr behavior for additional customization|\n|withCredentials | boolean | false | ajax upload with cookie send |\n|openFileDialogOnClick | boolean | true |  |\n\n#### onError arguments\n\n1. `err`: request error message\n2. `response`: request response, not support on iframeUpload\n3. `file`: upload file\n\n### onSuccess arguments\n\n1. `result`: response body\n2. `file`: upload file\n3. `xhr`: xhr header, only for modern browsers which support AJAX upload. since\n   2.4.0\n\n\n### customRequest\n\nAllows for advanced customization by overriding default behavior in AjaxUploader. Provide your own XMLHttpRequest calls to interface with custom backend processes or interact with AWS S3 service through the aws-sdk-js package.\n\ncustomRequest callback is passed an object with:\n\n* `onProgress: (event: { percent: number }): void`\n* `onError: (event: Error, body?: Object): void`\n* `onSuccess: (body: Object): void`\n* `data: Object`\n* `filename: String`\n* `file: File`\n* `withCredentials: Boolean`\n* `action: String`\n* `headers: Object`\n\n\n### methods\n\nabort(file?: File) => void: abort the uploading file\n\n\n### IE8/9 Note\n\n#### Download Popup Problem\n\nIn iframe uploader way, the content-type of response should be `text/plain` or `text/html`. [See more about\nContent-Type Negotiation](https://github.com/blueimp/jQuery-File-Upload/wiki/Setup#content-type-negotiation)\n\nWhat's more, in iframe mode, the response's status should always be `200 OK`, otherwise you might get an `Access is denied` error in IE 8/9.\n\n#### Domain Problem\n\nIf the Page set document.domain, then server should output document.domain according to _documentDomain parameter.\n\n```js\nvar ret = '';\nif (postData._documentDomain) {\n  ret += '<script>document.domain=\"'+postData._documentDomain+'\";</script>';\n}\nthis.body = ret + '{\"url\":\"xx.jpq\"}';\n```\n\n## License\n\nrc-upload is released under the MIT license.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/react-component/upload.git"
  },
  "scripts": {
    "build": "rc-tools run build",
    "compile": "rc-tools run compile --babel-runtime",
    "coverage": "jest --coverage && cat ./coverage/lcov.info | coveralls",
    "gh-pages": "rc-tools run gh-pages",
    "lint": "rc-tools run lint",
    "pub": "rc-tools run pub --babel-runtime",
    "start": "node server",
    "test": "jest  --setupTestFrameworkScriptFile=raf/polyfill"
  },
  "version": "2.6.4"
}
