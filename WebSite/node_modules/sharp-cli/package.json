{
  "_args": [
    [
      {
        "raw": "sharp-cli@^1.7.0",
        "scope": null,
        "escapedName": "sharp-cli",
        "name": "sharp-cli",
        "rawSpec": "^1.7.0",
        "spec": ">=1.7.0 <2.0.0",
        "type": "range"
      },
      "C:\\Users\\Alexandre\\VoiceWatcher"
    ]
  ],
  "_from": "sharp-cli@^1.7.0",
  "_hasShrinkwrap": false,
  "_id": "sharp-cli@1.9.0",
  "_location": "/sharp-cli",
  "_nodeVersion": "10.1.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/sharp-cli_1.9.0_1548555529503_0.8360191028591064"
  },
  "_npmUser": {
    "name": "vseventer",
    "email": "mark@vseventer.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {
    "color": "3.1.1",
    "decamelize": "1.2.0",
    "detect-libc": "1.0.3",
    "file-uri-to-path": "1.0.0",
    "fs-copy-file-sync": "1.1.1",
    "get-caller-file": "1.0.3",
    "is-stream": "1.1.0",
    "map-age-cleaner": "0.1.3",
    "nan": "2.13.2",
    "nice-try": "1.0.5",
    "npm-run-path": "2.0.2",
    "npmlog": "4.1.2",
    "p-finally": "1.0.0",
    "p-is-promise": "2.1.0",
    "path-exists": "3.0.0",
    "path-key": "2.0.1",
    "prebuild-install": "5.3.0",
    "pump": "3.0.0",
    "require-directory": "2.1.1",
    "require-main-filename": "1.0.1",
    "semver": "5.7.0",
    "set-blocking": "2.0.0",
    "shebang-command": "1.2.0",
    "signal-exit": "3.0.2",
    "simple-get": "3.0.3",
    "string-width": "2.1.1",
    "strip-eof": "1.0.0",
    "tar": "4.4.8",
    "tunnel-agent": "0.6.0",
    "which": "1.3.1",
    "which-module": "2.0.0",
    "wrap-ansi": "2.1.0",
    "y18n": "3.2.1"
  },
  "_requested": {
    "raw": "sharp-cli@^1.7.0",
    "scope": null,
    "escapedName": "sharp-cli",
    "name": "sharp-cli",
    "rawSpec": "^1.7.0",
    "spec": ">=1.7.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/sharp-cli/-/sharp-cli-1.9.0.tgz",
  "_shasum": "b675486ca72ded170bd51fb591bd98db1cc2c5ee",
  "_shrinkwrap": null,
  "_spec": "sharp-cli@^1.7.0",
  "_where": "C:\\Users\\Alexandre\\VoiceWatcher",
  "author": {
    "name": "Mark van Seventer",
    "email": "mark@vseventer.com"
  },
  "bin": {
    "sharp": "bin/cli.js"
  },
  "bugs": {
    "url": "https://github.com/vseventer/sharp-cli/issues"
  },
  "dependencies": {
    "bubble-stream-error": "1.0.x",
    "multiyargs": "1.0.x",
    "sharp": "0.21.3",
    "url-template": "2.0.x",
    "yargs": "12.0.x"
  },
  "description": "CLI for sharp.",
  "devDependencies": {
    "fs-extra": "7.0.x",
    "mocha": "5.2.x",
    "must": "0.13.x",
    "nyc": "13.1.x",
    "sinon": "7.2.x",
    "snazzy": "8.0.x",
    "standard": "12.0.x",
    "tempfile": "2.0.x"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-Wohq8r4m87KWKH4PbHmVY7JtKsXdRUrYh0eGpQsfmT+ajCe4qR8aKEAlI/m0dTZZ/1ieY8q09tTVXUV0cHlBlQ==",
    "shasum": "b675486ca72ded170bd51fb591bd98db1cc2c5ee",
    "tarball": "https://registry.npmjs.org/sharp-cli/-/sharp-cli-1.9.0.tgz",
    "fileCount": 91,
    "unpackedSize": 712460,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcTRUKCRA9TVsSAnZWagAA/YoP/ipUZY2geowg/i9bGaVH\nq+q3U6BJzaOvUY5QisR2ohXMMYdlTLHrgqRvat5c17emvAI7stnWFaL3x8g7\nAcmrW8ILVAbK1fQvhF6VYV2AZn/8M/6egHxFaxuvsk+klP/dyFaFSjNjCIQW\n03MRLPWO6OLPRTYXMRv8SD2UWRfUWxpgn4pIuq5kDKZrswFkV3dI6wekI7MW\nb69FlMNTJcUeZKgpLRSWRfwas3AaSpuQxEzk9+oJj5kfrRy0Xk1zRppy8D7F\nHIXEFnRpfARk1Hx0JXmamXpIJKS0QfmL46e7/5uhx3uMCKEW5VAnmwj0BlhX\nKyNikllZTa6F5Z9epuy3Ic0F/qVlmCumYmhbn6b7f+60/lTAByq70qyxKBK5\nskU2m5A6PKbOjWL9JRFJbVrRO4ExJm52LGy1m2lA8/ECFyrDRwuiWwE9RGoz\nW4hrN0YlsASWbx9azmcg2UYaQPLLrtgfzAPEhiZ38E+1yjsBPeJvnmC4xxyT\nYPQHKpEMKhv/XTGb6hnVXcDsjH/TIVmwm7XloyUSRQhy2zQq9whcLZtq5JjW\noOxC6WjDEN2BmTN4lIiJroTmDyIlfHYx6XpodNFu1kePIqBhkP8kPxvECaOx\nmpplN0MIbRk2ckfmXvhMQuhnPbs4rw1lHMTyVDbZCQgNMnuJgDmMEqlum+v5\n0VAH\r\n=jj56\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=6.x"
  },
  "gitHead": "628d77f5aa22db97a4459cd4c53610b837fa837a",
  "homepage": "https://github.com/vseventer/sharp-cli",
  "keywords": [
    "cli",
    "jpeg",
    "libvips",
    "png",
    "sharp",
    "vips",
    "webp"
  ],
  "license": "MIT",
  "main": "lib/",
  "maintainers": [
    {
      "name": "vseventer",
      "email": "mark@kinvey.com"
    }
  ],
  "name": "sharp-cli",
  "optionalDependencies": {},
  "readme": "# sharp-cli\n> CLI for [sharp](https://www.npmjs.com/package/sharp).\n\n*Issues with the output should be reported on the `sharp` [issue tracker](https://github.com/lovell/sharp/issues).*\n\n## Install\n`$ npm install sharp-cli`\n\n## Usage\n```\nsharp <options> [command..]\n\nCommands:\n  sharp bandbool <operator>                    Perform a bitwise boolean operation on all input\n                                               image channels (bands) to produce a single channel\n                                               output image\n  sharp blur [sigma]                           Blur the image\n  sharp boolean <operand> <operator>           Perform a bitwise boolean operation with operand\n                                               image\n  sharp convolve <width> <height> <kernel>     Convolve the image with the specified kernel\n  sharp extend <top> <bottom> <left> <right>   Extends/pads the edges of the image with the provided\n                                               background colour\n  sharp extract <top> <left> <width> <height>  Extract a region of the image\n  sharp extractChannel <band>                  Extract a single channel from a multi-channel image\n  sharp flatten [background]                   Merge alpha transparency channel, if any, with a\n                                               background\n  sharp flip                                   Flip the image about the vertical Y axis\n  sharp flop                                   Flop the image about the horizontal X axis\n  sharp gamma [factor] [factorOut]             Apply a gamma correction by reducing the encoding\n                                               (darken) pre-resize then increasing the encoding\n                                               (brighten) post-resize\n  sharp greyscale                              Convert to 8-bit greyscale; 256 shades of grey\n                                                                                [aliases: grayscale]\n  sharp joinChannel <images..>                 Join one or more channels to the image\n  sharp linear [multiplier] [offset]           Apply the linear formula a × input + b to the image\n  sharp median [size]                          Apply median filter\n  sharp negate                                 Produce the \"negative\" of the image\n  sharp normalise                              Enhance output image contrast by stretching its\n                                               luminance to cover the full dynamic range\n                                                                                [aliases: normalize]\n  sharp overlayWith <overlay>                  Overlay (composite) an image over the processed\n                                               (resized, extracted etc.) image\n  sharp recomb <matrix>                        Recomb the image with the specified matrix\n  sharp removeAlpha                            Remove alpha channel, if any\n  sharp resize <width> [height]                Resize image to width × height\n  sharp rotate [angle]                         Rotate the output image\n  sharp sharpen [sigma]                        Sharpen the image\n  sharp threshold [value]                      Any pixel value greather than or equal to the\n                                               threshold value will be set to 255, otherwise it will\n                                               be set to 0\n  sharp tint <rgb>                             Tint the image using the provided chroma while\n                                               preserving the image luminance\n  sharp tile [size]                            Use tile-based deep zoom (image pyramid) output\n  sharp toColourspace <colourspace>            Set the output colourspace    [aliases: toColorspace]\n  sharp trim [threshold]                       Trim \"boring\" pixels from all edges that contain\n                                               values within a percentage similarity of the top-left\n                                               pixel\n\nGlobal Options\n  --compressionLevel, -c  zlib compression level                               [number] [default: 9]\n  --format, -f            Force output to a given format\n                  [choices: \"input\", \"jpeg\", \"jpg\", \"png\", \"raw\", \"tiff\", \"webp\"] [default: \"input\"]\n  --input, -i             Path to (an) image file(s)             [array] [required] [default: stdin]\n  --limitInputPixels, -l  Do not process input images where the number of pixels (width x height)\n                          exceeds this limit                           [number] [default: 268402689]\n  --output, -o            Directory or URI template to write the image files to\n                                                               [string] [required] [default: stdout]\n  --progressive, -p       Use progressive (interlace) scan                                 [boolean]\n  --quality, -q           Quality                                             [number] [default: 80]\n  --withMetadata, -m      Include all metadata (EXIF, XMP, IPTC) from the input image in the output\n                          image                                                            [boolean]\n\nOptimization Options\n  --adaptiveFiltering                       Use adaptive row filtering                     [boolean]\n  --alphaQuality                            Quality of alpha layer            [number] [default: 80]\n  --chromaSubsampling                       Set to \"4:4:4\" to prevent chroma subsampling when\n                                            quality <= 90                  [string] [default: 4:2:0]\n  --compression                             Compression options\n                 [string] [choices: \"ccittfax4\", \"deflate\", \"jpeg\", \"lzw\", \"none\"] [default: \"jpeg\"]\n  --lossless                                Use lossless compression mode                  [boolean]\n  --nearLossless                            use near_lossless compression mode             [boolean]\n  --optimise, --optimize                    Apply optimiseScans, overshootDeringing, and\n                                            trellisQuantisation                            [boolean]\n  --optimiseCoding, --optimizeCoding        Optimise Huffman coding tables [boolean] [default: true]\n  --optimiseScans, --optimizeScans          Optimise progressive scans                     [boolean]\n  --overshootDeringing                      Apply overshoot deringing                      [boolean]\n  --predictor                               Compression predictor\n                           [string] [choices: \"float\", \"horizontal\", \"none\"] [default: \"horizontal\"]\n  --pyramid                                 Write an image pyramid                         [boolean]\n  --quantisationTable, --quantizationTable  Quantization table to use          [number] [default: 0]\n  --sequentialRead                          An advanced setting that switches the libvips access\n                                            method to VIPS_ACCESS_SEQUENTIAL               [boolean]\n  --squash                                  Squash 8-bit images down to 1 bit              [boolean]\n  --tileHeight                              Vertical tile size                              [number]\n  --tileWidth                               Horizontal tile size                            [number]\n  --trellisQuantisation                     Apply trellis quantisation                     [boolean]\n  --xres                                    Horizontal resolution            [number] [default: 1.0]\n  --yres                                    Vertical resolution              [number] [default: 1.0]\n\nMisc. Options\n  --help, -h     Show help                                                                 [boolean]\n  --version, -v  Show version number                                                       [boolean]\n\nExamples:\n  sharp -i ./input.jpg -o ./out resize 300 200        out/input.jpg will be a 300 pixels wide and\n                                                      200 pixels high image containing a scaled and\n                                                      cropped version of input.jpg\n  sharp -i ./input.jpg -o ./out -mq90 rotate 180 --   out/input.jpg will be an upside down, 300px\n  resize 300 -- flatten \"#ff6600\" -- overlayWith      wide, alpha channel flattened onto orange\n  ./overlay.png --gravity southeast -- sharpen        background, composited with overlay.png with\n                                                      SE gravity, sharpened, with metadata, 90%\n                                                      quality version of input.jpg\n\nFor more information on available options, please visit https://sharp.pixelplumbing.com/\n```\n\n## Related\n* [sharp](http://sharp.pixelplumbing.com/) - API for this module\n\n## Changelog\nSee the [Changelog](./CHANGELOG.md) for a list of changes.\n\n## License\n    The MIT License (MIT)\n\n    Copyright (c) 2019 Mark van Seventer\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy of\n    this software and associated documentation files (the \"Software\"), to deal in\n    the Software without restriction, including without limitation the rights to\n    use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n    the Software, and to permit persons to whom the Software is furnished to do so,\n    subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in all\n    copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/vseventer/sharp-cli.git"
  },
  "scripts": {
    "posttest": "nyc report --reporter=lcov",
    "pretest": "standard | snazzy",
    "test": "nyc mocha"
  },
  "version": "1.9.0"
}
