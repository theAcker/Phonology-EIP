{
  "_args": [
    [
      {
        "raw": "postcss-safe-parser@^3.0.1",
        "scope": null,
        "escapedName": "postcss-safe-parser",
        "name": "postcss-safe-parser",
        "rawSpec": "^3.0.1",
        "spec": ">=3.0.1 <4.0.0",
        "type": "range"
      },
      "C:\\Users\\Alexandre\\VoiceWatcher\\node_modules\\styled-jsx-plugin-stylelint\\node_modules\\stylelint"
    ]
  ],
  "_from": "postcss-safe-parser@>=3.0.1 <4.0.0",
  "_id": "postcss-safe-parser@3.0.1",
  "_inCache": true,
  "_location": "/postcss-safe-parser",
  "_nodeVersion": "7.10.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/postcss-safe-parser-3.0.1.tgz_1500058200491_0.5108064394444227"
  },
  "_npmUser": {
    "name": "ai",
    "email": "andrey@sitnik.ru"
  },
  "_npmVersion": "4.2.0",
  "_phantomChildren": {
    "chalk": "2.4.2",
    "supports-color": "5.5.0"
  },
  "_requested": {
    "raw": "postcss-safe-parser@^3.0.1",
    "scope": null,
    "escapedName": "postcss-safe-parser",
    "name": "postcss-safe-parser",
    "rawSpec": "^3.0.1",
    "spec": ">=3.0.1 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/styled-jsx-plugin-stylelint/stylelint"
  ],
  "_resolved": "https://registry.npmjs.org/postcss-safe-parser/-/postcss-safe-parser-3.0.1.tgz",
  "_shasum": "b753eff6c7c0aea5e8375fbe4cde8bf9063ff142",
  "_shrinkwrap": null,
  "_spec": "postcss-safe-parser@^3.0.1",
  "_where": "C:\\Users\\Alexandre\\VoiceWatcher\\node_modules\\styled-jsx-plugin-stylelint\\node_modules\\stylelint",
  "author": {
    "name": "Andrey Sitnik",
    "email": "andrey@sitnik.ru"
  },
  "babel": {
    "presets": [
      [
        "env",
        {
          "targets": {
            "browsers": "last 1 version",
            "node": 4
          },
          "loose": true
        }
      ]
    ],
    "plugins": [
      "add-module-exports",
      "precompile-charcodes"
    ]
  },
  "bugs": {
    "url": "https://github.com/postcss/postcss-safe-parser/issues"
  },
  "dependencies": {
    "postcss": "^6.0.6"
  },
  "description": "Fault-tolerant CSS parser for PostCSS",
  "devDependencies": {
    "babel-core": "^6.25.0",
    "babel-eslint": "^7.2.3",
    "babel-plugin-add-module-exports": "^0.2.1",
    "babel-plugin-precompile-charcodes": "^1.1.0",
    "babel-preset-env": "^1.6.0",
    "del": "^3.0.0",
    "eslint": "^4.2.0",
    "eslint-config-postcss": "^2.0.2",
    "gulp": "^3.9.1",
    "gulp-babel": "^6.1.2",
    "gulp-changed": "^3.1.0",
    "gulp-eslint": "^4.0.0",
    "gulp-jest": "^2.0.0",
    "gulp-sourcemaps": "^2.6.0",
    "jest": "^20.0.4",
    "lint-staged": "^4.0.1",
    "postcss-parser-tests": "^6.0.2",
    "pre-commit": "^1.1.3",
    "run-sequence": "^2.0.0"
  },
  "directories": {},
  "dist": {
    "shasum": "b753eff6c7c0aea5e8375fbe4cde8bf9063ff142",
    "tarball": "https://registry.npmjs.org/postcss-safe-parser/-/postcss-safe-parser-3.0.1.tgz"
  },
  "eslintConfig": {
    "parser": "babel-eslint",
    "extends": "eslint-config-postcss",
    "rules": {
      "key-spacing": [
        "error",
        {
          "align": "value"
        }
      ],
      "complexity": "off",
      "no-var": "off"
    },
    "env": {
      "jest": true
    }
  },
  "homepage": "https://github.com/postcss/postcss-safe-parser#readme",
  "keywords": [
    "css",
    "postcss",
    "postcss-syntax",
    "parser",
    "fault tolerant"
  ],
  "license": "MIT",
  "lint-staged": {
    "test/*.js": "eslint",
    "lib/*.es6": "eslint"
  },
  "main": "lib/safe-parse",
  "maintainers": [
    {
      "name": "ai",
      "email": "andrey@sitnik.ru"
    }
  ],
  "name": "postcss-safe-parser",
  "optionalDependencies": {},
  "pre-commit": [
    "lint-staged"
  ],
  "readme": "# PostCSS Safe Parser [![Build Status][ci-img]][ci]\n\n<img align=\"right\" width=\"95\" height=\"95\"\n     title=\"Philosopher’s stone, logo of PostCSS\"\n     src=\"http://postcss.github.io/postcss/logo.svg\">\n\nA fault-tolerant CSS parser for [PostCSS], which will find & fix syntax errors,\ncapable of parsing any input. It is useful for:\n\n* Parse legacy code with many hacks. For example, it can parse all examples\n  from [Browserhacks].\n* Works with demo tools with live input like [Autoprefixer demo].\n\n[Autoprefixer demo]: http://simevidas.jsbin.com/gufoko/quiet\n[Browserhacks]:      http://browserhacks.com/\n[PostCSS]:           https://github.com/postcss/postcss\n[ci-img]:            https://img.shields.io/travis/postcss/postcss-safe-parser.svg\n[ci]:                https://travis-ci.org/postcss/postcss-safe-parser\n\n<a href=\"https://evilmartians.com/?utm_source=postcss\">\n<img src=\"https://evilmartians.com/badges/sponsored-by-evil-martians.svg\" alt=\"Sponsored by Evil Martians\" width=\"236\" height=\"54\">\n</a>\n\n## Usage\n\n```js\nvar safe   = require('postcss-safe-parser');\nvar badCss = 'a {';\n\npostcss(plugins).process(badCss, { parser: safe }).then(function (result) {\n    result.css //= 'a {}'\n});\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/postcss/postcss-safe-parser.git"
  },
  "scripts": {
    "lint-staged": "lint-staged",
    "test": "gulp"
  },
  "version": "3.0.1"
}
