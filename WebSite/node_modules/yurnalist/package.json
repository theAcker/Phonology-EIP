{
  "_args": [
    [
      {
        "raw": "yurnalist@^1.0.2",
        "scope": null,
        "escapedName": "yurnalist",
        "name": "yurnalist",
        "rawSpec": "^1.0.2",
        "spec": ">=1.0.2 <2.0.0",
        "type": "range"
      },
      "C:\\Users\\Alexandre\\VoiceWatcher\\node_modules\\gatsby\\node_modules\\gatsby-cli"
    ]
  ],
  "_from": "yurnalist@^1.0.2",
  "_hasShrinkwrap": false,
  "_id": "yurnalist@1.0.5",
  "_location": "/yurnalist",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/yurnalist_1.0.5_1546681131420_0.0701908223743748"
  },
  "_npmUser": {
    "name": "thijskoerselman",
    "email": "thijskoerselman@gmail.com"
  },
  "_phantomChildren": {
    "ci-info": "2.0.0",
    "ms": "2.1.1"
  },
  "_requested": {
    "raw": "yurnalist@^1.0.2",
    "scope": null,
    "escapedName": "yurnalist",
    "name": "yurnalist",
    "rawSpec": "^1.0.2",
    "spec": ">=1.0.2 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/gatsby/gatsby-cli"
  ],
  "_resolved": "https://registry.npmjs.org/yurnalist/-/yurnalist-1.0.5.tgz",
  "_shasum": "98534ddc1330e1316684981f53cba879ffc07a28",
  "_shrinkwrap": null,
  "_spec": "yurnalist@^1.0.2",
  "_where": "C:\\Users\\Alexandre\\VoiceWatcher\\node_modules\\gatsby\\node_modules\\gatsby-cli",
  "author": {
    "name": "Thijs Koerselman"
  },
  "bugs": {
    "url": "https://github.com/0x80/yurnalist/issues"
  },
  "dependencies": {
    "babel-runtime": "^6.26.0",
    "chalk": "^2.1.0",
    "cli-table3": "^0.5.1",
    "debug": "^4.1.0",
    "deep-equal": "^1.0.1",
    "detect-indent": "^5.0.0",
    "inquirer": "^6.2.0",
    "invariant": "^2.2.0",
    "is-builtin-module": "^3.0.0",
    "is-ci": "^2.0.0",
    "leven": "^2.0.0",
    "loud-rejection": "^1.2.0",
    "node-emoji": "^1.6.1",
    "object-path": "^0.11.2",
    "read": "^1.0.7",
    "rimraf": "^2.5.0",
    "semver": "^5.1.0",
    "strip-ansi": "^5.0.0",
    "strip-bom": "^3.0.0"
  },
  "description": "Elegant console output, borrowed from Yarn",
  "devDependencies": {
    "babel-cli": "^6.26.0",
    "babel-core": "^6.26.0",
    "babel-eslint": "^10.0.1",
    "babel-plugin-array-includes": "^2.0.3",
    "babel-plugin-inline-import": "^3.0.0",
    "babel-plugin-transform-builtin-extend": "^1.1.2",
    "babel-plugin-transform-inline-imports-commonjs": "^1.0.0",
    "babel-plugin-transform-runtime": "^6.4.3",
    "babel-preset-env": "^1.6.0",
    "babel-preset-flow": "^6.23.0",
    "babel-preset-stage-0": "^6.0.0",
    "babylon": "^6.5.0",
    "eslint": "^5.10.0",
    "eslint-config-fb-strict": "^23.2.0",
    "eslint-plugin-babel": "^5.0.0",
    "eslint-plugin-flowtype": "^3.2.0",
    "eslint-plugin-jasmine": "^2.6.2",
    "eslint-plugin-jest": "^22.1.2",
    "eslint-plugin-jsx-a11y": "^6.0.2",
    "eslint-plugin-prefer-object-spread": "^1.2.1",
    "eslint-plugin-prettier": "^3.0.0",
    "eslint-plugin-react": "^7.1.0",
    "eslint-plugin-relay": "^1.0.0",
    "eslint-plugin-yarn-internal": "file:scripts/eslint-rules",
    "execa": "^1.0.0",
    "fancy-log": "^1.3.2",
    "flow-bin": "0.88.0",
    "jest": "^23.6.0",
    "jsinspect": "^0.12.6",
    "mock-stdin": "^0.3.0",
    "prettier": "^1.5.2",
    "temp": "^0.8.3"
  },
  "directories": {},
  "dist": {
    "shasum": "98534ddc1330e1316684981f53cba879ffc07a28",
    "integrity": "sha512-EuLjqX3Q15iVM0UtZa5Ju536uRmklKd2kKhdE5D5fIh8RZmh+pJ8c6wj2oGo0TA+T/Ii2o79cIHCTMfciW8jlA==",
    "tarball": "https://registry.npmjs.org/yurnalist/-/yurnalist-1.0.5.tgz",
    "fileCount": 35,
    "unpackedSize": 73835,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcMHssCRA9TVsSAnZWagAA+iEP/jSA3cCw+KSZoxK5lB1e\n2WBH0cSYwW7CVXqI8TQt3DEIjelxRu1UxfVbqYd9+vZX7YjaLat8ARdkFQgs\nyGGXKIUQo00/QdQPy/gasYdBl6ZCKF65gVxpm3EPdsN3JT7xcDWNIhRDBQZq\nWow4x+cyWPSQlGiEdKT8tQLqvGSujLSdg7GTKqeyDtbQT7oLzMv35TSgLvJW\nzw6fpbH8BacokhcKnHkoyrOy28hjA7xi8NQ3zAN7gLakhVvQnv8CGy1c2F2X\nStj1MES3mv2oK7mwMjbW1TLd0kQwwx9kmC9Jt9xssXxCvOyjKV/Rp3XLf9lH\nqJvj1fOHnAe4f9Cm59hL4pe6xez+DcV2KK1OzxIOpMYAArXzJll4g4qHFvas\nKi5SOJc9n8Jhw3/kB/hzdlsQKaUi2Mto4geSyP5jdGKMEswjsjWJdobmysV0\naOSxKgewF+PaGFIcL36uqkA86OvCO7OK+Fm1hdg0pcAQyMB1nFvWwlZUBnmG\nqo+Cc9Q67y6h+M+69ln2Up8ZBLy0tZTi4RIQZpGh/Pm/iGw2t4Iub/fO6K0X\nHxVvhe6TRsBehL6SraCR6SYlNCQQzdYqUWlNFngzNPzonFW4PbssEK4OEDoZ\nhTCTiL34LParPUVVqfa0XpiCFHX4QrwLM1Dyf3LoifJ8rsSLn+SU+CJfFrmv\nq7F0\r\n=lYiY\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=4.0.0"
  },
  "homepage": "https://github.com/0x80/yurnalist#readme",
  "installationMethod": "unknown",
  "jest": {
    "collectCoverageFrom": [
      "src/**/*.js"
    ],
    "testEnvironment": "node",
    "modulePathIgnorePatterns": [
      "__tests__/fixtures/",
      "packages/pkg-tests/pkg-tests-fixtures",
      "dist/"
    ],
    "testPathIgnorePatterns": [
      "__tests__/(fixtures|__mocks__)/",
      "updates/",
      "_(temp|mock|install|init|helpers).js$",
      "packages/pkg-tests"
    ]
  },
  "keywords": [
    "ansi",
    "cli",
    "color",
    "colors",
    "colour",
    "formatting",
    "log",
    "shell",
    "terminal",
    "activity",
    "command-line",
    "command",
    "console.log",
    "console",
    "emoji",
    "error",
    "footer",
    "header",
    "info",
    "input",
    "inspection",
    "list",
    "logger",
    "logging",
    "object",
    "output",
    "pretty",
    "process",
    "program",
    "progress",
    "question",
    "select",
    "spinner",
    "stderr",
    "stdout",
    "steps",
    "success",
    "table",
    "text",
    "tree",
    "warn",
    "yarn"
  ],
  "license": "BSD-2-Clause",
  "licenseText": "BSD 2-Clause License\n\nFor Yarn software\n\nCopyright (c) 2016-present, Yarn Contributors. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n * Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n * Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
  "main": "dist/index.js",
  "maintainers": [
    {
      "name": "thijskoerselman",
      "email": "thijskoerselman@gmail.com"
    }
  ],
  "name": "yurnalist",
  "optionalDependencies": {},
  "preferGlobal": true,
  "readme": "# Yurnalist\n\nAn elegant console reporter, borrowed from [Yarn](https://yarnpkg.com).\n\n## Introduction\n\nPretty console output makes developers happy and Yarn is doing a nice job. Yurnalist takes the internal console reporter code from Yarn and makes it available for use in other Node.js applications.\n\nThe current version is based on code from Yarn v1.13.0.\n\nYurnalist can be used to report many different things besides simple messages.\n\n### Features\n\n* log, info, warn, succes, error & command messages\n* progress bars\n* activity spinners\n* process steps\n* object inspection\n* lists\n* emojis\n* trees\n* tables\n* user question\n* user select\n* program header & footer\n\n## Install\n\n```sh\nyarn add yurnalist\n```\n\nOr if your prefer NPM\n\n```sh\nnpm install yurnalist\n```\n\n## How to use\n\nHere is an example showing a combination of different reporter API functions.\n\n```javascript\nimport report from 'yurnalist'\n\n/* A function to fake some async task */\nfunction waitNumberOfSecs(secs) {\n  return new Promise((resolve) => setTimeout(resolve, secs * 1000));\n}\n\nasync function fetchSomething() {\n  report.info('Please wait while I fetch something for you.');\n  report.warn('It might take a little while though.');\n\n  const spinner = report.activity();\n  spinner.tick('I am on it!');\n\n  try {\n    await waitNumberOfSecs(1);\n    spinner.tick('Still busy...');\n    await waitNumberOfSecs(1);\n    spinner.tick('Almost there...');\n    await waitNumberOfSecs(1);\n    report.success('Done!');\n  } catch (err) {\n    report.error(err);\n  }\n\n  spinner.end();\n}\n\nfetchSomething();\n\n```\n\n## Requirements\n\nNode >= 4\n\n## Examples\n\nExamples showing different API functions are found in [/examples](/examples). You can run them directly with node >= 7.6 (because of async/await syntax). For older versions you could use the `--harmony` flag, or otherwise Babel.\n\nTo run the activity example:\n\n```sh\nnode examples/activity.js\n```\n\n## Configuration\n\nA normal import gives you a reporter instance configured with defaults for easy use. If you want something else you can call `createReporter(options)` to give you an instance with different options.\n\n### Options\n\nThese are the options of the reporter as defined by Flow:\n\n```javascript\ntype ReporterOptions = {\n  verbose?: boolean,\n  stdout?: Stdout,\n  stderr?: Stdout,\n  stdin?: Stdin,\n  emoji?: boolean,\n  noProgress?: boolean,\n  silent?: boolean,\n  nonInteractive?: boolean,\n  peekMemoryCounter?: boolean\n};\n```\n\nThe defaults used are:\n\n```javascript\nconst defaults = {\n  verbose: false,\n  stdout: process.stdout,\n  stderr: process.stderr,\n  stdin: process.stdin,\n  emoji: true,\n  noProgress: false,\n  silent: false,\n  nonInteractive: false,\n  peekMemoryCounter: false\n}\n```\n\nThe peekMemoryCounter is disabled by default. If you enable it, you'll have to call `reporter.close()` to stop its running timer. Otherwise your program will not exit. The memory counter can be used to display in the footer data.\n\n## API\n\nThe API still needs some documentation, but most methods are straightforward. In the meantime you can also look at the [examples](./examples) and possibly even the [tests](./__tests__).\n\nThe following functions are available:\n\n* table\n* step\n* inspect\n* list\n* header\n* footer\n* log\n* success\n* error\n* info\n* command\n* warn\n* question\n* tree\n* activitySet\n* activity\n* select\n* progress\n* close\n* createReporter\n\n## Language\n\nYarn uses a language file for certain messages. For example if you try to skip a required question, or when you pick an invalid item from a select. This language file is not yet exposed in the Yurnalist API. The only supported language is English, as it is in Yarn at the moment.\n\nI plan to make this configurable so that you can define your own messages in your own language .\n\n## Emojis\n\nYou can use Emojis in your output. Yurnalist should disable them if they are not allowed in the application environment.\n\nCheck:\n\n* [node-emoji](https://github.com/omnidan/node-emoji)\n* [Emoji cheat sheet](https://www.webpagefx.com/tools/emoji-cheat-sheet/)\n\n## Credits\n\nOf course ❤️ and credits to all the contributers of [Yarn](https://yarnpkg.com). The ease with which I was able to extract this module from their codebase is proving some awesome engineering skills.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/0x80/yurnalist.git"
  },
  "scripts": {
    "build": "babel src --out-dir dist",
    "clean": "rimraf dist",
    "lint": "eslint . && flow check",
    "prepublish": "npm run clean && npm run build",
    "prettier": "eslint src examples __tests__ --fix",
    "test": "yarn lint && yarn test-only",
    "test-coverage": "node --max_old_space_size=4096 node_modules/jest/bin/jest.js --coverage --verbose",
    "test-only": "node --max_old_space_size=4096 node_modules/jest/bin/jest.js --verbose",
    "watch": "babel src --out-dir dist --watch"
  },
  "version": "1.0.5"
}
