{
  "_args": [
    [
      {
        "raw": "hastscript@^4.0.0",
        "scope": null,
        "escapedName": "hastscript",
        "name": "hastscript",
        "rawSpec": "^4.0.0",
        "spec": ">=4.0.0 <5.0.0",
        "type": "range"
      },
      "C:\\Users\\Alexandre\\VoiceWatcher\\node_modules\\hast-util-from-parse5"
    ]
  ],
  "_from": "hastscript@^4.0.0",
  "_hasShrinkwrap": false,
  "_id": "hastscript@4.1.0",
  "_location": "/hastscript",
  "_nodeVersion": "10.0.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/hastscript_4.1.0_1538686624386_0.10068064597434812"
  },
  "_npmUser": {
    "name": "wooorm",
    "email": "tituswormer@gmail.com"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "hastscript@^4.0.0",
    "scope": null,
    "escapedName": "hastscript",
    "name": "hastscript",
    "rawSpec": "^4.0.0",
    "spec": ">=4.0.0 <5.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/hast-util-from-parse5"
  ],
  "_resolved": "https://registry.npmjs.org/hastscript/-/hastscript-4.1.0.tgz",
  "_shasum": "ea5593fa6f6709101fc790ced818393ddaa045ce",
  "_shrinkwrap": null,
  "_spec": "hastscript@^4.0.0",
  "_where": "C:\\Users\\Alexandre\\VoiceWatcher\\node_modules\\hast-util-from-parse5",
  "author": {
    "name": "Titus Wormer",
    "email": "tituswormer@gmail.com",
    "url": "http://wooorm.com"
  },
  "bugs": {
    "url": "https://github.com/syntax-tree/hastscript/issues"
  },
  "contributors": [
    {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "http://wooorm.com"
    }
  ],
  "dependencies": {
    "comma-separated-tokens": "^1.0.0",
    "hast-util-parse-selector": "^2.2.0",
    "property-information": "^4.0.0",
    "space-separated-tokens": "^1.0.0"
  },
  "description": "Hyperscript compatible DSL for creating virtual HAST trees",
  "devDependencies": {
    "browserify": "^16.0.0",
    "esmangle": "^1.0.0",
    "nyc": "^12.0.0",
    "prettier": "^1.13.5",
    "remark-cli": "^5.0.0",
    "remark-preset-wooorm": "^4.0.0",
    "tape": "^4.0.0",
    "xo": "^0.21.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-bOTn9hEfzewvHyXdbYGKqOr/LOz+2zYhKbC17U2YAjd16mnjqB1BQ0nooM/RdMy/htVyli0NAznXiBtwDi1cmQ==",
    "shasum": "ea5593fa6f6709101fc790ced818393ddaa045ce",
    "tarball": "https://registry.npmjs.org/hastscript/-/hastscript-4.1.0.tgz",
    "fileCount": 7,
    "unpackedSize": 12139
  },
  "files": [
    "index.js",
    "factory.js",
    "html.js",
    "svg.js"
  ],
  "gitHead": "dac182c4665963328ea0149335616aec62bf067c",
  "homepage": "https://github.com/syntax-tree/hastscript#readme",
  "keywords": [
    "hast",
    "rehype",
    "vdom",
    "virtual",
    "dom",
    "hyperscript",
    "dsl",
    "html"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "wooorm",
      "email": "tituswormer@gmail.com"
    }
  ],
  "name": "hastscript",
  "nyc": {
    "check-coverage": true,
    "lines": 100,
    "functions": 100,
    "branches": 100
  },
  "optionalDependencies": {},
  "prettier": {
    "tabWidth": 2,
    "useTabs": false,
    "singleQuote": true,
    "bracketSpacing": false,
    "semi": false,
    "trailingComma": "none"
  },
  "readme": "# hastscript [![Build Status][travis-badge]][travis] [![Coverage Status][codecov-badge]][codecov]\n\n[Hyperscript][] (and [`virtual-hyperscript`][virtual-hyperscript])\ncompatible DSL for creating virtual [HAST][] trees in HTML and SVG.\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install hastscript\n```\n\n## Usage\n\n```javascript\nvar h = require('hastscript')\nvar s = require('hastscript/svg')\n\n// Child nodes as an array\nconsole.log(\n  h('.foo#some-id', [\n    h('span', 'some text'),\n    h('input', {type: 'text', value: 'foo'}),\n    h('a.alpha', {class: 'bravo charlie', download: 'download'}, [\n      'delta',\n      'echo'\n    ])\n  ])\n)\n\n// Child nodes as arguments\nconsole.log(\n  h(\n    'form',\n    {method: 'POST'},\n    h('input', {type: 'text', name: 'foo'}),\n    h('input', {type: 'text', name: 'bar'}),\n    h('input', {type: 'submit', value: 'send'})\n  )\n)\n\nconsole.log(\n  s('svg', {xmlns: 'http://www.w3.org/2000/svg', viewbox: '0 0 500 500'}, [\n    s('title', 'SVG `<circle>` element'),\n    s('circle', {cx: 120, cy: 120, r: 100})\n  ])\n)\n```\n\nYields:\n\n```js\n{ type: 'element',\n  tagName: 'div',\n  properties: { className: [ 'foo' ], id: 'some-id' },\n  children:\n   [ { type: 'element',\n       tagName: 'span',\n       properties: {},\n       children: [ { type: 'text', value: 'some text' } ] },\n     { type: 'element',\n       tagName: 'input',\n       properties: { type: 'text', value: 'foo' },\n       children: [] },\n     { type: 'element',\n       tagName: 'a',\n       properties: { className: [ 'alpha', 'bravo', 'charlie' ], download: true },\n       children:\n        [ { type: 'text', value: 'delta' },\n          { type: 'text', value: 'echo' } ] } ] }\n{ type: 'element',\n  tagName: 'form',\n  properties: { method: 'POST' },\n  children:\n   [ { type: 'element',\n       tagName: 'input',\n       properties: { type: 'text', name: 'foo' },\n       children: [] },\n     { type: 'element',\n       tagName: 'input',\n       properties: { type: 'text', name: 'bar' },\n       children: [] },\n     { type: 'element',\n       tagName: 'input',\n       properties: { type: 'submit', value: 'send' },\n       children: [] } ] }\n{ type: 'element',\n  tagName: 'svg',\n  properties: { xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 500 500' },\n  children:\n   [ { type: 'element',\n       tagName: 'title',\n       properties: {},\n       children: [ { type: 'text', value: 'SVG `<circle>` element' } ] },\n     { type: 'element',\n       tagName: 'circle',\n       properties: { cx: 120, cy: 120, r: 100 },\n       children: [] } ] }\n```\n\n## API\n\n### `h(selector?[, properties][, ...children])`\n\n### `s(selector?[, properties][, ...children])`\n\nDSL to create virtual [HAST][] trees for HTML or SVG.\n\n##### Parameters\n\n###### `selector`\n\nSimple CSS selector (`string`, optional).  Can contain a tag name (`foo`), IDs\n(`#bar`), and classes (`.baz`).\nIf there is no tag name in the selector, `h` defaults to a `div` element,\nand `s` to a `g` element.\n\n###### `properties`\n\nMap of properties (`Object.<*>`, optional).\n\n###### `children`\n\n(Lists of) child nodes (`string`, `Node`, `Array.<string|Node>`, optional).\nWhen strings are encountered, they are normalised to [`text`][text] nodes.\n\n##### Returns\n\n[`Element`][element].\n\n## Contribute\n\nSee [`contributing.md` in `syntax-tree/hast`][contributing] for ways to get\nstarted.\n\nThis organisation has a [Code of Conduct][coc].  By interacting with this\nrepository, organisation, or community you agree to abide by its terms.\n\n## License\n\n[MIT][license] Â© [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[travis-badge]: https://img.shields.io/travis/syntax-tree/hastscript.svg\n\n[travis]: https://travis-ci.org/syntax-tree/hastscript\n\n[codecov-badge]: https://img.shields.io/codecov/c/github/syntax-tree/hastscript.svg\n\n[codecov]: https://codecov.io/github/syntax-tree/hastscript\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n\n[hast]: https://github.com/syntax-tree/hast\n\n[element]: https://github.com/syntax-tree/hast#element\n\n[virtual-hyperscript]: https://github.com/Matt-Esch/virtual-dom/tree/master/virtual-hyperscript\n\n[hyperscript]: https://github.com/dominictarr/hyperscript\n\n[text]: https://github.com/syntax-tree/unist#text\n\n[contributing]: https://github.com/syntax-tree/hast/blob/master/contributing.md\n\n[coc]: https://github.com/syntax-tree/hast/blob/master/code-of-conduct.md\n",
  "readmeFilename": "readme.md",
  "remarkConfig": {
    "plugins": [
      "preset-wooorm"
    ]
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/syntax-tree/hastscript.git"
  },
  "scripts": {
    "build": "npm run build-bundle && npm run build-mangle",
    "build-bundle": "browserify index.js --bare -s hastscript > hastscript.js",
    "build-mangle": "esmangle hastscript.js > hastscript.min.js",
    "format": "remark . -qfo && prettier --write '**/*.js' && xo --fix",
    "test": "npm run format && npm run build && npm run test-coverage",
    "test-api": "node test",
    "test-coverage": "nyc --reporter lcov tape test.js"
  },
  "version": "4.1.0",
  "xo": {
    "prettier": true,
    "esnext": false,
    "rules": {
      "no-self-compare": "off",
      "guard-for-in": "off"
    },
    "ignores": [
      "hastscript.js"
    ]
  }
}
