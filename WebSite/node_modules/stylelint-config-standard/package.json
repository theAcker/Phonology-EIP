{
  "_args": [
    [
      {
        "raw": "stylelint-config-standard@^18.2.0",
        "scope": null,
        "escapedName": "stylelint-config-standard",
        "name": "stylelint-config-standard",
        "rawSpec": "^18.2.0",
        "spec": ">=18.2.0 <19.0.0",
        "type": "range"
      },
      "C:\\Users\\Alexandre\\VoiceWatcher"
    ]
  ],
  "_from": "stylelint-config-standard@^18.2.0",
  "_hasShrinkwrap": false,
  "_id": "stylelint-config-standard@18.3.0",
  "_location": "/stylelint-config-standard",
  "_nodeVersion": "10.13.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/stylelint-config-standard_18.3.0_1555162007658_0.42219382518187487"
  },
  "_npmUser": {
    "name": "hudochenkov",
    "email": "aleks@hudochenkov.com"
  },
  "_npmVersion": "6.9.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "stylelint-config-standard@^18.2.0",
    "scope": null,
    "escapedName": "stylelint-config-standard",
    "name": "stylelint-config-standard",
    "rawSpec": "^18.2.0",
    "spec": ">=18.2.0 <19.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/stylelint-config-standard/-/stylelint-config-standard-18.3.0.tgz",
  "_shasum": "a2a1b788d2cf876c013feaff8ae276117a1befa7",
  "_shrinkwrap": null,
  "_spec": "stylelint-config-standard@^18.2.0",
  "_where": "C:\\Users\\Alexandre\\VoiceWatcher",
  "author": {
    "name": "stylelint"
  },
  "bugs": {
    "url": "https://github.com/stylelint/stylelint-config-standard/issues"
  },
  "dependencies": {
    "stylelint-config-recommended": "^2.2.0"
  },
  "description": "Standard shareable config for stylelint",
  "devDependencies": {
    "eslint": "^5.0.0",
    "eslint-config-stylelint": "^11.0.0",
    "jest": "^23.4.1",
    "jest-preset-stylelint": "^1.3.0",
    "npm-run-all": "^4.1.5",
    "npmpub": "^4.1.0",
    "remark-cli": "^6.0.0",
    "remark-preset-lint-consistent": "^2.0.0",
    "remark-preset-lint-recommended": "^3.0.0",
    "stylelint": "^10.0.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-Tdc/TFeddjjy64LvjPau9SsfVRexmTFqUhnMBrzz07J4p2dVQtmpncRF/o8yZn8ugA3Ut43E6o1GtjX80TFytw==",
    "shasum": "a2a1b788d2cf876c013feaff8ae276117a1befa7",
    "tarball": "https://registry.npmjs.org/stylelint-config-standard/-/stylelint-config-standard-18.3.0.tgz",
    "fileCount": 5,
    "unpackedSize": 25544,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcseOYCRA9TVsSAnZWagAAN6UP/3gcEdP5TmJ3iB1HdPWq\no9+m79Y9FSvtIi3agSMZEklK72HjWEOOyclkIX2ZXTIvGxYZXrQ3Mqjs5zUc\noMbd0uYIj3tQz8FqRme7kRf4mzKa5/p2ygwN8EUhlQlQXlktk0/4ozBsklcA\nWvDduU/2j0BSNLPn5QnsmZ78eduZ6Mjrj1yD3k5qfAr5AbQdQVkik6YnZYnE\n7iefoWNW5cHFZ8BKFUPRWsJaeA8KZlw5hYOW8H70HzAGwatfVO54E0ly/YQS\nh86XBcQqsWXxkF67HlQiWOhXw2/DAczb7i/VIMWhSXL6BK9M1+PZYv1uNAce\ngyWBgAVyobMoKFYCMQzWBC/YcEevM7tAe2mKKERMevLbAWHXmaMXlz/3PRuV\nR3uDh1UsOFfx3GbsjKZFHSyFvSn6UD1n2AbsaaWNq5T7avVjWRA21xGQ3itd\nFmcFQ6tRrNdnY8DtBqnNc/HuO2S6mXtL+T2TZtumxCNDRt/S1BVAVoA4AUHe\nrBAcJmRpbcNOMvLfwxkYpgUtFQ0iI+CU5WlMq6rYqwCb62i5Q36K3j3b7oET\nMlg57uE/fdF0ZzvPZTXaIsfc+K5/6v85CidYxSiKfxCewGg+4lfYwM0H5rh9\nOIktQ5lyZzgwFGriQQcbNW9HnRPh4oZuhgcYyuxr9LtOOSTKoGRHzhVyKUkf\nWF3r\r\n=W04W\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "eslintConfig": {
    "extends": [
      "stylelint"
    ]
  },
  "files": [
    "index.js"
  ],
  "gitHead": "bfb517b052445c33d966dc392463fcae31859891",
  "homepage": "https://github.com/stylelint/stylelint-config-standard#readme",
  "jest": {
    "preset": "jest-preset-stylelint"
  },
  "keywords": [
    "stylelint",
    "stylelint-config",
    "standard"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "hudochenkov",
      "email": "aleks@hudochenkov.com"
    },
    {
      "name": "jeddy3",
      "email": "npm@richardhallows.com"
    },
    {
      "name": "ntwb",
      "email": "stephen@netweb.com.au"
    }
  ],
  "name": "stylelint-config-standard",
  "optionalDependencies": {},
  "peerDependencies": {
    "stylelint": "^8.3.0 || ^9.0.0 || ^10.0.0"
  },
  "readme": "# stylelint-config-standard\n\n[![NPM version](http://img.shields.io/npm/v/stylelint-config-standard.svg)](https://www.npmjs.org/package/stylelint-config-standard) [![Build Status](https://travis-ci.org/stylelint/stylelint-config-standard.svg?branch=master)](https://travis-ci.org/stylelint/stylelint-config-standard) [![Build status](https://ci.appveyor.com/api/projects/status/96po99qof05hv285/branch/master?svg=true)](https://ci.appveyor.com/project/stylelint/stylelint-config-standard/branch/master)\n\n> The standard shareable config for stylelint.\n\nExtends [`stylelint-config-recommended`](https://github.com/stylelint/stylelint-config-recommended).\n\nTurns on additional rules to enforce the common stylistic conventions found within a handful of CSS styleguides, including: [The Idiomatic CSS Principles](https://github.com/necolas/idiomatic-css),\n[Google's CSS Style Guide](https://google.github.io/styleguide/htmlcssguide.html#CSS_Formatting_Rules), [Airbnb's Styleguide](https://github.com/airbnb/css#css), and [@mdo's Code Guide](http://codeguide.co/#css).\n\nIt favours flexibility over strictness for things like multi-line lists and single-line rulesets, and tries to avoid potentially divisive rules.\n\nUse it as is or as a foundation for your own config.\n\nTo see the rules that this config uses, please read the [config itself](./index.js).\n\n## Example\n\n```css\n@import url(x.css);\n@import url(y.css);\n\n/**\n * Multi-line comment\n */\n\n.selector-1,\n.selector-2,\n.selector-3[type=\"text\"] {\n  background: linear-gradient(#fff, rgba(0, 0, 0, 0.8));\n  box-sizing: border-box;\n  display: block;\n  color: #333;\n}\n\n.selector-a,\n.selector-b:not(:first-child) {\n  padding: 10px !important;\n  top: calc(calc(1em * 2) / 3);\n}\n\n.selector-x { width: 10%; }\n.selector-y { width: 20%; }\n.selector-z { width: 30%; }\n\n/* Single-line comment */\n\n@media (min-width >= 60em) {\n  .selector {\n    /* Flush to parent comment */\n    transform: translate(1, 1) scale(3);\n  }\n}\n\n@media (orientation: portrait), projection and (color) {\n  .selector-i + .selector-ii {\n    background: color(rgb(0, 0, 0) lightness(50%));\n    font-family: helvetica, \"arial black\", sans-serif;\n  }\n}\n\n/* Flush single line comment */\n@media\n  screen and (min-resolution: 192dpi),\n  screen and (min-resolution: 2dppx) {\n  .selector {\n    background-image:\n      repeating-linear-gradient(\n        -45deg,\n        transparent,\n        #fff 25px,\n        rgba(255, 255, 255, 1) 50px\n      );\n    margin: 10px;\n    margin-bottom: 5px;\n    box-shadow:\n      0 1px 1px #000,\n      0 1px 0 #fff,\n      2px 2px 1px 1px #ccc inset;\n    height: 10rem;\n  }\n\n  /* Flush nested single line comment */\n  .selector::after {\n    content: 'â†’';\n    background-image: url(x.svg);\n  }\n}\n```\n\n*Note: the config is tested against this example, as such the example contains plenty of CSS syntax, formatting and features.*\n\n## Installation\n\n```bash\nnpm install stylelint-config-standard --save-dev\n```\n\n## Usage\n\nIf you've installed `stylelint-config-standard` locally within your project, just set your `stylelint` config to:\n\n```json\n{\n  \"extends\": \"stylelint-config-standard\"\n}\n```\n\nIf you've globally installed `stylelint-config-standard` using the `-g` flag, then you'll need to use the absolute path to `stylelint-config-standard` in your config e.g.\n\n```json\n{\n  \"extends\": \"/absolute/path/to/stylelint-config-standard\"\n}\n```\n\nSince [stylelint 9.7.0](https://github.com/stylelint/stylelint/blob/9.7.0/CHANGELOG.md#970), you can simply use the globally installed configuration name instead of the absolute path:\n\n```json\n{\n  \"extends\": \"stylelint-config-standard\"\n}\n```\n\n### Extending the config\n\nSimply add a `\"rules\"` key to your config, then add your overrides and additions there.\n\nFor example, to change the `at-rule-no-unknown` rule to use its `ignoreAtRules` option, change the `indentation` to tabs, turn off the `number-leading-zero` rule,and add the `unit-whitelist` rule:\n\n```json\n{\n  \"extends\": \"stylelint-config-standard\",\n  \"rules\": {\n    \"at-rule-no-unknown\": [ true, {\n      \"ignoreAtRules\": [\n        \"extends\",\n        \"ignores\"\n      ]\n    }],\n    \"indentation\": \"tab\",\n    \"number-leading-zero\": null,\n    \"unit-whitelist\": [\"em\", \"rem\", \"s\"]\n  }\n}\n```\n\n#### Suggested additions\n\n`stylelint-config-standard` is a great foundation for your own config. You can extend it to create a tailored and much stricter config:\n\n-   Specify what quotes must be used using:\n    -   [`font-family-name-quotes`](https://github.com/stylelint/stylelint/blob/master/lib/rules/font-family-name-quotes/README.md)\n    -   [`function-url-quotes`](https://github.com/stylelint/stylelint/blob/master/lib/rules/function-url-quotes/README.md)\n    -   [`selector-attribute-quotes`](https://github.com/stylelint/stylelint/blob/master/lib/rules/selector-attribute-quotes/README.md)\n    -   [`string-quotes`](https://github.com/stylelint/stylelint/blob/master/lib/rules/string-quotes/README.md)\n-   If you use [`autoprefixer`](https://github.com/postcss/autoprefixer) you'll want to disallow vendor prefixes using:\n    -   [`at-rule-no-vendor-prefix`](https://github.com/stylelint/stylelint/blob/master/lib/rules/at-rule-no-vendor-prefix/README.md)\n    -   [`media-feature-name-no-vendor-prefix`](https://github.com/stylelint/stylelint/blob/master/lib/rules/media-feature-name-no-vendor-prefix/README.md)\n    -   [`property-no-vendor-prefix`](https://github.com/stylelint/stylelint/blob/master/lib/rules/property-no-vendor-prefix/README.md)\n    -   [`selector-no-vendor-prefix`](https://github.com/stylelint/stylelint/blob/master/lib/rules/selector-no-vendor-prefix/README.md)\n    -   [`value-no-vendor-prefix`](https://github.com/stylelint/stylelint/blob/master/lib/rules/value-no-vendor-prefix/README.md)\n-   Control specificity using:\n    -   [`max-nesting-depth`](https://github.com/stylelint/stylelint/blob/master/lib/rules/max-nesting-depth/README.md)\n    -   [`selector-max-compound-selectors`](https://github.com/stylelint/stylelint/blob/master/lib/rules/selector-max-compound-selectors/README.md)\n    -   [`selector-max-specificity`](https://github.com/stylelint/stylelint/blob/master/lib/rules/selector-max-specificity/README.md)\n-   Specify acceptable selector types, units, properties, functions and words in comments using:\n    -   [`at-rule-blacklist`](https://github.com/stylelint/stylelint/blob/master/lib/rules/at-rule-blacklist/README.md)\n    -   [`at-rule-whitelist`](https://github.com/stylelint/stylelint/blob/master/lib/rules/at-rule-whitelist/README.md)\n    -   [`color-named`](https://github.com/stylelint/stylelint/blob/master/lib/rules/color-named/README.md)\n    -   [`color-no-hex`](https://github.com/stylelint/stylelint/blob/master/lib/rules/color-no-hex/README.md)\n    -   [`comment-word-blacklist`](https://github.com/stylelint/stylelint/blob/master/lib/rules/comment-word-blacklist/README.md)\n    -   [`declaration-no-important`](https://github.com/stylelint/stylelint/blob/master/lib/rules/declaration-no-important/README.md)\n    -   [`declaration-property-unit-blacklist`](https://github.com/stylelint/stylelint/blob/master/lib/rules/declaration-property-unit-blacklist/README.md)\n    -   [`declaration-property-unit-whitelist`](https://github.com/stylelint/stylelint/blob/master/lib/rules/declaration-property-unit-whitelist/README.md)\n    -   [`declaration-property-value-blacklist`](https://github.com/stylelint/stylelint/blob/master/lib/rules/declaration-property-value-blacklist/README.md)\n    -   [`declaration-property-value-whitelist`](https://github.com/stylelint/stylelint/blob/master/lib/rules/declaration-property-value-whitelist/README.md)\n    -   [`function-blacklist`](https://github.com/stylelint/stylelint/blob/master/lib/rules/function-blacklist/README.md)\n    -   [`function-url-scheme-blacklist`](https://github.com/stylelint/stylelint/blob/master/lib/rules/function-url-scheme-blacklist/README.md)\n    -   [`function-url-scheme-whitelist`](https://github.com/stylelint/stylelint/blob/master/lib/rules/function-url-scheme-whitelist/README.md)\n    -   [`function-whitelist`](https://github.com/stylelint/stylelint/blob/master/lib/rules/function-whitelist/README.md)\n    -   [`media-feature-name-blacklist`](https://github.com/stylelint/stylelint/blob/master/lib/rules/media-feature-name-blacklist/README.md)\n    -   [`media-feature-name-whitelist`](https://github.com/stylelint/stylelint/blob/master/lib/rules/media-feature-name-whitelist/README.md)\n    -   [`property-blacklist`](https://github.com/stylelint/stylelint/blob/master/lib/rules/property-blacklist/README.md)\n    -   [`property-whitelist`](https://github.com/stylelint/stylelint/blob/master/lib/rules/property-whitelist/README.md)\n    -   [`selector-attribute-operator-blacklist`](https://github.com/stylelint/stylelint/blob/master/lib/rules/selector-attribute-operator-blacklist/README.md)\n    -   [`selector-attribute-operator-whitelist`](https://github.com/stylelint/stylelint/blob/master/lib/rules/selector-attribute-operator-whitelist/README.md)\n    -   [`selector-combinator-blacklist`](https://github.com/stylelint/stylelint/blob/master/lib/rules/selector-combinator-blacklist/README.md)\n    -   [`selector-combinator-whitelist`](https://github.com/stylelint/stylelint/blob/master/lib/rules/selector-combinator-whitelist/README.md)\n    -   [`selector-max-class`](https://github.com/stylelint/stylelint/blob/master/lib/rules/selector-max-class/README.md)\n    -   [`selector-max-attribute`](https://github.com/stylelint/stylelint/blob/master/lib/rules/selector-max-attribute/README.md)\n    -   [`selector-max-combinators`](https://github.com/stylelint/stylelint/blob/master/lib/rules/selector-max-combinators/README.md)\n    -   [`selector-max-id`](https://github.com/stylelint/stylelint/blob/master/lib/rules/selector-max-id/README.md)\n    -   [`selector-max-pseudo-class`](https://github.com/stylelint/stylelint/blob/master/lib/rules/selector-max-pseudo-class/README.md)\n    -   [`selector-no-qualifying-type`](https://github.com/stylelint/stylelint/blob/master/lib/rules/selector-no-qualifying-type/README.md)\n    -   [`selector-max-type`](https://github.com/stylelint/stylelint/blob/master/lib/rules/selector-max-type/README.md)\n    -   [`selector-max-universal`](https://github.com/stylelint/stylelint/blob/master/lib/rules/selector-max-universal/README.md)\n    -   [`selector-pseudo-class-blacklist`](https://github.com/stylelint/stylelint/blob/master/lib/rules/selector-pseudo-class-blacklist/README.md)\n    -   [`selector-pseudo-class-whitelist`](https://github.com/stylelint/stylelint/blob/master/lib/rules/selector-pseudo-class-whitelist/README.md)\n    -   [`selector-pseudo-element-blacklist`](https://github.com/stylelint/stylelint/blob/master/lib/rules/selector-pseudo-element-blacklist/README.md)\n    -   [`selector-pseudo-element-whitelist`](https://github.com/stylelint/stylelint/blob/master/lib/rules/selector-pseudo-element-whitelist/README.md)\n    -   [`unit-blacklist`](https://github.com/stylelint/stylelint/blob/master/lib/rules/unit-blacklist/README.md)\n    -   [`unit-whitelist`](https://github.com/stylelint/stylelint/blob/master/lib/rules/unit-whitelist/README.md)\n-   Specify acceptable naming patterns using:\n    -   [`custom-media-pattern`](https://github.com/stylelint/stylelint/blob/master/lib/rules/custom-media-pattern/README.md)\n    -   [`custom-property-pattern`](https://github.com/stylelint/stylelint/blob/master/lib/rules/custom-property-pattern/README.md)\n    -   [`selector-class-pattern`](https://github.com/stylelint/stylelint/blob/master/lib/rules/selector-class-pattern/README.md)\n    -   [`selector-id-pattern`](https://github.com/stylelint/stylelint/blob/master/lib/rules/selector-id-pattern/README.md)\n    -   [`selector-nested-pattern`](https://github.com/stylelint/stylelint/blob/master/lib/rules/selector-nested-pattern/README.md)\n-   Specify a notation when there are one or more valid representations using:\n    -   [`font-weight-notation`](https://github.com/stylelint/stylelint/blob/master/lib/rules/font-weight-notation/README.md)\n-   Specify what types of URLs are allowed using:\n    -   [`function-url-no-scheme-relative`](https://github.com/stylelint/stylelint/blob/master/lib/rules/function-url-no-scheme-relative/README.md)\n-   Specify a maximum line length using:\n    -   [`max-line-length`](https://github.com/stylelint/stylelint/blob/master/lib/rules/max-line-length/README.md)\n\n### Using the config with SugarSS syntax\n\nThe config is broadly compatible with [SugarSS](https://github.com/postcss/sugarss) syntax. You *will* need to turn off the rules that check braces and semicolons, as so:\n\n```json\n{\n  \"extends\": \"stylelint-config-standard\",\n  \"rules\": {\n    \"block-closing-brace-empty-line-before\": null,\n    \"block-closing-brace-newline-after\": null,\n    \"block-closing-brace-newline-before\": null,\n    \"block-closing-brace-space-before\": null,\n    \"block-opening-brace-newline-after\": null,\n    \"block-opening-brace-space-after\": null,\n    \"block-opening-brace-space-before\": null,\n    \"declaration-block-semicolon-newline-after\": null,\n    \"declaration-block-semicolon-space-after\": null,\n    \"declaration-block-semicolon-space-before\": null,\n    \"declaration-block-trailing-semicolon\": null\n  }\n}\n```\n\n## [Changelog](CHANGELOG.md)\n\n## [License](LICENSE)\n",
  "readmeFilename": "README.md",
  "remarkConfig": {
    "plugins": [
      "preset-lint-recommended",
      "preset-lint-consistent"
    ]
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/stylelint/stylelint-config-standard.git"
  },
  "scripts": {
    "dry-release": "npmpub --dry --verbose",
    "lint": "npm-run-all --parallel lint:*",
    "lint:js": "eslint . --ignore-path .gitignore",
    "lint:md": "remark . --quiet --frail",
    "pretest": "npm run lint",
    "release": "npmpub",
    "test": "jest",
    "watch": "jest --watch"
  },
  "version": "18.3.0"
}
