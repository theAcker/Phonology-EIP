{
  "_args": [
    [
      {
        "raw": "postcss-jsx@^0.36.0",
        "scope": null,
        "escapedName": "postcss-jsx",
        "name": "postcss-jsx",
        "rawSpec": "^0.36.0",
        "spec": ">=0.36.0 <0.37.0",
        "type": "range"
      },
      "C:\\Users\\Alexandre\\VoiceWatcher\\node_modules\\stylelint"
    ]
  ],
  "_from": "postcss-jsx@^0.36.0",
  "_hasShrinkwrap": false,
  "_id": "postcss-jsx@0.36.0",
  "_location": "/postcss-jsx",
  "_nodeVersion": "10.14.2",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/postcss-jsx_0.36.0_1546405282832_0.24905439235111682"
  },
  "_npmUser": {
    "name": "gucong",
    "email": "gucong@gmail.com"
  },
  "_npmVersion": "6.5.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "postcss-jsx@^0.36.0",
    "scope": null,
    "escapedName": "postcss-jsx",
    "name": "postcss-jsx",
    "rawSpec": "^0.36.0",
    "spec": ">=0.36.0 <0.37.0",
    "type": "range"
  },
  "_requiredBy": [
    "/stylelint"
  ],
  "_resolved": "https://registry.npmjs.org/postcss-jsx/-/postcss-jsx-0.36.0.tgz",
  "_shasum": "b7685ed3d070a175ef0aa48f83d9015bd772c82d",
  "_shrinkwrap": null,
  "_spec": "postcss-jsx@^0.36.0",
  "_where": "C:\\Users\\Alexandre\\VoiceWatcher\\node_modules\\stylelint",
  "author": {
    "name": "gucong3000"
  },
  "bugs": {
    "url": "https://github.com/gucong3000/postcss-jsx/issues"
  },
  "dependencies": {
    "@babel/core": ">=7.1.0"
  },
  "description": "PostCSS syntax for parsing CSS in JS literals",
  "devDependencies": {
    "autoprefixer": "^9.4.3",
    "chai": "^4.2.0",
    "codecov": "^3.1.0",
    "json5": "^2.1.0",
    "mocha": "^5.2.0",
    "nyc": "^13.1.0",
    "postcss": "^7.0.7",
    "postcss-parser-tests": "^6.3.1",
    "postcss-safe-parser": "^4.0.1",
    "postcss-syntax": ">=0.36.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-/lWOSXSX5jlITCKFkuYU2WLFdrncZmjSVyNpHAunEgirZXLwI8RjU556e3Uz4mv0WVHnJA9d3JWb36lK9Yx99g==",
    "shasum": "b7685ed3d070a175ef0aa48f83d9015bd772c82d",
    "tarball": "https://registry.npmjs.org/postcss-jsx/-/postcss-jsx-0.36.0.tgz",
    "fileCount": 23,
    "unpackedSize": 33065,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcLEWjCRA9TVsSAnZWagAA2JIP/inx2yfJ2g7GeggWB4EJ\naXWV2s25WziKLx0mwZBAOZqB5r4F/+BFDfE1Jvddzj03+9p5Qz/8XpqSDykZ\npBMcXiKAFjkyBodNULueByZNBWc8rYOKzjqvqS5G+wBJKlZzJecOj9I9IDW1\n7WDGuXqOVhaINalo4EHfLSjWq4J/Kdw0hkUaMyP+71vlmbITSRpIX/BZLWyB\nK/rRj6Ooc/vcPifxnF+F4ONGe2SvANKow/QrpoL6Z/hbeB2QTYIpdkcD4JKE\naFfAPdJ9CI7ke/J0/xHDjobwDkQ5hOnQP/zz9BtVMPsOr1cX1s32pNXTbwad\nPtNoFaTxtNEM1Q5DAEve89ZxTxJxoJdu2H5ExOVFbQ02kr73bRkDVWfbf1uo\n2plcw0B5fYTjyCMzKhSperq41bml7ibF7acQ71NrJhgEmf/rLJo54oKczVDN\n+tJU0sZNNyRyNg37nnYLqu8yxWCV9a8ml4CTLRWHh9NPTvVB5lXcL4tZvMpi\n9bnQPEv0654BjLLBBxiY5IQoseX0MplT+X0Iupr3KaU0y0n582CqmA6PO8Wp\nD5ncjoNz5+4j/M3+M389W+CjQ5CR2bNE3k5yPM/7eu2iBl1Ar2kY9BrAFYcO\nhtXbBjEJcBm3a/Kzilpp9T5reVJjUe4OTtmqDO10rh6X7Yo5voXzok79/l0N\nIFYU\r\n=Ay2M\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "homepage": "https://github.com/gucong3000/postcss-jsx#readme",
  "keywords": [
    "postcss",
    "syntax",
    "emotion",
    "aphrodite",
    "glamor",
    "glamorous",
    "react-native",
    "react-style",
    "reactcss",
    "styled-components",
    "styletron-react",
    "typestyle",
    "css-in-js",
    "css"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "ai",
      "email": "andrey@sitnik.ru"
    },
    {
      "name": "gucong",
      "email": "gucong@gmail.com"
    }
  ],
  "name": "postcss-jsx",
  "nyc": {
    "reporter": [
      "lcov",
      "text"
    ],
    "all": true,
    "cache": true,
    "check-coverage": true
  },
  "optionalDependencies": {},
  "peerDependencies": {
    "postcss": ">=5.0.0",
    "postcss-syntax": ">=0.36.0"
  },
  "readme": "PostCSS JSX Syntax\n====\n\n[![NPM version](https://img.shields.io/npm/v/postcss-jsx.svg?style=flat-square)](https://www.npmjs.com/package/postcss-jsx)\n[![Travis](https://img.shields.io/travis/gucong3000/postcss-jsx.svg)](https://travis-ci.org/gucong3000/postcss-jsx)\n[![Travis](https://img.shields.io/travis/gucong3000/postcss-syntaxes.svg?label=integration)](https://travis-ci.org/gucong3000/postcss-syntaxes)\n[![Codecov](https://img.shields.io/codecov/c/github/gucong3000/postcss-jsx.svg)](https://codecov.io/gh/gucong3000/postcss-jsx)\n[![David](https://img.shields.io/david/gucong3000/postcss-jsx.svg)](https://david-dm.org/gucong3000/postcss-jsx)\n\n<img align=\"right\" width=\"95\" height=\"95\"\n\ttitle=\"Philosopherâ€™s stone, logo of PostCSS\"\n\tsrc=\"http://postcss.github.io/postcss/logo.svg\">\n\n[PostCSS](https://github.com/postcss/postcss) syntax for parsing [CSS in JS](https://github.com/MicheleBertoli/css-in-js) literals:\n\n- [aphrodite](https://github.com/Khan/aphrodite)\n- [astroturf](https://github.com/4Catalyzer/astroturf)\n- [csjs](https://github.com/rtsao/csjs)\n- [css-light](https://github.com/streamich/css-light)\n- [cssobj](https://github.com/cssobj/cssobj)\n- [electron-css](https://github.com/azukaar/electron-css)\n- [emotion](https://github.com/emotion-js/emotion)\n- [freestyler](https://github.com/streamich/freestyler)\n- [glamor](https://github.com/threepointone/glamor)\n- [glamorous](https://github.com/paypal/glamorous)\n- [j2c](https://github.com/j2css/j2c)\n- [linaria](https://github.com/callstack/linaria)\n- [lit-css](https://github.com/bashmish/lit-css)\n- [react-native](https://github.com/necolas/react-native-web)\n- [react-style](https://github.com/js-next/react-style)\n- [reactcss](https://github.com/casesandberg/reactcss)\n- [styled-components](https://github.com/styled-components/styled-components)\n- [styletron-react](https://github.com/rtsao/styletron)\n- [styling](https://github.com/andreypopp/styling)\n- [typestyle](https://github.com/typestyle/typestyle)\n\n## Getting Started\n\nFirst thing's first, install the module:\n\n```\nnpm install postcss-syntax postcss-jsx --save-dev\n```\n\n## Use Cases\n\n```js\nconst postcss = require('postcss');\nconst stylelint = require('stylelint');\nconst syntax = require('postcss-syntax');\npostcss([stylelint({ fix: true })]).process(source, { syntax: syntax }).then(function (result) {\n\t// An alias for the result.css property. Use it with syntaxes that generate non-CSS output.\n\tresult.content\n});\n```\n\ninput:\n```javascript\nimport glm from 'glamorous';\nconst Component1 = glm.a({\n\tflexDirectionn: 'row',\n\tdisplay: 'inline-block',\n\tcolor: '#fff',\n});\n```\n\noutput:\n```javascript\nimport glm from 'glamorous';\nconst Component1 = glm.a({\n\tcolor: '#fff',\n\tdisplay: 'inline-block',\n\tflexDirectionn: 'row',\n});\n```\n\n## Advanced Use Cases\n\nAdd support for more `css-in-js` package:\n```js\nconst syntax = require('postcss-syntax')({\n\t\"i-css\": (index, namespace) => namespace[index + 1] === \"addStyles\",\n\t\"styled-components\": true,\n});\n```\n\nSee: [postcss-syntax](https://github.com/gucong3000/postcss-syntax)\n\n## Style Transformations\n\nThe main use case of this plugin is to apply PostCSS transformations to CSS code in template literals & styles as object literals.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/gucong3000/postcss-jsx.git"
  },
  "scripts": {
    "debug": "npm run mocha -- --inspect-brk",
    "mocha": "mocha --no-timeouts",
    "test": "nyc npm run mocha"
  },
  "version": "0.36.0"
}
