{
  "_args": [
    [
      {
        "raw": "hast-to-hyperscript@^5.0.0",
        "scope": null,
        "escapedName": "hast-to-hyperscript",
        "name": "hast-to-hyperscript",
        "rawSpec": "^5.0.0",
        "spec": ">=5.0.0 <6.0.0",
        "type": "range"
      },
      "C:\\Users\\Alexandre\\VoiceWatcher\\node_modules\\hast-util-to-parse5"
    ]
  ],
  "_from": "hast-to-hyperscript@^5.0.0",
  "_hasShrinkwrap": false,
  "_id": "hast-to-hyperscript@5.0.0",
  "_location": "/hast-to-hyperscript",
  "_nodeVersion": "10.0.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/hast-to-hyperscript_5.0.0_1531847364024_0.12369968212982729"
  },
  "_npmUser": {
    "name": "wooorm",
    "email": "tituswormer@gmail.com"
  },
  "_npmVersion": "6.2.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "hast-to-hyperscript@^5.0.0",
    "scope": null,
    "escapedName": "hast-to-hyperscript",
    "name": "hast-to-hyperscript",
    "rawSpec": "^5.0.0",
    "spec": ">=5.0.0 <6.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/hast-util-to-parse5"
  ],
  "_resolved": "https://registry.npmjs.org/hast-to-hyperscript/-/hast-to-hyperscript-5.0.0.tgz",
  "_shasum": "5106cbba78edb7c95e2e8a49079371eb196c1ced",
  "_shrinkwrap": null,
  "_spec": "hast-to-hyperscript@^5.0.0",
  "_where": "C:\\Users\\Alexandre\\VoiceWatcher\\node_modules\\hast-util-to-parse5",
  "author": {
    "name": "Titus Wormer",
    "email": "tituswormer@gmail.com",
    "url": "http://wooorm.com"
  },
  "bugs": {
    "url": "https://github.com/syntax-tree/hast-to-hyperscript/issues"
  },
  "contributors": [
    {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "http://wooorm.com"
    },
    {
      "name": "Jannis Redmann",
      "email": "mail@jannisr.de"
    },
    {
      "name": "Koto Hajime",
      "email": "toxictoxer@gmail.com"
    }
  ],
  "dependencies": {
    "comma-separated-tokens": "^1.0.0",
    "property-information": "^4.0.0",
    "space-separated-tokens": "^1.0.0",
    "style-to-object": "^0.2.1",
    "unist-util-is": "^2.0.0",
    "web-namespaces": "^1.1.2"
  },
  "description": "Transform HAST to something else through a hyperscript DSL",
  "devDependencies": {
    "browserify": "^16.0.0",
    "hyperscript": "^2.0.2",
    "nyc": "^12.0.0",
    "prettier": "^1.13.5",
    "react": "^16.1.1",
    "react-dom": "^16.1.1",
    "rehype": "^5.0.0",
    "remark-cli": "^5.0.0",
    "remark-preset-wooorm": "^4.0.0",
    "tape": "^4.0.0",
    "tinyify": "^2.4.3",
    "unist-builder": "^1.0.1",
    "vdom-to-html": "^2.3.1",
    "virtual-dom": "^2.1.1",
    "xo": "^0.21.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-DLl3eYTz8uwwzEubDUdCChsR5t5b2ne+yvHrA2h58Suq/JnN3+Gsb9Tc4iZoCCsykmFUc6UUpwxTmQXs0akSeg==",
    "shasum": "5106cbba78edb7c95e2e8a49079371eb196c1ced",
    "tarball": "https://registry.npmjs.org/hast-to-hyperscript/-/hast-to-hyperscript-5.0.0.tgz",
    "fileCount": 4,
    "unpackedSize": 13163,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbTiLECRA9TVsSAnZWagAAqhIP/iEfOqV+D2/vqCx2N9u7\nIRYyjmtr8wiw1u2Y78AqiRMuVapRtrG4oB2WiYKBETEIW0DCMCS9RzCAkiHX\nIV3vA3nG8aKQsK+VQSX2SawO1xjfA4wwYs/6+gV8+DqAHfQKf2YcldGNANb8\n8k+nC9E9Y+81qf1QQpL2RhCb8X19H0eMIF7rL+u/cN6OMYvZwgnH0fMHAOsU\n3aNBpjDEjA0wLEplRffAtCtJl2yW/xQ6F9MYtPdH03wTI6X5UN5lvzKkQT1I\nW7UPyPVyAJEKrjOAsHfsKkl9hTrFwTaDZOk4XbLfW6rTbe0ECZC4a+dTF+iT\nFn3BKrvddX/g9iwOEG2xkjbMRAYHGdBmE3C+gS95OSVed3libov5oLhNBPk+\nQX/BpoctvYLubKnTxh6jT7zOSZiisOzFqHzOaELzr8oOGSxdMRH8lbUz6W18\n8u5AjoNT9DZ6i5nhfqPD4maxUdvrMc9D/lNe+MUXM2zgcoth2IF2XZlQmh4C\nF2ikiwdUPf2DPoBW+S/z4ZzldMzqVte5hgqWz/D4c198a9HXGDa8+Yr0mgza\nSI6wh9frmDm3XUo/AQAOeZu/4g8woxrDWJz7Fsys2oqCPc+LWIf/9PiSKfWH\neiUDN72njrghV1maD4sHnvkWvpSTExx0tiPRtqdTAalAOSTidRJYmf7LqoSt\nkVoF\r\n=JuZg\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "ff53b7134e74dbabfa78471ee2fa2045ecec5f43",
  "homepage": "https://github.com/syntax-tree/hast-to-hyperscript#readme",
  "keywords": [
    "hast",
    "rehype",
    "vdom",
    "virtual",
    "dom",
    "hyperscript",
    "dsl",
    "html"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "wooorm",
      "email": "tituswormer@gmail.com"
    }
  ],
  "name": "hast-to-hyperscript",
  "nyc": {
    "check-coverage": true,
    "lines": 100,
    "functions": 100,
    "branches": 100
  },
  "optionalDependencies": {},
  "prettier": {
    "tabWidth": 2,
    "useTabs": false,
    "singleQuote": true,
    "bracketSpacing": false,
    "semi": false,
    "trailingComma": "none"
  },
  "readme": "# hast-to-hyperscript [![Build Status][travis-badge]][travis] [![Coverage Status][codecov-badge]][codecov]\n\nTransform [HAST][] to something else through a [hyperscript][] DSL.\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install hast-to-hyperscript\n```\n\n## Usage\n\n```javascript\nvar toH = require('hast-to-hyperscript')\nvar h = require('hyperscript')\n\nvar tree = {\n  type: 'element',\n  tagName: 'p',\n  properties: {id: 'alpha', className: ['bravo']},\n  children: [\n    {type: 'text', value: 'charlie '},\n    {\n      type: 'element',\n      tagName: 'strong',\n      properties: {style: 'color: red;'},\n      children: [{type: 'text', value: 'delta'}]\n    },\n    {type: 'text', value: ' echo.'}\n  ]\n}\n\n// Transform (`hyperscript` needs `outerHTML` to stringify):\nvar doc = toH(h, tree).outerHTML\n\nconsole.log(doc)\n```\n\nYields:\n\n```html\n<p class=\"bravo\" id=\"alpha\">charlie <strong>delta</strong> echo.</p>\n```\n\n## API\n\n### `toH(h, node[, options|prefix])`\n\nTransform [HAST][] to something else through a [hyperscript][] DSL.\n\n###### Parameters\n\n*   `h` ([`Function`][h])\n*   `node` ([`Element`][element])\n*   `prefix` — Treated as `{prefix: prefix}`\n*   `options.prefix` (`string` or `boolean`, optional)\n    — Prefix to use as a prefix for keys passed in `attrs` to `h()`,\n    this behaviour is turned off by passing `false`, turned on by passing\n    a `string`.  By default, `h-` is used as a prefix if the given `h`\n    is detected as being `virtual-dom/h` or `React.createElement`\n*   `options.space` (enum, `'svg'` or `'html'`, default: `'html'`)\n    — Whether `node` is in the `'html'` or `'svg'` space.\n    If an `svg` element is found when inside the HTML space, `toH` automatically\n    switches to the SVG space when entering the element, and switches back when\n    leaving\n\n###### Returns\n\n`*` — Anything returned by invoking `h()`.\n\n### `function h(name, attrs, children)`\n\nTransform [HAST][] to something else through a hyperscript DSL.\n\n###### Parameters\n\n*   `name` (`string`) — Tag-name of element to create\n*   `attrs` (`Object.<string>`) — Attributes to set\n*   `children` (`Array.<* | string>`) — List of children and text,\n    where children are the result of invoking `h()` previously\n\n###### Returns\n\n`*` — Anything.\n\n###### Caveats\n\n**Nodes**: Most hyperscript implementations only support elements and text (as\nleave nodes).  HAST supports `doctype`, `comment`, and `root` as well.\n\n*   If anything other than an `element` or `root` node is given,\n    `hast-to-hyperscript` throws\n*   If a `root` is given with one element child, that element is\n    transformed\n*   If a `root` with no children, a non-element only child, or more than one\n    children, the children are wrapped in a `div` element\n\nIf unknown nodes are found deeper in the tree, they are ignored: only `text`\nand `element` nodes are transformed.\n\n**Support**: Although there are lots of libs mentioning support for this\ninterface, there are significant differences between them.  For example,\nhyperscript doesn’t support classes in `attrs`, `virtual-dom/h` needs an\n`attributes` object inside `attrs` most of the time.  `hast-to-hyperscript`\nworks around these differences for:\n\n*   [`React.createElement`][react]\n*   [`virtual-dom/h`][vdom]\n*   [`hyperscript`][hyperscript]\n\n## Related\n\n*   [`hastscript`][hastscript]\n\n## Contribute\n\nSee [`contributing.md` in `syntax-tree/hast`][contributing] for ways to get\nstarted.\n\nThis organisation has a [Code of Conduct][coc].  By interacting with this\nrepository, organisation, or community you agree to abide by its terms.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[travis-badge]: https://img.shields.io/travis/syntax-tree/hast-to-hyperscript.svg\n\n[travis]: https://travis-ci.org/syntax-tree/hast-to-hyperscript\n\n[codecov-badge]: https://img.shields.io/codecov/c/github/syntax-tree/hast-to-hyperscript.svg\n\n[codecov]: https://codecov.io/github/syntax-tree/hast-to-hyperscript\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n\n[hast]: https://github.com/syntax-tree/hast\n\n[element]: https://github.com/syntax-tree/hast#element\n\n[vdom]: https://github.com/Matt-Esch/virtual-dom/tree/master/virtual-hyperscript\n\n[hyperscript]: https://github.com/dominictarr/hyperscript\n\n[h]: #function-hname-attrs-children\n\n[react]: https://facebook.github.io/react/docs/glossary.html#react-elements\n\n[hastscript]: https://github.com/syntax-tree/hastscript\n\n[contributing]: https://github.com/syntax-tree/hast/blob/master/contributing.md\n\n[coc]: https://github.com/syntax-tree/hast/blob/master/code-of-conduct.md\n",
  "readmeFilename": "readme.md",
  "remarkConfig": {
    "plugins": [
      "preset-wooorm"
    ]
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/syntax-tree/hast-to-hyperscript.git"
  },
  "scripts": {
    "build": "npm run build-bundle && npm run build-mangle",
    "build-bundle": "browserify index.js -s hastToHyperscript > hast-to-hyperscript.js",
    "build-mangle": "browserify index.js -p tinyify -s hastToHyperscript > hast-to-hyperscript.min.js",
    "format": "remark . -qfo && prettier --write '**/*.js' && xo --fix",
    "test": "npm run format && npm run build && npm run test-coverage",
    "test-api": "node test",
    "test-coverage": "nyc --reporter lcov tape test.js"
  },
  "version": "5.0.0",
  "xo": {
    "prettier": true,
    "esnext": false,
    "rules": {
      "unicorn/prefer-type-error": "off",
      "guard-for-in": "off",
      "no-self-compare": "off"
    }
  }
}
