{
  "_args": [
    [
      {
        "raw": "rc-tree-select@~2.6.0",
        "scope": null,
        "escapedName": "rc-tree-select",
        "name": "rc-tree-select",
        "rawSpec": "~2.6.0",
        "spec": ">=2.6.0 <2.7.0",
        "type": "range"
      },
      "C:\\Users\\Alexandre\\VoiceWatcher\\node_modules\\antd"
    ]
  ],
  "_from": "rc-tree-select@~2.6.0",
  "_hasShrinkwrap": false,
  "_id": "rc-tree-select@2.6.3",
  "_location": "/rc-tree-select",
  "_nodeVersion": "10.15.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/rc-tree-select_2.6.3_1555383640970_0.9558196178641369"
  },
  "_npmUser": {
    "name": "zombiej",
    "email": "smith3816@gmail.com"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {
    "babel-runtime": "6.26.0",
    "classnames": "2.2.6",
    "component-classes": "1.2.6",
    "fbjs": "0.8.17",
    "prop-types": "15.7.2",
    "raf": "3.4.1",
    "rc-align": "2.4.5",
    "rc-util": "4.6.0",
    "react-lifecycles-compat": "3.0.4"
  },
  "_requested": {
    "raw": "rc-tree-select@~2.6.0",
    "scope": null,
    "escapedName": "rc-tree-select",
    "name": "rc-tree-select",
    "rawSpec": "~2.6.0",
    "spec": ">=2.6.0 <2.7.0",
    "type": "range"
  },
  "_requiredBy": [
    "/antd"
  ],
  "_resolved": "https://registry.npmjs.org/rc-tree-select/-/rc-tree-select-2.6.3.tgz",
  "_shasum": "376c368f0bd60d266f2740b99ab80f1a00bd44ad",
  "_shrinkwrap": null,
  "_spec": "rc-tree-select@~2.6.0",
  "_where": "C:\\Users\\Alexandre\\VoiceWatcher\\node_modules\\antd",
  "author": {
    "name": "hualei5280@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/react-component/tree-select/issues"
  },
  "config": {
    "port": 8007,
    "entry": {
      "rc-tree-select": [
        "./assets/index.less",
        "./src/index.js"
      ]
    }
  },
  "dependencies": {
    "classnames": "^2.2.1",
    "dom-scroll-into-view": "^1.2.1",
    "prop-types": "^15.5.8",
    "raf": "^3.4.0",
    "rc-animate": "^3.0.0-rc.4",
    "rc-tree": "~1.15.0",
    "rc-trigger": "^3.0.0-rc.2",
    "rc-util": "^4.5.0",
    "react-lifecycles-compat": "^3.0.4",
    "shallowequal": "^1.0.2",
    "warning": "^4.0.1"
  },
  "description": "tree-select ui component for react",
  "devDependencies": {
    "lint-staged": "^8.1.1",
    "pre-commit": "1.x",
    "rc-dialog": "^7.0.0",
    "rc-form": "^2.4.2",
    "rc-select": "^8.8.3",
    "rc-tools": "^9.3.5",
    "react": "^16.0.0",
    "react-dom": "^16.0.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-FdOsEPe+1JkxE5+hBYV3qiImpRzZQvSlr0cCWMvCDtveukurhotJ6Dj7whDQhr71EJQrT9/OxEPaINm8reHYJw==",
    "shasum": "376c368f0bd60d266f2740b99ab80f1a00bd44ad",
    "tarball": "https://registry.npmjs.org/rc-tree-select/-/rc-tree-select-2.6.3.tgz",
    "fileCount": 47,
    "unpackedSize": 1742909,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJctUVZCRA9TVsSAnZWagAA1msP/1BzDaHcMhYSjW3EYOCz\nNN9rxkOqVSF9wWsZS4/7fzUUUtG2xNJAZdWdTMp1iC4LIMs/bSMMwiv5lqfe\nCBTv+Fdase8M4Mnp+2q5GX6tOwTF/tzZSf/L4BNJxW7RWzmnv6ru2XycmFPH\nh9oTmP0zl193MSiJLoE02IN2k/M/q/l+LxOhkB+hXB6RoYSj2iyP9jO8Ltc+\n+TNS0Jz3W8Yrnox8DT5pgOHaW3S1d3EEGCgdomFbooXXrmiRLySEwlA34vzT\nXFDNu9VUzjjqx/4SHc8JYp81NQTi3B7HbiO3lNgRgnI3oQeV2BEeCkUuwQyA\nGjjhjXiHMeXnBBmiYt4DnmgRDmmQGKAHdFD7deNiXQsD7r0i4WBP46u69XLu\ng8CnmJKXC6XelSvkv8LtPxTlAdqo7auApBqRVgnIZZtEUKeqjKAszwYfJTqT\nFbApIpa4BoaCg7DYYFI4OoZhthsdmmXJ3y/K7aHiCjbrJvggRPbE16JNFZf9\nianXQwXnhc0cbqTmS19sBSfGdpuq3dsLrIMSeWqqPtkuPa5CLyOWjVSE/t7l\nVxpSH8W1c0LqH+usDaBTLEt3/Zcv22VFLOEXlzI9xqpQYBFkp4S0q9xYU7ig\nAL7o+dwyGPto27D+g7pcbu+8X8sQwZlx+/8Q8sxZ/StSyVzomejPl0Cq69ku\nL+ok\r\n=JcYg\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [
    "es",
    "lib",
    "dist",
    "assets/*.css",
    "assets/*.png",
    "assets/*.gif"
  ],
  "gitHead": "1dfcce69f79997f4015e8de083adf28163a79c74",
  "homepage": "https://github.com/react-component/tree-select",
  "keywords": [
    "react",
    "react-component",
    "react-tree-select",
    "tree-select"
  ],
  "license": "MIT",
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "npm run pre-commit",
      "git add"
    ]
  },
  "main": "./lib/index",
  "maintainers": [
    {
      "name": "afc163",
      "email": "afc163@gmail.com"
    },
    {
      "name": "valleykid",
      "email": "valleykiddy@gmail.com"
    },
    {
      "name": "warmhug",
      "email": "hualei5280@gmail.com"
    },
    {
      "name": "yesmeck",
      "email": "yesmeck@gmail.com"
    },
    {
      "name": "yiminghe",
      "email": "yiminghe@gmail.com"
    },
    {
      "name": "zombiej",
      "email": "smith3816@gmail.com"
    }
  ],
  "module": "./es/index",
  "name": "rc-tree-select",
  "optionalDependencies": {},
  "pre-commit": [
    "lint-staged"
  ],
  "readme": "# rc-tree-select\n---\n\nReact TreeSelect Component\n\n[![NPM version][npm-image]][npm-url]\n[![build status][travis-image]][travis-url]\n[![Test coverage][codecov-image]][codecov-url]\n[![gemnasium deps][gemnasium-image]][gemnasium-url]\n[![npm download][download-image]][download-url]\n\n[npm-image]: http://img.shields.io/npm/v/rc-tree-select.svg?style=flat-square\n[npm-url]: http://npmjs.org/package/rc-tree-select\n[travis-image]: https://img.shields.io/travis/react-component/tree-select.svg?style=flat-square\n[travis-url]: https://travis-ci.org/react-component/tree-select\n[codecov-image]: https://img.shields.io/codecov/c/github/react-component/tree-select/master.svg?style=flat-square\n[codecov-url]: https://codecov.io/gh/react-component/tree-select/branch/master\n[gemnasium-image]: http://img.shields.io/gemnasium/react-component/tree-select.svg?style=flat-square\n[gemnasium-url]: https://gemnasium.com/react-component/tree-select\n[node-image]: https://img.shields.io/badge/node.js-%3E=_0.10-green.svg?style=flat-square\n[node-url]: http://nodejs.org/download/\n[download-image]: https://img.shields.io/npm/dm/rc-tree-select.svg?style=flat-square\n[download-url]: https://npmjs.org/package/rc-tree-select\n\n\n## Screenshots\n\n<img src=\"https://os.alipayobjects.com/rmsportal/HUhyhmpWyiGKnZF.png\" width=\"288\"/>\n\n\n## Development\n\n```\nnpm install\nnpm start\n```\n\n## Example\n\nhttp://localhost:8000/examples/\n\nonline example: http://react-component.github.io/tree-select/\n\n## install\n\n[![rc-tree-select](https://nodei.co/npm/rc-tree-select.png)](https://npmjs.org/package/rc-tree-select)\n\n## API\n\n### TreeSelect props\n\n| name     | description    | type     | default      |\n|----------|----------------|----------|--------------|\n|className | additional css class of root dom node | String | '' |\n|prefixCls | prefix class | String | '' |\n|animation | dropdown animation name. only support slide-up now | String | '' |\n|transitionName | dropdown css animation name | String | '' |\n|choiceTransitionName | css animation name for selected items at multiple mode | String | '' |\n|dropdownMatchSelectWidth | whether dropdown's with is same with select. Default set `min-width` same as input | bool | - |\n|dropdownClassName | additional className applied to dropdown | String | - |\n|dropdownStyle | additional style applied to dropdown | Object | {} |\n|dropdownPopupAlign | specify alignment for dropdown (alignConfig of [dom-align](https://github.com/yiminghe/dom-align)) | Object | - |\n|onDropdownVisibleChange | control dropdown visible | function | `() => { return true; }` |\n|notFoundContent | specify content to show when no result matches. | String | 'Not Found' |\n|showSearch | whether show search input in single mode | bool | true |\n|allowClear | whether allowClear | bool | false |\n|maxTagTextLength | max tag text length to show | number | - |\n|maxTagCount | max tag count to show | number | - |\n|maxTagPlaceholder | placeholder for omitted values | ReactNode/function(omittedValues) | - |\n|multiple | whether multiple select (true when enable treeCheckable) | bool | false |\n|disabled | whether disabled select | bool | false |\n|searchValue | work with `onSearch` to make search value controlled. | string | '' |\n|defaultValue | initial selected treeNode(s) | same as value type | - |\n|value | current selected treeNode(s). | normal: String/Array<String>. labelInValue: {value:String,label:React.Node}/Array<{value,label}>. treeCheckStrictly(halfChecked default false): {value:String,label:React.Node, halfChecked}/Array<{value,label,halfChecked}>. | - |\n|labelInValue| whether to embed label in value, see above value type | Bool | false |\n|onChange | called when select treeNode or input value change | function(value, label(null), extra) | - |\n|onSelect | called when select treeNode | function(value, node, extra) | - |\n|onSearch | called when input changed | function | - |\n|onTreeExpand | called when tree node expand | function(expandedKeys) | - |\n|showCheckedStrategy | `TreeSelect.SHOW_ALL`: show all checked treeNodes (Include parent treeNode). `TreeSelect.SHOW_PARENT`: show checked treeNodes (Just show parent treeNode). Default just show child. | enum{TreeSelect.SHOW_ALL, TreeSelect.SHOW_PARENT, TreeSelect.SHOW_CHILD } | TreeSelect.SHOW_CHILD |\n|treeIcon | show tree icon | bool | false |\n|treeLine | show tree line | bool | false |\n|treeDefaultExpandAll | default expand all treeNode | bool | false |\n|treeDefaultExpandedKeys | default expanded treeNode keys | Array<String> | - |\n|treeExpandedKeys | set tree expanded keys | Array<String> | - |\n|treeCheckable | whether tree show checkbox (select callback will not fire) | bool | false |\n|treeCheckStrictly | check node precisely, parent and children nodes are not associated| bool | false |\n|filterTreeNode | whether filter treeNodes by input value. default filter by treeNode's treeNodeFilterProp prop's value | bool/Function(inputValue:string, treeNode:TreeNode) | Function |\n|treeNodeFilterProp | which prop value of treeNode will be used for filter if filterTreeNode return true | String | 'value' |\n|treeNodeLabelProp | which prop value of treeNode will render as content of select | String | 'title' |\n|treeData | treeNodes data Array, if set it then you need not to construct children TreeNode. (value should be unique across the whole array) | array<{value,label,children, [disabled,selectable]}> | [] |\n|treeDataSimpleMode | enable simple mode of treeData.(treeData should be like this: [{id:1, pId:0, value:'1', label:\"test1\",...},...], `pId` is parent node's id) | bool/object{id:'id', pId:'pId', rootPId:null} | false |\n|loadData | load data asynchronously | function(node) | - |\n|getPopupContainer | container which popup select menu rendered into | function(trigger:Node):Node | function(){return document.body;} |\n|autoClearSearchValue | auto clear search input value when multiple select is selected/deselected | boolean | true |\n| inputIcon | specify the select arrow icon | ReactNode \\| (props: TreeProps) => ReactNode | - |\n| clearIcon | specify the clear icon | ReactNode \\| (props: TreeProps) => ReactNode | - |\n| removeIcon | specify the remove icon | ReactNode \\| (props: TreeProps) => ReactNode | - |\n|switcherIcon| specify the switcher icon | ReactNode \\| (props: TreeProps) => ReactNode | - |\n\n\n### TreeNode props\n> note: you'd better to use `treeData` instead of using TreeNode.\n\n| name     | description    | type     | default      |\n|----------|----------------|----------|--------------|\n|disabled | disable treeNode | bool | false |\n|key | it's value must be unique across the tree's all TreeNode, you must set it  | String | - |\n|value | default as treeNodeFilterProp (be unique across the tree's all TreeNode) | String | '' |\n|title | tree/subTree's title | String/element | '---' |\n|isLeaf | whether it's leaf node | bool | false |\n\n\n## note\n1. Optimization tips(when there are large amounts of data, like more than 5000 nodes)\n    - Do not Expand all nodes.\n    - Recommend not exist many `TreeSelect` components in a page at the same time.\n    - Recommend not use `treeCheckable` mode, or use `treeCheckStrictly`.\n2. In `treeCheckable` mode, It has the same effect when click `x`(node in Selection box) or uncheck in the treeNode(in dropdown panel), but the essence is not the same. So, even if both of them trigger `onChange` method, but the parameters (the third parameter) are different. （中文：在`treeCheckable`模式下，已选择节点上的`x`删除操作、和相应 treeNode 节点上 checkbox 的 uncheck 操作，最终效果相同，但本质不一样。前者跟弹出的 tree 组件可以“毫无关系”（例如 dropdown 没展开过，tree 也就没渲染好），而后者是 tree 组件上的节点 uncheck 事件。所以、即便两者都会触发`onChange`方法、但它们的参数（第三个参数）是不同的。）\n\n## Test Case\n\nhttp://localhost:8000/tests/runner.html?coverage\n\n## Coverage\n\nhttp://localhost:8000/node_modules/rc-server/node_modules/node-jscover/lib/front-end/jscoverage.html?w=http://localhost:8000/tests/runner.html?coverage\n\n## License\n\nrc-tree-select is released under the MIT license.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/react-component/tree-select.git"
  },
  "scripts": {
    "build": "rc-tools run build",
    "compile": "rc-tools run compile --babel-runtime",
    "coverage": "rc-tools run test --coverage",
    "gh-pages": "rc-tools run gh-pages",
    "lint": "rc-tools run lint",
    "lint-staged": "lint-staged",
    "pre-commit": "rc-tools run pre-commit",
    "pub": "rc-tools run pub",
    "start": "rc-tools run server",
    "test": "rc-tools run test"
  },
  "version": "2.6.3"
}
