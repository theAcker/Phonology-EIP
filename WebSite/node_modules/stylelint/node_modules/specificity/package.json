{
  "_args": [
    [
      {
        "raw": "specificity@^0.4.1",
        "scope": null,
        "escapedName": "specificity",
        "name": "specificity",
        "rawSpec": "^0.4.1",
        "spec": ">=0.4.1 <0.5.0",
        "type": "range"
      },
      "C:\\Users\\Alexandre\\VoiceWatcher\\node_modules\\stylelint"
    ]
  ],
  "_from": "specificity@>=0.4.1 <0.5.0",
  "_id": "specificity@0.4.1",
  "_inCache": true,
  "_location": "/stylelint/specificity",
  "_nodeVersion": "10.7.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/specificity_0.4.1_1535452597383_0.4662544774410671"
  },
  "_npmUser": {
    "name": "keeganstreet",
    "email": "keeganstreet@gmail.com"
  },
  "_npmVersion": "6.1.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "specificity@^0.4.1",
    "scope": null,
    "escapedName": "specificity",
    "name": "specificity",
    "rawSpec": "^0.4.1",
    "spec": ">=0.4.1 <0.5.0",
    "type": "range"
  },
  "_requiredBy": [
    "/stylelint"
  ],
  "_resolved": "https://registry.npmjs.org/specificity/-/specificity-0.4.1.tgz",
  "_shasum": "aab5e645012db08ba182e151165738d00887b019",
  "_shrinkwrap": null,
  "_spec": "specificity@^0.4.1",
  "_where": "C:\\Users\\Alexandre\\VoiceWatcher\\node_modules\\stylelint",
  "author": {
    "name": "Keegan Street",
    "url": "http://keegan.st"
  },
  "bin": {
    "specificity": "./bin/specificity"
  },
  "bugs": {
    "url": "https://github.com/keeganstreet/specificity/issues"
  },
  "dependencies": {},
  "description": "Calculate the specificity of a CSS selector",
  "devDependencies": {
    "esm": "^3.0.71",
    "mocha": "^5.2.0",
    "rollup": "^0.62.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-1klA3Gi5PD1Wv9Q0wUoOQN1IWAuPu0D1U03ThXTr0cJ20+/iq2tHSDnK7Kk/0LXJ1ztUB2/1Os0wKmfyNgUQfg==",
    "shasum": "aab5e645012db08ba182e151165738d00887b019",
    "tarball": "https://registry.npmjs.org/specificity/-/specificity-0.4.1.tgz",
    "fileCount": 10,
    "unpackedSize": 37511,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbhSW2CRA9TVsSAnZWagAAOC4P/2K8o4IJzniJgvIxIuM2\n0YjKS34q+YPsgFfBD9L7bhYPjoQTkAk0hN9iN8lVMi8hvCVXOKpKHDlAlNKK\nvgmR9hc2ov/q+3IddgG3rN5zYupRmqrybDiZ5pwbbO17QtgPlIADN6kH65Yh\nImgtOdSSZPYmojPsPMvgllrtT83AaMC5rmGMZ5jfoPXT/YfdZGebEoWIXblL\nTbOmDgdtGdky7dN0ZZxfWv54yFWqyYOSNmk+jrQOQDVfLokW2E/NUUmLbj+t\nSoxNRsprsPaBgWFzs2Yi4I1oU37fWnys+9n+IInByjx2IQBdiBebJa/ZQ9HZ\nYN3EHkc6TuyPrPPAVZEsNH7Fn4h8/OYb+CFk2VwE1dz8hwGVyfd6O2bbYAql\nLuPFAw1y8nGTmDfH7JRIVVEoSgax0dLjvvSnHnvDup/Kzwe+s2naa1WkC1Ry\nXuGiqAK5NDSdNZRhSCBDmktQMJhCE3UmZaSdr4KswBlGOweWHbayPbjYn+hA\n8BphMOMKcIv6tcZqd/Cl2Gs4wm75ZbSlcO1kFpVZZ3VgEJ4zW7pmeeo2xeAa\nL4dZhs44+GWQZrf5jir5pOTNTdkKYagS58cYz34hRnsJy4J7BFBxz7S8Q9f2\nsCZ2EUNZvOFUzBegY0qfEYB7X3Syo2y3DRxOcNXNLb3xa6BdG8aUmVSLHRsY\n27vu\r\n=mGp5\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "8757133ddd2ed0163f120900047ff0f92760b536",
  "homepage": "https://github.com/keeganstreet/specificity",
  "keywords": [
    "CSS",
    "specificity"
  ],
  "license": "MIT",
  "main": "dist/specificity",
  "maintainers": [
    {
      "name": "keeganstreet",
      "email": "keeganstreet@gmail.com"
    }
  ],
  "module": "dist/specificity.mjs",
  "name": "specificity",
  "optionalDependencies": {},
  "readme": "# Specificity Calculator\n\nA JavaScript module for calculating and comparing the [specificity of CSS selectors](https://www.w3.org/TR/selectors-3/#specificity). The module is used on the [Specificity Calculator](https://specificity.keegan.st/) website.\n\nSpecificity Calculator is built for CSS Selectors Level 3. Specificity Calculator isnâ€™t a CSS validator. If you enter invalid selectors it will return incorrect results. For example, the [negation pseudo-class](https://www.w3.org/TR/selectors-3/#negation) may only take a simple selector as an argument. Using a psuedo-element or combinator as an argument for `:not()` is invalid CSS so Specificity Calculator will return incorrect results.\n\n## Supported runtime environments\n\nThe module is provided in two formats: an ECMAScript (ES) module in `dist/specificity.mjs`, and a Universal Module Definition (UMD) in `dist/specificity.js`. This enables support for the following runtime environments:\n\n**Browser**\n\n  * Directly loaded ES module\n  * ES module in a precompiled script (using a bundler like Webpack or Rollup)\n  * Global variable\n\n**Node.js**\n\n  * ES module\n  * CommonJS module\n\n### Browser usage as a directly loaded ES module\n\n```html\n<script type=\"module\">\n  import { calculate } from './specificity/dist/specificity.mjs';\n\n  calculate('ul#nav li.active a');\n</script>\n```\n\n### Browser usage as an ES module in a precompiled script\n\nBundlers like [Webpack and Rollup](https://github.com/rollup/rollup/wiki/pkg.module) import from the `module` field in `package.json`, which is set to the ES module artefact, `dist/specificity.mjs`.\n\n```js\nimport { calculate } from 'specificity';\n\ncalculate('ul#nav li.active a');\n```\n\n### Browser usage as a global variable\n\nThe UMD artefact, `dist/specificity.js`, sets a global variable, `SPECIFICITY`.\n\n```html\n<script src=\"./specificity/dist/specificity.js\"></script>\n\n<script>\n  SPECIFICITY.calculate('ul#nav li.active a');\n</script>\n```\n\n### Node.js usage as an ES module\n\nThe `main` field in `package.json` has an extensionless value, `dist/specificity`. This allows Node.js to use either the ES module, in `dist/specificity.mjs`, or the CommonJS module, in `dist/specificity.js`.\n\nWhen Node.js is run with the `--experimental-modules` [flag](https://nodejs.org/api/esm.html) or an [ES module loader](https://www.npmjs.com/package/esm), it will use the ES module artefact.\n\n```js\nimport { calculate } from 'specificity';\n\ncalculate('ul#nav li.active a');\n```\n\n### Node.js usage as a CommonJS module\n\nOtherwise, Node.js will use the UMD artefact, which contains a CommonJS module definition.\n\n```js\nconst { calculate } = require('specificity');\n\ncalculate('ul#nav li.active a');\n```\n\n## Calculate function\n\nThe `calculate` function returns an array containing a result object for each selector input. Each result object has the following properties:\n\n  * `selector`: the input\n  * `specificity`: the result as a string e.g. `0,1,0,0`\n  * `specificityArray`: the result as an array of numbers e.g. `[0, 1, 0, 0]`\n  * `parts`: array with details about each part of the selector that counts towards the specificity\n\n## Example\n\n```js\ncalculate('ul#nav li.active a');\n\n/*\n[\n  {\n    selector: 'ul#nav li.active a',\n    specificity: '0,1,1,3',\n    specificityArray: [0, 1, 1, 3],\n    parts: [\n      { selector: 'ul', type: 'c', index: 0, length: 2 },\n      { selector: '#nav', type: 'a', index: 2, length: 4 },\n      { selector: 'li', type: 'c', index: 5, length: 2 },\n      { selector: '.active', type: 'b', index: 8, length: 7 },\n      { selector: 'a', type: 'c', index: 13, length: 1 }\n    ]\n  }\n]\n*/\n```\n\nYou can use comma separation to pass in multiple selectors:\n\n```js\ncalculate('ul#nav li.active a, body.ie7 .col_3 h2 ~ h2');\n\n/*\n[\n  {\n    selector: 'ul#nav li.active a',\n    specificity: '0,1,1,3',\n    ...\n  },\n  {\n    selector: 'body.ie7 .col_3 h2 ~ h2',\n    specificity: '0,0,2,3',\n    ...\n  }\n]\n*/\n```\n\n## Comparing two selectors\n\nSpecificity Calculator also exports a `compare` function. This function accepts two CSS selectors or specificity arrays, `a` and `b`.\n\n  * It returns `-1` if `a` has a lower specificity than `b`\n  * It returns `1` if `a` has a higher specificity than `b`\n  * It returns `0` if `a` has the same specificity than `b`\n\n```js\ncompare('div', '.active');            // -1\ncompare('#main', 'div');              // 1\ncompare('span', 'div');               // 0\ncompare('span', [0, 0, 0, 1]);        // 0\ncompare('#main > div', [0, 1, 0, 1]); // 0\n```\n\n## Ordering an array of selectors by specificity\n\nYou can pass the `compare` function to `Array.prototype.sort` to sort an array of CSS selectors by specificity.\n\n```js\nimport { compare } from 'specificity';\n\n['#main', 'p', '.active'].sort(compare); // ['p', '.active', '#main']\n```\n\n## Command-line usage\n\nRun `npm install specificity` to install the module locally, or `npm install -g specificity` for global installation. Run `specificity` without arguments to learn about its usage:\n\n```bash\n$ specificity\nUsage: specificity <selector>\nComputes specificity of a CSS selector.\n```\n\nPass a selector as the first argument to get its specificity computed:\n\n```bash\n$ specificity \"ul#nav li.active a\"\n0,1,1,3\n```\n\n## Testing\n\nTo install dependencies, run: `npm install`\n\nThen to test, run: `npm test`\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/keeganstreet/specificity.git"
  },
  "scripts": {
    "prepare": "rollup --config",
    "test": "mocha test/test.js --require esm"
  },
  "types": "specificity.d.ts",
  "version": "0.4.1"
}
