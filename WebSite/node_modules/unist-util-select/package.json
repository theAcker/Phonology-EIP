{
  "_args": [
    [
      {
        "raw": "unist-util-select@^1.5.0",
        "scope": null,
        "escapedName": "unist-util-select",
        "name": "unist-util-select",
        "rawSpec": "^1.5.0",
        "spec": ">=1.5.0 <2.0.0",
        "type": "range"
      },
      "C:\\Users\\Alexandre\\VoiceWatcher\\node_modules\\gatsby-remark-images"
    ]
  ],
  "_from": "unist-util-select@>=1.5.0 <2.0.0",
  "_id": "unist-util-select@1.5.0",
  "_inCache": true,
  "_location": "/unist-util-select",
  "_nodeVersion": "5.4.1",
  "_npmUser": {
    "name": "eush77",
    "email": "eush77@gmail.com"
  },
  "_npmVersion": "3.3.12",
  "_phantomChildren": {},
  "_requested": {
    "raw": "unist-util-select@^1.5.0",
    "scope": null,
    "escapedName": "unist-util-select",
    "name": "unist-util-select",
    "rawSpec": "^1.5.0",
    "spec": ">=1.5.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/gatsby-remark-images",
    "/gatsby-transformer-remark"
  ],
  "_resolved": "https://registry.npmjs.org/unist-util-select/-/unist-util-select-1.5.0.tgz",
  "_shasum": "a93c2be8c0f653827803b81331adec2aa24cd933",
  "_shrinkwrap": null,
  "_spec": "unist-util-select@^1.5.0",
  "_where": "C:\\Users\\Alexandre\\VoiceWatcher\\node_modules\\gatsby-remark-images",
  "author": {
    "name": "Eugene Sharygin",
    "email": "eush77@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/eush77/unist-util-select/issues"
  },
  "dependencies": {
    "css-selector-parser": "^1.1.0",
    "debug": "^2.2.0",
    "nth-check": "^1.0.1"
  },
  "description": "Select unist nodes using css-like selectors",
  "devDependencies": {
    "tape": "^4.2.0",
    "unist-builder": "^1.0.1"
  },
  "directories": {},
  "dist": {
    "shasum": "a93c2be8c0f653827803b81331adec2aa24cd933",
    "tarball": "https://registry.npmjs.org/unist-util-select/-/unist-util-select-1.5.0.tgz"
  },
  "files": [
    "index.js",
    "lib/"
  ],
  "gitHead": "d447d05867f93c30f5b4e2b6b6308063275ea34c",
  "homepage": "https://github.com/eush77/unist-util-select",
  "keywords": [
    "child",
    "descendant",
    "sibling",
    "type",
    "attribute",
    "expression",
    "filter",
    "find",
    "match",
    "ast",
    "mdast",
    "node",
    "retext",
    "select",
    "selector",
    "tree",
    "unist",
    "util",
    "utility",
    "visit",
    "walk"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "eush77",
      "email": "eush77@gmail.com"
    }
  ],
  "name": "unist-util-select",
  "optionalDependencies": {},
  "readme": "[![npm](https://nodei.co/npm/unist-util-select.png)](https://npmjs.com/package/unist-util-select)\n\n# unist-util-select\n\n[![Build Status][travis-badge]][travis] [![Dependency Status][david-badge]][david]\n\nSelect [Unist] nodes with CSS-like selectors.\n\n[unist]: https://github.com/wooorm/unist\n\n[travis]: https://travis-ci.org/eush77/unist-util-select\n[travis-badge]: https://travis-ci.org/eush77/unist-util-select.svg?branch=master\n[david]: https://david-dm.org/eush77/unist-util-select\n[david-badge]: https://david-dm.org/eush77/unist-util-select.png\n\n## Example\n\n`example.md`:\n\n```\nGet all TODO items from this list:\n\n1. Step 1.\n2. TODO Step 2.\n3. Step 3.\n  1. TODO Step 3.1.\n  2. Step 3.2.\n  3. TODO Step 3.3.\n```\n\n[remark] takes this Markdown as an input and returns unist syntax tree. After that, we use `unist-util-select` to extract the required parts:\n\n```js\nvar select = require('unist-util-select');\n\nvar markdown = fs.readFileSync('example.md', 'utf8');\nvar ast = remark.parse(markdown);\n\nselect(ast, 'list text[value*=TODO]')\n//=> [ { type: 'text', value: 'TODO Step 2.' },\n//     { type: 'text', value: 'TODO Step 3.1.' },\n//     { type: 'text', value: 'TODO Step 3.3.' } ]\n```\n\nThat's it!\n\n[remark]: https://github.com/wooorm/remark\n\n## Features\n\nAll the relevant parts of [Selectors Level 3][spec]:\n\n[spec]: http://www.w3.org/TR/css3-selectors/\n\n- [x] Type selectors: `paragraph`\n- [x] Descendant selectors: `paragraph text`\n- [x] Child selectors: `paragraph > text`\n- [x] Sibling selectors: `paragraph ~ text`\n- [x] Adjacent sibling selectors: `paragraph + text`\n- [x] Group selectors: `paragraph, text`\n- [x] Universal selector: `*`\n- [x] Attribute selectors: `text[value*=\"substr\"]`\n  - [x] Existence: `[value]`\n  - [x] Equality: `[value=\"foo\"]`\n  - [x] Begins with: `[value^=\"prefix\"]`\n  - [x] Containment: `[value*=\"substr\"]`\n  - [x] Ends with: `[value$=\"suffix\"]`\n- [x] Structural pseudo-classes: `paragraph:first-of-type`\n  - [x] `:root`\n  - [x] `:nth-child(2n+1)`\n  - [x] `:nth-last-child(2n+1)`\n  - [x] `:nth-of-type(2n+1)`\n  - [x] `:nth-last-of-type(2n+1)`\n  - [x] `:first-child`\n  - [x] `:last-child`\n  - [x] `:first-of-type`\n  - [x] `:last-of-type`\n  - [x] `:only-child`\n  - [x] `:only-of-type`\n  - [x] `:empty`\n- [x] Negation pseudo-class: `*:not(paragraph)`\n\n## API\n\n### `select(ast, selector)`\n\n*Curried form: `select(ast)(selector)`*\n\nApplies `selector` to `ast`, returns array of matching nodes.\n\n### `select.one(ast, selector)`\n\n*Curried form: `select.one(ast)(selector)`*\n\nReturns a single node matching `selector`.\n\nThrows an error if node is not found or not unique.\n\n## Install\n\n```\nnpm install unist-util-select\n```\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/eush77/unist-util-select.git"
  },
  "scripts": {
    "test": "tape test/*.js"
  },
  "version": "1.5.0"
}
