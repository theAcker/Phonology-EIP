{
  "_args": [
    [
      {
        "raw": "vfile@^3.0.0",
        "scope": null,
        "escapedName": "vfile",
        "name": "vfile",
        "rawSpec": "^3.0.0",
        "spec": ">=3.0.0 <4.0.0",
        "type": "range"
      },
      "C:\\Users\\Alexandre\\VoiceWatcher\\node_modules\\postcss-markdown\\node_modules\\unified"
    ]
  ],
  "_from": "vfile@^3.0.0",
  "_hasShrinkwrap": false,
  "_id": "vfile@3.0.1",
  "_location": "/postcss-markdown/vfile",
  "_nodeVersion": "11.0.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/vfile_3.0.1_1540733725015_0.1676188233120417"
  },
  "_npmUser": {
    "name": "wooorm",
    "email": "tituswormer@gmail.com"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "vfile@^3.0.0",
    "scope": null,
    "escapedName": "vfile",
    "name": "vfile",
    "rawSpec": "^3.0.0",
    "spec": ">=3.0.0 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/postcss-markdown/unified"
  ],
  "_resolved": "https://registry.npmjs.org/vfile/-/vfile-3.0.1.tgz",
  "_shasum": "47331d2abe3282424f4a4bb6acd20a44c4121803",
  "_shrinkwrap": null,
  "_spec": "vfile@^3.0.0",
  "_where": "C:\\Users\\Alexandre\\VoiceWatcher\\node_modules\\postcss-markdown\\node_modules\\unified",
  "author": {
    "name": "Titus Wormer",
    "email": "tituswormer@gmail.com",
    "url": "https://wooorm.com"
  },
  "bugs": {
    "url": "https://github.com/vfile/vfile/issues"
  },
  "contributors": [
    {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "https://wooorm.com"
    },
    {
      "name": "Brendan Abbott",
      "email": "brendan.abbott@temando.com"
    },
    {
      "name": "Denys Dovhan",
      "email": "email@denysdovhan.com"
    },
    {
      "name": "Kyle Mathews",
      "email": "mathews.kyle@gmail.com"
    },
    {
      "name": "Shinnosuke Watanabe",
      "email": "snnskwtnb@gmail.com"
    },
    {
      "name": "Sindre Sorhus",
      "email": "sindresorhus@gmail.com"
    }
  ],
  "dependencies": {
    "is-buffer": "^2.0.0",
    "replace-ext": "1.0.0",
    "unist-util-stringify-position": "^1.0.0",
    "vfile-message": "^1.0.0"
  },
  "description": "Virtual file format for text processing",
  "devDependencies": {
    "browserify": "^16.0.0",
    "nyc": "^13.0.0",
    "prettier": "^1.12.1",
    "remark-cli": "^6.0.0",
    "remark-preset-wooorm": "^4.0.0",
    "tape": "^4.4.0",
    "tinyify": "^2.4.3",
    "xo": "^0.23.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-y7Y3gH9BsUSdD4KzHsuMaCzRjglXN0W2EcMf0gpvu6+SbsGhMje7xDc8AEoeXy6mIwCKMI6BkjMsRjzQbhMEjQ==",
    "shasum": "47331d2abe3282424f4a4bb6acd20a44c4121803",
    "tarball": "https://registry.npmjs.org/vfile/-/vfile-3.0.1.tgz",
    "fileCount": 6,
    "unpackedSize": 19111,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb1bsdCRA9TVsSAnZWagAApcwP/RrONz4hZtlxWnepS0Jn\nqiVbhC/6T1SJCRcQdXqWJXghK++pWDaSgfpfaEjY0LkvyHDnHlXijoYzv9j5\nhgl9H6kIp+4EVhAdRqtzafBQCB3NvvEavyeqN7bxGm9bYWjxOgYJzgfnuoGJ\naLwuUecDvT3yzY+RKwfzPeXt5UmHoX7NqPbHjEXvJAmCYyOBO/JUVAmTVI43\n0ALjmObLNr5sWDu9sbS5ezo1g+CbOF9xJR7vNkyMcR5qEA8oHsw/zsjVkNNj\n04K/MiU6wVpdS0ufS2WKKrmiAgfrFXRLmpKakHzUzktM5PLDm50zg133OoCE\nscRUIyl7rz4vulrrYs7Xeo74s9w7AP4p9hXeJfJG/Nf9o9PVAQrQLO+8sEyM\nwEnqhNGWy9vnGnonUnbB7byNQY0y5+2+aeeFiSZG8Hg381AOFOBr0WTmxURQ\nnEy55QkxRADTh1oR16ipzIuRFK1DmEOf67ysIjPfIXORGSLnPMMjUV1KAVet\nOrr7xI+WUnIWbTTmB5a1SBm1DVDtDWP2O6FCvccsWvN/dRome7LbigG6R5G7\nIfZxJfYWgVUd0DoxkYKFneRe5fr18tRdN3han8QZLCdpfGhH1eay9csb+j5y\nXq8WGZRTOhjXRHgmq4zFheI/MaQXJfXQkcipylmLfg7ATvzNbpgqw2qWObBT\n65C8\r\n=ZQKB\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [
    "core.js",
    "index.js"
  ],
  "gitHead": "b07cbb0b21d99ec73671fec56a7fa6c65990f96f",
  "homepage": "https://github.com/vfile/vfile#readme",
  "keywords": [
    "virtual",
    "file",
    "text",
    "processing",
    "message",
    "warning",
    "error",
    "remark",
    "retext"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "wooorm",
      "email": "tituswormer@gmail.com"
    }
  ],
  "name": "vfile",
  "nyc": {
    "check-coverage": true,
    "lines": 100,
    "functions": 100,
    "branches": 100
  },
  "optionalDependencies": {},
  "prettier": {
    "tabWidth": 2,
    "useTabs": false,
    "singleQuote": true,
    "bracketSpacing": false,
    "semi": false,
    "trailingComma": "none"
  },
  "readme": "# ![vfile][]\n\n[![Travis][build-badge]][build]\n[![Coverage][coverage-badge]][coverage]\n[![Downloads][downloads-badge]][downloads]\n[![Size][size-badge]][size]\n[![Chat][chat-badge]][chat]\n\n**VFile** is a virtual file format used by [**unified**][unified],\na text processing umbrella (it powers [**retext**][retext] for\nnatural language, [**remark**][remark] for markdown, and\n[**rehype**][rehype] for HTML).  Each processors that parse, transform,\nand compile text, and need a virtual representation of files and a\nplace to store [messages][] about them.  Plus, they work in the browser.\n**VFile** provides these requirements at a small size, in IE 9 and up.\n\n> **VFile** is different from the excellent [**vinyl**][vinyl]\n> in that it has a smaller API, a smaller size, and focuses on\n> [messages][].\n\nVFile can be used anywhere where files need a lightweight representation.\nFor example, it’s used in:\n\n*   [`documentation`](https://github.com/documentationjs/documentation)\n    — The documentation system for modern JavaScript\n*   [`awoo`](https://github.com/awoojs/awoo)\n    — Declarative small site generator\n*   [`geojsonhint`](https://github.com/mapbox/geojsonhint)\n    — Complete, fast, standards-based validation for geojson\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install vfile\n```\n\n## Table of Contents\n\n*   [Usage](#usage)\n*   [Utilities](#utilities)\n*   [Reporters](#reporters)\n*   [API](#api)\n    *   [VFile(\\[options\\])](#vfileoptions)\n    *   [vfile.contents](#vfilecontents)\n    *   [vfile.cwd](#vfilecwd)\n    *   [vfile.path](#vfilepath)\n    *   [vfile.basename](#vfilebasename)\n    *   [vfile.stem](#vfilestem)\n    *   [vfile.extname](#vfileextname)\n    *   [vfile.dirname](#vfiledirname)\n    *   [vfile.history](#vfilehistory)\n    *   [vfile.messages](#vfilemessages)\n    *   [vfile.data](#vfiledata)\n    *   [VFile#toString(\\[encoding\\])](#vfiletostringencoding)\n    *   [VFile#message(reason\\[, position\\]\\[, origin\\])](#vfilemessagereason-position-origin)\n    *   [VFile#info(reason\\[, position\\]\\[, origin\\])](#vfileinforeason-position-origin)\n    *   [VFile#fail(reason\\[, position\\]\\[, origin\\])](#vfilefailreason-position-origin)\n*   [Contribute](#contribute)\n*   [Acknowledgments](#acknowledgments)\n*   [License](#license)\n\n## Usage\n\n```js\nvar vfile = require('vfile')\n\nvar file = vfile({path: '~/example.txt', contents: 'Alpha *braavo* charlie.'})\n\nfile.path // => '~/example.txt'\nfile.dirname // => '~'\n\nfile.extname = '.md'\n\nfile.basename // => 'example.md'\n\nfile.basename = 'index.text'\n\nfile.history // => ['~/example.txt', '~/example.md', '~/index.text']\n\nfile.message('`braavo` is misspelt; did you mean `bravo`?', {\n  line: 1,\n  column: 8\n})\n\nconsole.log(file.messages)\n```\n\nYields:\n\n```js\n[ { [~/index.text:1:8: `braavo` is misspelt; did you mean `bravo`?]\n    message: '`braavo` is misspelt; did you mean `bravo`?',\n    name: '~/index.text:1:8',\n    file: '~/index.text',\n    reason: '`braavo` is misspelt; did you mean `bravo`?',\n    line: 1,\n    column: 8,\n    location: { start: [Object], end: [Object] },\n    ruleId: null,\n    source: null,\n    fatal: false } ]\n```\n\n## Utilities\n\nThe following list of projects includes tools for working with virtual\nfiles.  See [**Unist**][unist] for projects working with nodes.\n\n*   [`convert-vinyl-to-vfile`](https://github.com/dustinspecker/convert-vinyl-to-vfile)\n    — Convert from [Vinyl][]\n*   [`is-vfile-message`](https://github.com/shinnn/is-vfile-message)\n    — Check if a value is a `VMessage` object\n*   [`to-vfile`](https://github.com/vfile/to-vfile)\n    — Create a virtual file from a file-path (and optionally read it)\n*   [`vfile-find-down`](https://github.com/vfile/vfile-find-down)\n    — Find files by searching the file system downwards\n*   [`vfile-find-up`](https://github.com/vfile/vfile-find-up)\n    — Find files by searching the file system upwards\n*   [`vfile-glob`](https://github.com/shinnn/vfile-glob)\n    — Find files by glob patterns\n*   [`vfile-location`](https://github.com/vfile/vfile-location)\n    — Convert between line/column- and range-based locations\n*   [`vfile-message`](https://github.com/vfile/vfile-message)\n    — Create a `VMessage` object (used in `vfile` itself)\n*   [`vfile-statistics`](https://github.com/vfile/vfile-statistics)\n    — Count messages per category\n*   [`vfile-messages-to-vscode-diagnostics`](https://github.com/shinnn/vfile-messages-to-vscode-diagnostics)\n    — Convert to VS Code diagnostics\n*   [`vfile-sort`](https://github.com/vfile/vfile-sort)\n    — Sort messages by line/column\n*   [`vfile-to-eslint`](https://github.com/vfile/vfile-to-eslint)\n    — Convert VFiles to ESLint formatter compatible output\n\n## Reporters\n\nThe following list of projects show linting results for given virtual files.\nReporters _must_ accept `Array.<VFile>` as their first argument, and return\n`string`.  Reporters _may_ accept other values too, in which case it’s suggested\nto stick to `vfile-reporter`s interface.\n\n*   [`vfile-reporter`][reporter]\n    — Stylish reporter\n*   [`vfile-reporter-json`](https://github.com/vfile/vfile-reporter-json)\n    — JSON reporter\n*   [`vfile-reporter-folder-json`](https://github.com/vfile/vfile-reporter-folder-json)\n    — JSON reporter with a folder structure\n*   [`vfile-reporter-pretty`](https://github.com/vfile/vfile-reporter-pretty)\n    — Pretty reporter\n\n## API\n\n### `VFile([options])`\n\nCreate a new virtual file.  If `options` is `string` or `Buffer`, treats\nit as `{contents: options}`.  If `options` is a `VFile`, returns it.\nAll other options are set on the newly created `vfile`.\n\nPath related properties are set in the following order (least specific\nto most specific): `history`, `path`, `basename`, `stem`, `extname`,\n`dirname`.\n\nIt’s not possible to set either `dirname` or `extname` without setting\neither `history`, `path`, `basename`, or `stem` as well.\n\n###### Example\n\n```js\nvfile()\nvfile('console.log(\"alpha\");')\nvfile(Buffer.from('exit 1'))\nvfile({path: path.join(__dirname, 'readme.md')})\nvfile({stem: 'readme', extname: '.md', dirname: __dirname})\nvfile({other: 'properties', are: 'copied', ov: {e: 'r'}})\n```\n\n### `vfile.contents`\n\n`Buffer`, `string`, `null` — Raw value.\n\n### `vfile.cwd`\n\n`string` — Base of `path`.  Defaults to `process.cwd()`.\n\n### `vfile.path`\n\n`string?` — Path of `vfile`.  Cannot be nullified.\n\n### `vfile.basename`\n\n`string?` — Current name (including extension) of `vfile`.  Cannot\ncontain path separators.  Cannot be nullified either (use\n`file.path = file.dirname` instead).\n\n### `vfile.stem`\n\n`string?` — Name (without extension) of `vfile`.  Cannot be nullified,\nand cannot contain path separators.\n\n### `vfile.extname`\n\n`string?` — Extension (with dot) of `vfile`.  Cannot be set if\nthere’s no `path` yet and cannot contain path separators.\n\n### `vfile.dirname`\n\n`string?` — Path to parent directory of `vfile`.  Cannot be set if\nthere’s no `path` yet.\n\n### `vfile.history`\n\n`Array.<string>` — List of file-paths the file moved between.\n\n### `vfile.messages`\n\n[`Array.<VMessage>`][message] — List of messages associated with the file.\n\n### `vfile.data`\n\n`Object` — Place to store custom information.  It’s OK to store custom\ndata directly on the `vfile`, moving it to `data` gives a _little_ more\nprivacy.\n\n### `VFile#toString([encoding])`\n\nConvert contents of `vfile` to string.  If `contents` is a buffer,\n`encoding` is used to stringify buffers (default: `'utf8'`).\n\n### `VFile#message(reason[, position][, origin])`\n\nAssociates a message with the file, where `fatal` is set to `false`.\nConstructs a new [`VMessage`][vmessage] and adds it to\n[`vfile.messages`][messages].\n\n##### Returns\n\n[`VMessage`][vmessage].\n\n### `VFile#info(reason[, position][, origin])`\n\nAssociates an informational message with the file, where `fatal` is set to\n`null`.  Calls [`#message()`][message] internally.\n\n##### Returns\n\n[`VMessage`][vmessage].\n\n### `VFile#fail(reason[, position][, origin])`\n\nAssociates a fatal message with the file, then immediately throws it.\nNote: fatal errors mean a file is no longer processable.\nCalls [`#message()`][message] internally.\n\n##### Throws\n\n[`VMessage`][vmessage].\n\n## Contribute\n\n**VFile** is built by people just like you!  Check out\n[`contributing.md`][contribute] for ways to get started.\n\nThis project has a [Code of Conduct][coc].  By interacting with this repository,\norganisation, or community you agree to abide by its terms.\n\nWant to chat with the community and contributors?  Join us in [Gitter][chat]!\n\nHave an idea for a cool new utility or tool?  That’s great!  If you want\nfeedback, help, or just to share it with the world you can do so by creating\nan issue in the [`vfile/ideas`][ideas] repository!\n\n## Acknowledgments\n\nThe initial release of this project was authored by\n[**@wooorm**](https://github.com/wooorm).\n\nThanks to [**@contra**](https://github.com/contra),\n[**@phated**](https://github.com/phated), and others for their work on\n[Vinyl][], which was a huge inspiration.\n\nThanks to\n[**@brendo**](https://github.com/brendo),\n[**@shinnn**](https://github.com/shinnn),\n[**@KyleAMathews**](https://github.com/KyleAMathews), [**@sindresorhus**](https://github.com/sindresorhus),\nand [**@denysdovhan**](https://github.com/denysdovhan)\nfor contributing commits since!\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[build-badge]: https://img.shields.io/travis/vfile/vfile/master.svg\n\n[build]: https://travis-ci.org/vfile/vfile\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/vfile/vfile.svg\n\n[coverage]: https://codecov.io/github/vfile/vfile\n\n[downloads-badge]: https://img.shields.io/npm/dm/vfile.svg\n\n[downloads]: https://www.npmjs.com/package/vfile\n\n[size-badge]: https://img.shields.io/bundlephobia/minzip/vfile.svg\n\n[size]: https://bundlephobia.com/result?p=vfile\n\n[chat-badge]: https://img.shields.io/gitter/room/vfile/Lobby.svg\n\n[chat]: https://gitter.im/vfile/Lobby\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: license\n\n[author]: https://wooorm.com\n\n[vfile]: https://raw.githubusercontent.com/vfile/vfile/7e1e6a6/logo.svg?sanitize=true\n\n[unified]: https://github.com/unifiedjs/unified\n\n[retext]: https://github.com/retextjs/retext\n\n[remark]: https://github.com/remarkjs/remark\n\n[rehype]: https://github.com/rehypejs/rehype\n\n[vinyl]: https://github.com/gulpjs/vinyl\n\n[unist]: https://github.com/syntax-tree/unist#list-of-utilities\n\n[reporter]: https://github.com/vfile/vfile-reporter\n\n[vmessage]: https://github.com/vfile/vfile-message\n\n[messages]: #vfilemessages\n\n[message]: #vfilemessagereason-position-origin\n\n[contribute]: contributing.md\n\n[coc]: code-of-conduct.md\n\n[ideas]: https://github.com/vfile/ideas\n",
  "readmeFilename": "readme.md",
  "remarkConfig": {
    "plugins": [
      "preset-wooorm"
    ]
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/vfile/vfile.git"
  },
  "scripts": {
    "build": "npm run build-bundle && npm run build-mangle",
    "build-bundle": "browserify . -s VFile > vfile.js",
    "build-mangle": "browserify . -s VFile -p tinyify > vfile.min.js",
    "format": "remark . -qfo && prettier --write '**/*.js' && xo --fix",
    "test": "npm run format && npm run build && npm run test-coverage",
    "test-api": "node test",
    "test-coverage": "nyc --reporter lcov tape test.js"
  },
  "version": "3.0.1",
  "xo": {
    "prettier": true,
    "esnext": false,
    "rules": {
      "no-var": "off",
      "prefer-arrow-callback": "off",
      "object-shorthand": "off"
    },
    "ignores": [
      "vfile.js"
    ]
  }
}
