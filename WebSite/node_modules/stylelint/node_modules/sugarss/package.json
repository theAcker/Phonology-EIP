{
  "_args": [
    [
      {
        "raw": "sugarss@^2.0.0",
        "scope": null,
        "escapedName": "sugarss",
        "name": "sugarss",
        "rawSpec": "^2.0.0",
        "spec": ">=2.0.0 <3.0.0",
        "type": "range"
      },
      "C:\\Users\\Alexandre\\VoiceWatcher\\node_modules\\stylelint"
    ]
  ],
  "_from": "sugarss@>=2.0.0 <3.0.0",
  "_id": "sugarss@2.0.0",
  "_inCache": true,
  "_location": "/stylelint/sugarss",
  "_nodeVersion": "10.8.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/sugarss_2.0.0_1533959779336_0.6646467809699204"
  },
  "_npmUser": {
    "name": "ai",
    "email": "andrey@sitnik.ru"
  },
  "_npmVersion": "6.2.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "sugarss@^2.0.0",
    "scope": null,
    "escapedName": "sugarss",
    "name": "sugarss",
    "rawSpec": "^2.0.0",
    "spec": ">=2.0.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/stylelint"
  ],
  "_resolved": "https://registry.npmjs.org/sugarss/-/sugarss-2.0.0.tgz",
  "_shasum": "ddd76e0124b297d40bf3cca31c8b22ecb43bc61d",
  "_shrinkwrap": null,
  "_spec": "sugarss@^2.0.0",
  "_where": "C:\\Users\\Alexandre\\VoiceWatcher\\node_modules\\stylelint",
  "author": {
    "name": "Andrey Sitnik",
    "email": "andrey@sitnik.ru"
  },
  "bugs": {
    "url": "https://github.com/postcss/sugarss/issues"
  },
  "dependencies": {
    "postcss": "^7.0.2"
  },
  "description": "Indent-based CSS syntax for PostCSS",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "integrity": "sha512-WfxjozUk0UVA4jm+U1d736AUpzSrNsQcIbyOkoE364GrtWmIrFdk5lksEupgWMD4VaT/0kVx1dobpiDumSgmJQ==",
    "shasum": "ddd76e0124b297d40bf3cca31c8b22ecb43bc61d",
    "tarball": "https://registry.npmjs.org/sugarss/-/sugarss-2.0.0.tgz",
    "fileCount": 12,
    "unpackedSize": 111630,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbbl5jCRA9TVsSAnZWagAAoEYP+wXbA5SDgotlLCMw4cts\n9bDmJHhib9Wh8svRiMYsmQ1HAQahhrlWN3BubEOM/NQjDkrc4ZPmaO3rqnzp\nAOSCnUwja8QFrVq6u32zes3wNyBsT6FCAF42l/+8CsVHDmLuDCTqWX1WhhK4\ns/ATgY3wZfeBRcyZMS9if1F+GfIwxJ8LoAcQB0A+/9B8WwovDQHzeAcQdF6a\nZnVXo8nQnZFgvisewgS/9Ng8u7pBeXIglZTo6r1nXEMbaM2qrGoJgyxk5h/U\nakQm0zT19idioforscfxnbPEIejbHN47DDh94Hj4lznDr0AI4PGDsCNmdbc1\n09MfwP2/BI5zzsPukWuJlokTkJMVifMD7aH+ufrIOx5mNH1UU+UNZVeEfa/C\nDjQvA+IFc28YnbnbGh0SfMyo/eDxnPx8e+9x4J6+jMtaUI4cbSxhDiLZGFDo\nBTc3H6QWFu9xsZq2WTf2UdfHUE5us63wfpqemnAgqjTXyEcyMSzNp65fYkkG\nNCCyeJRNByPNbmj8p0Xhm4AbfD0r+kVTJDmichUb3BkGZoflhdqODDZJpu5N\nt3NIlfC0aoPN+kpZgSCfmb3Af+/PdRFYLGpSVeunQS+X0wGC3ZCl2JBDNQtM\n5lfPZOh7YiTfzxTyW2juTNo6D0Y0bi907CDZhJ3n1UHimIq4M67Tbl7kZfOW\ngjGW\r\n=sa3z\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "homepage": "https://github.com/postcss/sugarss#readme",
  "keywords": [
    "css",
    "postcss",
    "postcss-syntax",
    "syntax",
    "indent",
    "parser"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "ai",
      "email": "andrey@sitnik.ru"
    }
  ],
  "name": "sugarss",
  "optionalDependencies": {},
  "readme": "# SugarSS [![Build Status][ci-img]][ci]\n\n<img align=\"right\" width=\"120\" height=\"155\"\n     title=\"SugarSS logo by Maria Keller\"\n     src=\"http://postcss.github.io/sugarss/logo.svg\">\n\nIndent-based CSS syntax for [PostCSS].\n\n```sass\na\n  color: blue\n\n.multiline,\n.selector\n  box-shadow: 1px 0 9px rgba(0, 0, 0, .4),\n              1px 0 3px rgba(0, 0, 0, .6)\n\n// Mobile\n@media (max-width: 400px)\n  .body\n    padding: 0 10px\n```\n\nAs any PostCSS custom syntax, SugarSS has source map, [stylelint]\nand [postcss-sorting] support out-of-box.\n\nIt was designed to be used with [PreCSS] and [postcss-nested-props].\nBut you can use it with any PostCSS plugins\nor use it without any PostCSS plugins.\nWith [gulp-sass-to-postcss-mixins] you can use `+mixin` syntax as in Sass.\n\n<a href=\"https://evilmartians.com/?utm_source=sugarss\">\n  <img src=\"https://evilmartians.com/badges/sponsored-by-evil-martians.svg\"\n       alt=\"Sponsored by Evil Martians\" width=\"236\" height=\"54\">\n</a>\n\n[gulp-sass-to-postcss-mixins]:  https://github.com/akella/gulp-sass-to-postcss-mixins\n[postcss-nested-props]:        https://github.com/jedmao/postcss-nested-props\n[postcss-sorting]:             https://github.com/hudochenkov/postcss-sorting\n[stylelint]:                   http://stylelint.io/\n[PostCSS]:                     https://github.com/postcss/postcss\n[PreCSS]:                      https://github.com/jonathantneal/precss\n[ci-img]:                      https://img.shields.io/travis/postcss/sugarss.svg\n[ci]:                          https://travis-ci.org/postcss/sugarss\n\n## Syntax\n\nSugarSS MIME-type is `text/x-sugarss` with `.sss` file extension.\n\n### Indent\n\nWe recommend 2 spaces indent. However, SugarSS autodetects indent\nand can be used with tabs or spaces.\n\nBut it is prohibited to mix spaces and tabs in SugarSS sources.\n\n### Multiline\n\nSugarSS was designed to have intuitively multiline selectors and declaration\nvalues.\n\nThere are 3 rules for any types of nodes:\n\n```sass\n// 1. New line inside brackets will be ignored\n@supports ( (display: flex) and\n            (display: grid) )\n\n// 2. Comma at the end of the line\n@media (max-width: 400px),\n       (max-height: 800px)\n\n// 3. Backslash before new line\n@media screen and \\\n       (min-width: 600px)\n```\n\nIn selector you can put a new line anywhere. Just keep same indent\nfor every line of selector:\n\n```sass\n.parent >\n.child\n  color: black\n```\n\nIn declaration value you can put new line anywhere. Just keep bigger indent\nfor value:\n\n```sass\n.one\n  background: linear-gradient(rgba(0, 0, 0, 0), black)\n              linear-gradient(red, rgba(255, 0, 0, 0))\n\n.two\n  background:\n    linear-gradient(rgba(0, 0, 0, 0), black)\n    linear-gradient(red, rgba(255, 0, 0, 0))\n```\n\n### Comments\n\nSugarSS supports two types of comments:\n\n```sass\n/*\n Multiline comments\n */\n\n// Inline comments\n```\n\nThere is no “silent” comments in SugarSS. Output CSS will contain all comments\nfrom `.sss` source. But you can use [postcss-discard-comments]\nfor Sass’s silent/loud comments behaviour.\n\n[postcss-discard-comments]: https://www.npmjs.com/package/postcss-discard-comments\n\n### Rule and Declarations\n\nSugarSS separates selectors and declarations by `:\\s` or `:\\n` token.\n\nSo you must write a space after property name: `color: black` is good,\n`color:black` is prohibited.\n\n## Text Editors\n\n* SublimeText: [Syntax Highlighting for .SSS SugarSS]\n* Atom: [language-postcss], [source-preview-postcss] and [build-sugarss]\n* Vim: [vim-sugarss]\n\nWe are working on syntax highlight support in text editors.\n\nRight now, you can set `Sass` or `Stylus` syntax highlight for `.sss` files.\n\n[Syntax Highlighting for .SSS SugarSS]: https://packagecontrol.io/packages/Syntax%20Highlighting%20for%20SSS%20SugarSS\n[source-preview-postcss]:          https://atom.io/packages/source-preview-postcss\n[language-postcss]:                https://atom.io/packages/language-postcss\n[build-sugarss]:                   https://atom.io/packages/build-sugarss\n[vim-sugarss]:                     https://github.com/hhsnopek/vim-sugarss\n\n## Usage\n\nInstall SugarSS via npm:\n\n```sh\nnpm install sugarss --save-dev\n```\n\n### SugarSS to CSS\n\nJust set SugarSS to PostCSS `parser` option and PostCSS will compile\nSugarSS to CSS.\n\n[Gulp](https://github.com/postcss/gulp-postcss):\n\n```js\nvar sugarss = require('sugarss');\nvar postcss = require('gulp-postcss');\nvar rename  = require('gulp-rename');\n\ngulp.task('style', function () {\n    return gulp.src('src/**/*.sss')\n        .pipe(postcss(plugins, { parser: sugarss }))\n        .pipe(rename({ extname: '.css' }))\n        .pipe(gulp.dest('build'));\n});\n```\n\n[Webpack](https://github.com/postcss/postcss-loader):\n\n```js\nmodule: {\n    loaders: [\n        {\n            test:   /\\.sss/,\n            loader: \"style-loader!css-loader!postcss-loader?parser=sugarss\"\n        }\n    ]\n}\n```\n\n[CLI](https://github.com/postcss/postcss-cli):\n\n```\npostcss -u autoprefixer -p sugarss test.sss -o test.css\n```\n\n### SugarSS to SugarSS\n\nSometimes we use PostCSS not to build CSS, but to fix source file.\nFor example, to sort properties by [postcss-sorting].\n\nFor this cases, use `syntax` option, instead of `parser`:\n\n```js\ngulp.task('sort', function () {\n    return gulp.src('src/**/*.sss')\n        .pipe(postcss([sorting], { syntax: sugarss }))\n        .pipe(gulp.dest('src'));\n});\n```\n\n[postcss-sorting]: https://github.com/hudochenkov/postcss-sorting\n\n### CSS to SugarSS\n\nYou can even compile existed CSS sources to SugarSS syntax.\nJust use `stringifier` option instead of `parser`:\n\n```js\npostcss().process(css, { stringifier: sugarss }).then(function (result) {\n    result.content // Converted SugarSS content\n});\n```\n\n### Imports\n\n[postcss-import] doesn’t support `.sss` file extension, because this plugin\nimplements W3C specification. If you want smarter `@import`, you should\nuse [postcss-easy-import] with `extensions` option.\n\n```js\nvar postcssPlugin = [\n  easyImport({ extensions: ['.sss'] })\n]\n```\n\n[postcss-easy-import]: https://github.com/TrySound/postcss-easy-import\n[postcss-import]:      https://github.com/postcss/postcss-import\n\n## Thanks\n\nCute project logo was made by [Maria Keller](http://www.mariakellerac.com/).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/postcss/sugarss.git"
  },
  "version": "2.0.0"
}
