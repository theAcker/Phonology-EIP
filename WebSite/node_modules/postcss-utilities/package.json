{
  "_args": [
    [
      {
        "raw": "postcss-utilities@^0.8.0",
        "scope": null,
        "escapedName": "postcss-utilities",
        "name": "postcss-utilities",
        "rawSpec": "^0.8.0",
        "spec": ">=0.8.0 <0.9.0",
        "type": "range"
      },
      "C:\\Users\\Alexandre\\VoiceWatcher"
    ]
  ],
  "_from": "postcss-utilities@>=0.8.0 <0.9.0",
  "_id": "postcss-utilities@0.8.0",
  "_inCache": true,
  "_location": "/postcss-utilities",
  "_nodeVersion": "8.9.2",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/postcss-utilities-0.8.0.tgz_1517016575124_0.7332743506412953"
  },
  "_npmUser": {
    "name": "ismamz",
    "email": "ismael@isma.uy"
  },
  "_npmVersion": "4.3.0",
  "_phantomChildren": {
    "chalk": "2.4.2",
    "supports-color": "5.5.0"
  },
  "_requested": {
    "raw": "postcss-utilities@^0.8.0",
    "scope": null,
    "escapedName": "postcss-utilities",
    "name": "postcss-utilities",
    "rawSpec": "^0.8.0",
    "spec": ">=0.8.0 <0.9.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/postcss-utilities/-/postcss-utilities-0.8.0.tgz",
  "_shasum": "2378ff421638d68f9e31bc61ab4a8c220b4a7c43",
  "_shrinkwrap": null,
  "_spec": "postcss-utilities@^0.8.0",
  "_where": "C:\\Users\\Alexandre\\VoiceWatcher",
  "author": {
    "name": "Ismael Martínez",
    "email": "ismael@isma.uy"
  },
  "bugs": {
    "url": "https://github.com/ismamz/postcss-utilities/issues"
  },
  "dependencies": {
    "postcss": "^6.0.16",
    "postcss-value-parser": "^3.3.0"
  },
  "description": "PostCSS plugin to add a collection of mixins, shortcuts, helpers and tools for your CSS",
  "devDependencies": {
    "ava": "^0.25.0",
    "eslint": "^2.13.1",
    "eslint-config-postcss": "^2.0.2",
    "fs": "0.0.2"
  },
  "directories": {},
  "dist": {
    "shasum": "2378ff421638d68f9e31bc61ab4a8c220b4a7c43",
    "tarball": "https://registry.npmjs.org/postcss-utilities/-/postcss-utilities-0.8.0.tgz"
  },
  "eslintConfig": {
    "extends": "postcss/es5",
    "rules": {
      "complexity": [
        "error",
        {
          "max": 60
        }
      ]
    }
  },
  "gitHead": "c82e7ce158482f48263f329aae15d7e0ea850efc",
  "homepage": "https://github.com/ismamz/postcss-utilities",
  "keywords": [
    "postcss",
    "css",
    "postcss-plugin",
    "utility",
    "library",
    "collection",
    "pack",
    "helpers",
    "mixins",
    "shortcuts",
    "hacks"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "ismamz",
      "email": "ismael@isma.uy"
    }
  ],
  "name": "postcss-utilities",
  "optionalDependencies": {},
  "readme": "# PostCSS Utility Library [![Build Status][ci-img]][ci]\n\n<p align=\"center\">\n    <a href=\"https://ismamz.github.io/postcss-utilities\">\n        <img\n            src=\"https://raw.githubusercontent.com/ismamz/postcss-utilities/master/media/logo.png\"\n            alt=\"PostCSS Utility Library\"\n            width=\"200\"\n        />\n    </a>\n</p>\n\n[PostCSS]: https://github.com/postcss/postcss\n[ci-img]:  https://travis-ci.org/ismamz/postcss-utilities.svg\n[ci]:      https://travis-ci.org/ismamz/postcss-utilities\n\n[postcss-utilities](https://ismamz.github.io/postcss-utilities/) is a [PostCSS] plugin that includes the most commonly used mixins, shortcuts and helpers. It's as easy as specifying `@util utility-name` in your stylesheet, and postcss-utilities will handle the rest for you.\n\n<h4 align=\"center\"><a href=\"https://ismamz.github.io/postcss-utilities\">Check out the documentation to get started using postcss-utilities</a></h4>\n\n<h5 align=\"center\"><a href=\"https://ismamz.github.io/postcss-utilities/playground/\">Try it in the browser!</a></h5>\n\n### Motivation\n\nPostCSS has a lot of plugins and some of them use non-standard CSS properties to work as mixins or helpers. This is not a best way for a PostCSS plugin, because developers will not understand what is the source of this property.\n\n> \"This plugin saves us from many tiny plugins with unknown properties\" _‒[@ai](https://github.com/ai) proposal [postcss/issues/645](https://github.com/postcss/postcss/issues/645)_\n\n### What is the difference between preprocessor’s mixins libraries?\n\nThere are lot of Sass Mixins Libraries ([over 65!](http://www.cssauthor.com/sass-mixins-library/)), but postcss-utilities makes the difference. All mixins and helpers are built with JavaScript and you can add to your workflow with ease, as simple as adding [autoprefixer](https://github.com/postcss/autoprefixer) or many others useful [PostCSS plugins](https://github.com/postcss/postcss/blob/master/docs/plugins.md).\n\nYou can forget about copy mixins from project to project and focus on write your project specific mixins and use this plugin for the most generic helpers.\n\n- You don’t need the extra files in your CSS codebase for mixins.\n- You don’t need mixins for vendor prefixing (use [autoprefixer](https://github.com/postcss/autoprefixer) plugin)\n- You can use postcss-utilities with LESS, SASS, vanilla CSS or whatever you choice.\n\n### List of current utilities\n\n**IMPORTANT**: The list of utilities is open for suggestions.\n\n- [aspect-ratio](https://ismamz.github.io/postcss-utilities/docs#aspect-ratio)\n- [border-color](https://ismamz.github.io/postcss-utilities/docs#border-color)\n- [border-radius](https://ismamz.github.io/postcss-utilities/docs#border-radius)\n- [border-style](https://ismamz.github.io/postcss-utilities/docs#border-style)\n- [border-width](https://ismamz.github.io/postcss-utilities/docs#border-width)\n- [center](https://ismamz.github.io/postcss-utilities/docs#center)\n- [center-block](https://ismamz.github.io/postcss-utilities/docs#center-block)\n- [circle](https://ismamz.github.io/postcss-utilities/docs#circle)\n- [clearfix](https://ismamz.github.io/postcss-utilities/docs#clear-fix)\n- [hd breakpoint](https://ismamz.github.io/postcss-utilities/docs#hd-breakpoint)\n- [hide-visually](https://ismamz.github.io/postcss-utilities/docs#hide-visually)\n- [hr](https://ismamz.github.io/postcss-utilities/docs#horizontal-rule)\n- [margin](https://ismamz.github.io/postcss-utilities/docs#margin)\n- [no-hover](https://ismamz.github.io/postcss-utilities/docs#no-hover)\n- [no-js](https://ismamz.github.io/postcss-utilities/docs#no-js)\n- [padding](https://ismamz.github.io/postcss-utilities/docs#padding)\n- [position](https://ismamz.github.io/postcss-utilities/docs#position)\n- [reset-list](https://ismamz.github.io/postcss-utilities/docs#reset-list)\n- [reset-text](https://ismamz.github.io/postcss-utilities/docs#reset-text)\n- [size](https://ismamz.github.io/postcss-utilities/docs#size)\n- [sticky-footer](https://ismamz.github.io/postcss-utilities/docs#sticky-footer)\n- [text-hide](https://ismamz.github.io/postcss-utilities/docs#text-hide)\n- [text-stroke](https://ismamz.github.io/postcss-utilities/docs#text-stroke)\n- [triangle](https://ismamz.github.io/postcss-utilities/docs#triangle)\n- [truncate](https://ismamz.github.io/postcss-utilities/docs#truncate)\n- [word-break](https://ismamz.github.io/postcss-utilities/docs#word-break)\n\n\n## Examples\n\n### Input\n```css\n\n.cfx {\n    @util clearfix;\n}\n\n.rounded-top {\n    @util border-top-radius(4px);\n}\n\n@util no-hover {\n    .box {\n        background-color: #666;\n    }\n}\n\n```\n\n### Output\n```css\n\n.cfx:after {\n    content: '';\n    display: block;\n    clear: both;\n}\n\n.rounded-top {\n    border-top-left-radius: 4px;\n    border-top-right-radius: 4px;\n}\n\n.no-hover .box {\n    background-color: #666;\n}\n\n```\n\n## Usage\n\n<img align=\"right\" width=\"135\" height=\"95\"\n     title=\"Philosopher’s stone, logo of PostCSS\"\n     src=\"http://postcss.github.io/postcss/logo-leftp.svg\">\n\n### Quick usage\n\nUsing [PostCSS CLI](https://github.com/postcss/postcss-cli) you can do the following:\n\nInstall `postcss-cli` and the plugin on your project directory:\n\n```\nnpm install postcss-cli postcss-utilities --save-dev\n```\n\nAdd a `postcss` script to your `package.json`:\n\n```json\n\"scripts\": {\n    \"postcss\": \"postcss input.css -u postcss-utilities -o output.css\"\n}\n```\n\nAfter this, you can run `npm run postcss` and transform your `input.css` into `output.css`.\n\n\n### Use with [styled-jsx](https://github.com/zeit/styled-jsx)\n\n**styled-jsx** allows you to use full, scoped and component-friendly CSS in your JSX (rendered on the server or the client) and you can add `@util` rules with `postcss-utilities`.\n\n```\nnpm install --save styled-jsx styled-jsx-plugin-postcss postcss-utilities\n```\n\nAdd `postcss` config in your `package.json`:\n\n```json\n\"postcss\": {\n    \"plugins\": {\n        \"postcss-utilities\": {}\n    }\n}\n```\n\nAdd `styled-jsx/babel` to plugins in your babel configuration:\n\n```json\n{\n  \"plugins\": [\n    \"styled-jsx/babel\"\n  ]\n}\n```\n\nThen write `@util` rules in your code:\n\n```jsx\nexport default () => (\n  <div>\n    <p>only this paragraph will get the style :)</p>\n\n    <style jsx>{`\n      p {\n        color: red;\n        @util center;\n      }\n    `}</style>\n  </div>\n)\n```\n\n### For tasks runners and others enviroments\n\n```js\npostcss([ require('postcss-utilities')({ /* options*/ }) ])\n```\n\nSee [PostCSS] docs for examples of your environment.\n\n\n## Options\n\n##### noHoverSelector\n\nType: `string`<br>\nDefault: `.no-hover`\n\nTo use with [`no-hover` utility](https://ismamz.github.io/postcss-utilities/docs#no-hover)\n\n##### noJsSelector\n\nType: `string`<br>\nDefault: `.no-js`\n\nTo use with [`no-js` utility](https://ismamz.github.io/postcss-utilities/docs#no-js)\n\n##### ie8\n\nType: `boolean`<br>\nDefault: `false`\n\nSet `true` to use `clearfix` method IE8 compatible\n\n##### centerMethod\n\nType: `string`<br>\nDefault: `transform`\nValues: `['transform'|'flexbox']`\n\nTo use with [`center` utility](https://ismamz.github.io/postcss-utilities/docs#center)\n\n##### textHideMethod\n\nType: `string`<br>\nDefault: `indent`\nValues: `['indent'|'font']`\n\nTo use with [`text-hide` utility](https://ismamz.github.io/postcss-utilities/docs#text-hide)\n\n\n## Contributing\n\nThe list of utilities is open for suggestions.\n\n- Do you think that we should include a new utility? [Create an issue with you proposal](https://github.com/ismamz/postcss-utilities/issues/new).\n- Found an issue? [Report it!](https://github.com/ismamz/postcss-utilities/issues/new).\n- Would you like to contribute with code or documentation? [Send a pull request](https://github.com/ismamz/postcss-utilities/pull/new/master)\n\n\n## Contributors\n\n- [Marcus Tisäter](https://github.com/marcustisater)\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ismamz/postcss-utilities.git"
  },
  "scripts": {
    "test": "ava && eslint **/*.js"
  },
  "version": "0.8.0"
}
