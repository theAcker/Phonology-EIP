{
  "_args": [
    [
      {
        "raw": "react-md-spinner@^0.3.0",
        "scope": null,
        "escapedName": "react-md-spinner",
        "name": "react-md-spinner",
        "rawSpec": "^0.3.0",
        "spec": ">=0.3.0 <0.4.0",
        "type": "range"
      },
      "C:\\Users\\Alexandre\\VoiceWatcher"
    ]
  ],
  "_from": "react-md-spinner@>=0.3.0 <0.4.0",
  "_id": "react-md-spinner@0.3.0",
  "_inCache": true,
  "_location": "/react-md-spinner",
  "_nodeVersion": "9.4.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-md-spinner_0.3.0_1530985419801_0.39718514730024324"
  },
  "_npmUser": {
    "name": "tsuyoshiwada",
    "email": "wadackel@gmail.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {
    "caniuse-db": "1.0.30000966",
    "electron-to-chromium": "1.3.130",
    "lodash.memoize": "4.1.2",
    "lodash.uniq": "4.5.0"
  },
  "_requested": {
    "raw": "react-md-spinner@^0.3.0",
    "scope": null,
    "escapedName": "react-md-spinner",
    "name": "react-md-spinner",
    "rawSpec": "^0.3.0",
    "spec": ">=0.3.0 <0.4.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-md-spinner/-/react-md-spinner-0.3.0.tgz",
  "_shasum": "3b3538853aba3d8bc317c2e6bfc27f57657c5f43",
  "_shrinkwrap": null,
  "_spec": "react-md-spinner@^0.3.0",
  "_where": "C:\\Users\\Alexandre\\VoiceWatcher",
  "author": {
    "name": "tsuyoshiwada"
  },
  "browserify": {
    "transform": [
      "babelify"
    ]
  },
  "bugs": {
    "url": "https://github.com/tsuyoshiwada/react-md-spinner/issues"
  },
  "dependencies": {
    "caniuse-api": "^1.6.1",
    "css-keyframer": "1.0.1",
    "exenv": "^1.2.1",
    "inline-style-prefixer": "^3.0.3",
    "prop-types": "^15.5.8"
  },
  "description": "Material Design spinner components for React.js.",
  "devDependencies": {
    "babel-cli": "^6.23.0",
    "babel-eslint": "^7.1.1",
    "babel-preset-latest": "^6.22.0",
    "babel-preset-power-assert": "^1.0.0",
    "babel-preset-react": "^6.23.0",
    "babel-preset-stage-1": "^6.22.0",
    "babel-register": "^6.23.0",
    "babelify": "^7.3.0",
    "browser-sync": "^2.18.8",
    "browserify": "^14.1.0",
    "cpx": "^1.5.0",
    "enzyme": "^2.7.1",
    "eslint": "^3.17.1",
    "eslint-plugin-react": "^6.10.0",
    "jsdom": "^9.11.0",
    "material-ui": "^0.17.0",
    "mocha": "^3.2.0",
    "onchange": "^3.2.1",
    "power-assert": "^1.4.2",
    "react-addons-test-utils": "^15.4.2",
    "react-highlight": "^0.10.0",
    "react-tap-event-plugin": "^2.0.1",
    "watchify": "^3.9.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-7MZx3eSCjUNocTQuYFzt2BF3J69s9UNSnOG2I6R+Yg2okbi3VzRVY0Ers7C7dTXHhpNMYeQoaI1juIz72r3bng==",
    "shasum": "3b3538853aba3d8bc317c2e6bfc27f57657c5f43",
    "tarball": "https://registry.npmjs.org/react-md-spinner/-/react-md-spinner-0.3.0.tgz",
    "fileCount": 13,
    "unpackedSize": 39078,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbQPvLCRA9TVsSAnZWagAAgCIP/i+BWz2a+OHlhxnf+bnw\nM2KKgQqFzMNJ6OjP1ZurLCo/eX1tDrfH7xBGzr2c9WEV/1I32iihlfUXDVUq\nw9oqVLN03N0UOwa+sMAZeZK2gMuxYx7GN8ygy1KLOWJryXVklJkqY2PWYzCI\no9I7nJiT9kyo/xvbl7RFnI2bKi2nIKa63qmzp/HgnGprXfHlfkvNhYkNotrS\nAqj00Zxpf2A4yIVb539LwmoxrMHymlueJy9JUFL4d9i+HAbfWRflhnOB4eRr\nvADTEuWpf4bLCV5WD9cBeCJBQ0Fi8YA2ZdSicE6z7McyuNynSTsyAxr8W351\nqCPo1UveDvJko7dCH1lCfcf9TmfjBR1i1ySJdo7VEglct/v+ZqblFq9oBhMJ\n5aWlg045il8UHS5qzvzx4r6CZryF607V24cILnMyBdKucjA0Hdo3JADCXg2F\n7szmTRY7sjbghBIAaYB/m9esUWpZ6RsLQiWQhpVZUYh0OfPzygWr8e3XmoyO\np/EYp53aKu+RrQSxZJK8FSPk64JwogilE0iUukyl7uIQX0OuyylHrfOUtMfR\nsZTqnnIam8osaUj8iXilCjUpfZ8jFAEj4zX8iGeTufoQ2UnGOu84xktUSm45\nBwBabF415YbPHrQqE0P5fdxfQVg+tuK+YOE3mxLEn4Mw+trKHnaK1MAGJWXI\njsuC\r\n=Nvm+\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [
    "lib",
    "test"
  ],
  "gitHead": "ef8c9e23e86ebb37f28532e09ffa4316b7a21584",
  "homepage": "https://github.com/tsuyoshiwada/react-md-spinner#readme",
  "keywords": [
    "react",
    "react-component",
    "material design",
    "spinner",
    "loader"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "tsuyoshiwada",
      "email": "v23.b.wada@gmail.com"
    }
  ],
  "name": "react-md-spinner",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": ">=15.3.0",
    "react-dom": ">=15.3.0"
  },
  "readme": "# <img src=\"https://raw.githubusercontent.com/tsuyoshiwada/react-md-spinner/images/logo%402x.png\" width=\"400\" height=\"51.5\" />\n\n[![Build Status](http://img.shields.io/travis/tsuyoshiwada/react-md-spinner.svg?style=flat-square)](https://travis-ci.org/tsuyoshiwada/react-md-spinner)\n[![npm version](https://img.shields.io/npm/v/react-md-spinner.svg?style=flat-square)](http://badge.fury.io/js/react-md-spinner)\n[![David](https://img.shields.io/david/tsuyoshiwada/react-md-spinner.svg?style=flat-square)](https://david-dm.org/tsuyoshiwada/react-md-spinner/)\n\nMaterial Design spinner components for React.js.\n\n[![DEMO Screen Shot](https://raw.githubusercontent.com/tsuyoshiwada/react-md-spinner/images/screenshot.gif)](https://tsuyoshiwada.github.io/react-md-spinner/)\n\nSee demo page: https://tsuyoshiwada.github.io/react-md-spinner/\n\n\n## Table of Contents\n\n* [Install](#install)\n* [Features](#features)\n* [Getting started](#getting-started)\n    - [Basic Usage](#basic-usage)\n    - [Server-Side Rendering](#server-side-rendering)\n* [API](#api)\n    - [Props](#props)\n    - [ssrBehavior](#ssrbehavior)\n* [License](#license)\n* [ChangeLog](#changelog)\n* [Development](#development)\n* [Contribution](#contribution)\n* [Author](#author)\n\n\n\n## Install\n\nYou can install the [react-md-spinner](https://www.npmjs.com/package/react-md-spinner) from [npm](https://www.npmjs.com/).\n\n```bash\n$ npm install react-md-spinner\n```\n\n\n## Features\n\n* You can start using with zero configuration!\n* Support to change of color, size, border and animation speed.\n* It can also be used in single color.\n* Support Server-Side Rendering.\n\n\n## Getting started\n\n### Basic Usage\n\nBecause it is made of 100% inline styles, you can start using it right away without setting.\n\n```javascript\nimport React, { Component } from \"react\";\nimport MDSpinner from \"react-md-spinner\";\n\nexport default class SpinnerExample extends Component {\n  render() {\n    return (\n      <div>\n        <MDSpinner />\n      </div>\n    );\n  }\n}\n```\n\n\n### Server-Side Rendering\n\nThe following is an example of Server-Side Rendering.\n\nPlease checkout [examples](./examples/) directory for details.\n\nThe point is to use `ssrBehavior` and specify `userAgent`.\n\n**Note:** It is a different code from the actual example.\n\n#### Examples\n\n**Client-Side:**\n\n```javascript\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./App\";\n\nrender(\n  <App userAgent={window.navigator.userAgent} />,\n  document.getElementById(\"app\")\n);\n```\n\n**Server-Side:**\n\n```javascript\nimport { ssrBehavior } from \"react-md-spinner\";\n\n// ...\n\nconst html = (root, userAgent) => `<!DOCTYPE html>\n  <html lang=\"en\">\n  <head>\n    ${ssrBehavior.getStylesheetString(userAgent)}\n  </head>\n  <body>\n    <div id=\"app\">${renderToString(root)}</div>\n    <script src=\"./bundle.js\"></script>\n  </body>\n</html>`;\n\napp.get(\"/\", (req, res) => {\n  const userAgent = req.headers[\"user-agent\"];\n\n  res.status(200).send(html(\n    <App userAgent={userAgent} />,\n    userAgent\n  ));\n});\n```\n\n**App:**\n\n```javascript\nclass App extends Component {\n  render() {\n    return <MDSpinner\n      userAgent={this.props.userAgent}\n    />;\n  }\n}\n```\n\n\n## API\n\n### Props\n\nYou can set the following properties.\n\n| Property      | Type               | Default                               | Description                                                                                                                                  |\n|:--------------|:-------------------|:--------------------------------------|:---------------------------------------------------------------------------------------------------------------------------------------------|\n| `className`   | `string`           | `undefined`                           | Set the `className` for the component.                                                                                                       |\n| `style`       | `object`           | `undefined`                           | Set the root element style in the component.                                                                                                 |\n| `size`        | `number`, `string` | `28`                                  | Set the size (diameter) of the spinner circle.                                                                                               |\n| `borderSize`  | `number`           | `Custom formula from size`            | Set the spinner border size of.                                                                                                              |\n| `duration`    | `number`           | `1333`                                | Set the animation duration (ms) of the spinner.                                                                                              |\n| `color1`      | `string`           | ![color1][color1] `rgb(66, 165, 245)` | The color of the spinner. Can be set to any valid CSS string (hex, rgb, rgba).                                                               |\n| `color2`      | `string`           | ![color2][color2] `rgb(239, 83, 80)`  | Same as above                                                                                                                                |\n| `color3`      | `string`           | ![color3][color3] `rgb(253, 216, 53)` | Same as adove                                                                                                                                |\n| `color4`      | `string`           | ![color4][color4] `rgb(76, 175, 80)`  | Same as adove                                                                                                                                |\n| `singleColor` | `string`           | `undefined`                           | Same as adove. Use this if the spinner should be in only one single color. The settings (props) for `color1` ~ `4` will be ignored by setting this `singleColor` property.                                               |\n| `userAgent`   | `string`           | `undefined`                           | Set the value of the current User Agent when generating inline styles, so that server-rendered markup is identical to client-rendered markup |\n\n[color1]:https://raw.githubusercontent.com/tsuyoshiwada/react-md-spinner/images/color1.png\n[color2]:https://raw.githubusercontent.com/tsuyoshiwada/react-md-spinner/images/color2.png\n[color3]:https://raw.githubusercontent.com/tsuyoshiwada/react-md-spinner/images/color3.png\n[color4]:https://raw.githubusercontent.com/tsuyoshiwada/react-md-spinner/images/color4.png\n\n\n\n### ssrBehavior\n\nIn Server-Side Rendering you need to inject `@keyframes` inside the `<head>`.  \n`react-md-spinner` provides utilities to handle them.\n\n#### API\n\n* `ssrBehavior.getStylesheetString([userAgent: string]): string`\n* `ssrBehavior.getStylesheetComponent([userAgent: string]): React.Component`\n\n#### As string output\n\n```javascript\nimport { ssrBehavior } from \"react-md-spinner\";\n\nconst html = userAgent => `<!DOCTYPE html>\n  <head>\n    ${ssrBehavior.getStylesheetString(userAgent)}\n  </head>\n  <body>\n    <div id=\"app\">\n      // React stuff here\n    </div>\n  </body>\n</html>`;\n\n// ...\n\nhtml(/* User-Agent */);\n```\n\n#### As React Components\n\n```javascript\nimport { ssrBehavior } from \"react-md-spinner\";\n\nconst HTML = userAgent => (\n  <html>\n    <head>\n      {ssrBehavior.getStylesheetComponent(userAgent)}\n    </head>\n    <body>\n      <div id=\"app\">\n        // React stuff here\n      </div>\n    </body>\n  </html>\n);\n\n// ...\n\nHTML(/* User-Agent */);\n```\n\n\n\n## License\n\nReleased under the [MIT License](./LICENSE)\n\n\n\n## ChangeLog\n\nSee [CHANGELOG.md](./CHANGELOG.md)\n\n\n\n## Development\n\nInitialization of the project.\n\n```bash\n$ cd /your/project/dir\n$ git clone https://github.com/tsuyoshiwada/react-md-spinner.git\n```\n\nInstall some dependencies.\n\n```bash\n$ npm install\n```\n\nStart the development and can you see demo page (access to the `http://localhost:3000/`).\n\n```bash\n$ npm start\n```\n\nRun lint and testing.\n\n```bash\n$ npm test\n```\n\nGenerates build file.\n\n```bash\n$ npm run build\n```\n\n\n## Contribution\n\nThank you for your interest in react-md-spinner.js.  \nBugs, feature requests and comments are more than welcome in the [issues](https://github.com/tsuyoshiwada/react-md-spinner/issues).\n\n**Before you open a PR:**\n\nBe careful to follow the code style of the project. Run `npm test` after your changes and ensure you do not introduce any new errors or warnings.\nAll new features and changes need documentation.\n\nThanks!\n\n\n\n## Author\n\n[tsuyoshiwada](https://github.com/tsuyoshiwada)\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/tsuyoshiwada/react-md-spinner.git"
  },
  "scripts": {
    "build": "babel --presets react -d lib/ src/ && cpx 'src/index.d.ts' lib/",
    "docs": "npm run docs:server & npm run docs:watch",
    "docs:build": "browserify -e docs/entry.js -o docs/bundle.js",
    "docs:server": "browser-sync start -s docs/ -f 'docs/**/*.html, docs/**/*.css, docs/bundle.js' --no-open --no-ghost --no-notify",
    "docs:watch": "watchify -e docs/entry.js -o docs/bundle.js -d -v & onchange 'docs/bundle.js' -- browser-sync reload",
    "lint": "eslint 'src/**/*.js' 'test/**/*.js' '.eslintrc.js' --no-ignore",
    "mocha": "mocha test/**/*.spec.js -r test/.setup --compilers js:babel-register",
    "prepublish": "npm run build",
    "start": "npm run watch & npm run test:watch & npm run docs",
    "test": "npm run lint && npm run mocha",
    "test:watch": "npm run mocha -- -w",
    "watch": "onchange 'src/**/*' -- npm run build"
  },
  "types": "lib/index.d.ts",
  "version": "0.3.0"
}
